/*
 * DOJAH Publilc APIs
 *
 * Use Dojah to verify, onboard and manage user identity across Africa!
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://konfigthis.com
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Dojah.Net.Client.OpenAPIDateConverter;

namespace Dojah.Net.Model
{
    /// <summary>
    /// FraudGetEmailReputationResponseEntityBreachDetails
    /// </summary>
    [DataContract(Name = "FraudGetEmailReputationResponse_entity_breach_details")]
    public partial class FraudGetEmailReputationResponseEntityBreachDetails : IEquatable<FraudGetEmailReputationResponseEntityBreachDetails>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FraudGetEmailReputationResponseEntityBreachDetails" /> class.
        /// </summary>
        /// <param name="haveibeenpwnedListed">haveibeenpwnedListed.</param>
        /// <param name="numberOfBreaches">numberOfBreaches.</param>
        /// <param name="firstBreach">firstBreach.</param>
        /// <param name="breaches">breaches.</param>
        public FraudGetEmailReputationResponseEntityBreachDetails(bool haveibeenpwnedListed = default(bool), decimal numberOfBreaches = default(decimal), string firstBreach = default(string), List<string> breaches = default(List<string>))
        {
            this.HaveibeenpwnedListed = haveibeenpwnedListed;
            this.NumberOfBreaches = numberOfBreaches;
            this.FirstBreach = firstBreach;
            this.Breaches = breaches;
        }

        /// <summary>
        /// Gets or Sets HaveibeenpwnedListed
        /// </summary>
        [DataMember(Name = "haveibeenpwned_listed", EmitDefaultValue = true)]
        public bool HaveibeenpwnedListed { get; set; }

        /// <summary>
        /// Gets or Sets NumberOfBreaches
        /// </summary>
        [DataMember(Name = "number_of_breaches", EmitDefaultValue = false)]
        public decimal NumberOfBreaches { get; set; }

        /// <summary>
        /// Gets or Sets FirstBreach
        /// </summary>
        [DataMember(Name = "first_breach", EmitDefaultValue = true)]
        public string FirstBreach { get; set; }

        /// <summary>
        /// Gets or Sets Breaches
        /// </summary>
        [DataMember(Name = "breaches", EmitDefaultValue = false)]
        public List<string> Breaches { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class FraudGetEmailReputationResponseEntityBreachDetails {\n");
            sb.Append("  HaveibeenpwnedListed: ").Append(HaveibeenpwnedListed).Append("\n");
            sb.Append("  NumberOfBreaches: ").Append(NumberOfBreaches).Append("\n");
            sb.Append("  FirstBreach: ").Append(FirstBreach).Append("\n");
            sb.Append("  Breaches: ").Append(Breaches).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as FraudGetEmailReputationResponseEntityBreachDetails);
        }

        /// <summary>
        /// Returns true if FraudGetEmailReputationResponseEntityBreachDetails instances are equal
        /// </summary>
        /// <param name="input">Instance of FraudGetEmailReputationResponseEntityBreachDetails to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(FraudGetEmailReputationResponseEntityBreachDetails input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.HaveibeenpwnedListed == input.HaveibeenpwnedListed ||
                    this.HaveibeenpwnedListed.Equals(input.HaveibeenpwnedListed)
                ) && 
                (
                    this.NumberOfBreaches == input.NumberOfBreaches ||
                    this.NumberOfBreaches.Equals(input.NumberOfBreaches)
                ) && 
                (
                    this.FirstBreach == input.FirstBreach ||
                    (this.FirstBreach != null &&
                    this.FirstBreach.Equals(input.FirstBreach))
                ) && 
                (
                    this.Breaches == input.Breaches ||
                    this.Breaches != null &&
                    input.Breaches != null &&
                    this.Breaches.SequenceEqual(input.Breaches)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.HaveibeenpwnedListed.GetHashCode();
                hashCode = (hashCode * 59) + this.NumberOfBreaches.GetHashCode();
                if (this.FirstBreach != null)
                {
                    hashCode = (hashCode * 59) + this.FirstBreach.GetHashCode();
                }
                if (this.Breaches != null)
                {
                    hashCode = (hashCode * 59) + this.Breaches.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
