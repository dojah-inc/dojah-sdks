/*
DOJAH APIs

Use Dojah to verify, onboard and manage user identity across Africa!

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package dojah

import (
	"encoding/json"
)

// GetAccountAnalysisResponseEntityInflowBreakdown struct for GetAccountAnalysisResponseEntityInflowBreakdown
type GetAccountAnalysisResponseEntityInflowBreakdown struct {
	AdditionalIncome *string `json:"AdditionalIncome,omitempty"`
	RecurringSalaryPayments NullableString `json:"RecurringSalaryPayments,omitempty"`
	ASalaryEarner *string `json:"aSalaryEarner,omitempty"`
	AverageAdditionalIncome *float32 `json:"averageAdditionalIncome,omitempty"`
	AverageGuaranteedSalary *float32 `json:"averageGuaranteedSalary,omitempty"`
	EstimatedSalaryPaymentDay NullableString `json:"estimatedSalaryPaymentDay,omitempty"`
	LastDateOfSalaryPayment NullableString `json:"lastDateOfSalaryPayment,omitempty"`
	MinimumSalary *float32 `json:"minimumSalary,omitempty"`
	NetAverageMonthlySalary *float32 `json:"netAverageMonthlySalary,omitempty"`
	NumberOfAdditionalIncomePayments *float32 `json:"numberOfAdditionalIncomePayments,omitempty"`
	TotalnumberOfSalaryPayments *float32 `json:"totalnumberOfSalaryPayments,omitempty"`
}

// NewGetAccountAnalysisResponseEntityInflowBreakdown instantiates a new GetAccountAnalysisResponseEntityInflowBreakdown object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAccountAnalysisResponseEntityInflowBreakdown() *GetAccountAnalysisResponseEntityInflowBreakdown {
	this := GetAccountAnalysisResponseEntityInflowBreakdown{}
	return &this
}

// NewGetAccountAnalysisResponseEntityInflowBreakdownWithDefaults instantiates a new GetAccountAnalysisResponseEntityInflowBreakdown object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAccountAnalysisResponseEntityInflowBreakdownWithDefaults() *GetAccountAnalysisResponseEntityInflowBreakdown {
	this := GetAccountAnalysisResponseEntityInflowBreakdown{}
	return &this
}

// GetAdditionalIncome returns the AdditionalIncome field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) GetAdditionalIncome() string {
	if o == nil || isNil(o.AdditionalIncome) {
		var ret string
		return ret
	}
	return *o.AdditionalIncome
}

// GetAdditionalIncomeOk returns a tuple with the AdditionalIncome field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) GetAdditionalIncomeOk() (*string, bool) {
	if o == nil || isNil(o.AdditionalIncome) {
    return nil, false
	}
	return o.AdditionalIncome, true
}

// HasAdditionalIncome returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) HasAdditionalIncome() bool {
	if o != nil && !isNil(o.AdditionalIncome) {
		return true
	}

	return false
}

// SetAdditionalIncome gets a reference to the given string and assigns it to the AdditionalIncome field.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) SetAdditionalIncome(v string) {
	o.AdditionalIncome = &v
}

// GetRecurringSalaryPayments returns the RecurringSalaryPayments field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) GetRecurringSalaryPayments() string {
	if o == nil || isNil(o.RecurringSalaryPayments.Get()) {
		var ret string
		return ret
	}
	return *o.RecurringSalaryPayments.Get()
}

// GetRecurringSalaryPaymentsOk returns a tuple with the RecurringSalaryPayments field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) GetRecurringSalaryPaymentsOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.RecurringSalaryPayments.Get(), o.RecurringSalaryPayments.IsSet()
}

// HasRecurringSalaryPayments returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) HasRecurringSalaryPayments() bool {
	if o != nil && o.RecurringSalaryPayments.IsSet() {
		return true
	}

	return false
}

// SetRecurringSalaryPayments gets a reference to the given NullableString and assigns it to the RecurringSalaryPayments field.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) SetRecurringSalaryPayments(v string) {
	o.RecurringSalaryPayments.Set(&v)
}
// SetRecurringSalaryPaymentsNil sets the value for RecurringSalaryPayments to be an explicit nil
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) SetRecurringSalaryPaymentsNil() {
	o.RecurringSalaryPayments.Set(nil)
}

// UnsetRecurringSalaryPayments ensures that no value is present for RecurringSalaryPayments, not even an explicit nil
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) UnsetRecurringSalaryPayments() {
	o.RecurringSalaryPayments.Unset()
}

// GetASalaryEarner returns the ASalaryEarner field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) GetASalaryEarner() string {
	if o == nil || isNil(o.ASalaryEarner) {
		var ret string
		return ret
	}
	return *o.ASalaryEarner
}

// GetASalaryEarnerOk returns a tuple with the ASalaryEarner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) GetASalaryEarnerOk() (*string, bool) {
	if o == nil || isNil(o.ASalaryEarner) {
    return nil, false
	}
	return o.ASalaryEarner, true
}

// HasASalaryEarner returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) HasASalaryEarner() bool {
	if o != nil && !isNil(o.ASalaryEarner) {
		return true
	}

	return false
}

// SetASalaryEarner gets a reference to the given string and assigns it to the ASalaryEarner field.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) SetASalaryEarner(v string) {
	o.ASalaryEarner = &v
}

// GetAverageAdditionalIncome returns the AverageAdditionalIncome field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) GetAverageAdditionalIncome() float32 {
	if o == nil || isNil(o.AverageAdditionalIncome) {
		var ret float32
		return ret
	}
	return *o.AverageAdditionalIncome
}

// GetAverageAdditionalIncomeOk returns a tuple with the AverageAdditionalIncome field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) GetAverageAdditionalIncomeOk() (*float32, bool) {
	if o == nil || isNil(o.AverageAdditionalIncome) {
    return nil, false
	}
	return o.AverageAdditionalIncome, true
}

// HasAverageAdditionalIncome returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) HasAverageAdditionalIncome() bool {
	if o != nil && !isNil(o.AverageAdditionalIncome) {
		return true
	}

	return false
}

// SetAverageAdditionalIncome gets a reference to the given float32 and assigns it to the AverageAdditionalIncome field.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) SetAverageAdditionalIncome(v float32) {
	o.AverageAdditionalIncome = &v
}

// GetAverageGuaranteedSalary returns the AverageGuaranteedSalary field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) GetAverageGuaranteedSalary() float32 {
	if o == nil || isNil(o.AverageGuaranteedSalary) {
		var ret float32
		return ret
	}
	return *o.AverageGuaranteedSalary
}

// GetAverageGuaranteedSalaryOk returns a tuple with the AverageGuaranteedSalary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) GetAverageGuaranteedSalaryOk() (*float32, bool) {
	if o == nil || isNil(o.AverageGuaranteedSalary) {
    return nil, false
	}
	return o.AverageGuaranteedSalary, true
}

// HasAverageGuaranteedSalary returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) HasAverageGuaranteedSalary() bool {
	if o != nil && !isNil(o.AverageGuaranteedSalary) {
		return true
	}

	return false
}

// SetAverageGuaranteedSalary gets a reference to the given float32 and assigns it to the AverageGuaranteedSalary field.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) SetAverageGuaranteedSalary(v float32) {
	o.AverageGuaranteedSalary = &v
}

// GetEstimatedSalaryPaymentDay returns the EstimatedSalaryPaymentDay field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) GetEstimatedSalaryPaymentDay() string {
	if o == nil || isNil(o.EstimatedSalaryPaymentDay.Get()) {
		var ret string
		return ret
	}
	return *o.EstimatedSalaryPaymentDay.Get()
}

// GetEstimatedSalaryPaymentDayOk returns a tuple with the EstimatedSalaryPaymentDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) GetEstimatedSalaryPaymentDayOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.EstimatedSalaryPaymentDay.Get(), o.EstimatedSalaryPaymentDay.IsSet()
}

// HasEstimatedSalaryPaymentDay returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) HasEstimatedSalaryPaymentDay() bool {
	if o != nil && o.EstimatedSalaryPaymentDay.IsSet() {
		return true
	}

	return false
}

// SetEstimatedSalaryPaymentDay gets a reference to the given NullableString and assigns it to the EstimatedSalaryPaymentDay field.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) SetEstimatedSalaryPaymentDay(v string) {
	o.EstimatedSalaryPaymentDay.Set(&v)
}
// SetEstimatedSalaryPaymentDayNil sets the value for EstimatedSalaryPaymentDay to be an explicit nil
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) SetEstimatedSalaryPaymentDayNil() {
	o.EstimatedSalaryPaymentDay.Set(nil)
}

// UnsetEstimatedSalaryPaymentDay ensures that no value is present for EstimatedSalaryPaymentDay, not even an explicit nil
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) UnsetEstimatedSalaryPaymentDay() {
	o.EstimatedSalaryPaymentDay.Unset()
}

// GetLastDateOfSalaryPayment returns the LastDateOfSalaryPayment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) GetLastDateOfSalaryPayment() string {
	if o == nil || isNil(o.LastDateOfSalaryPayment.Get()) {
		var ret string
		return ret
	}
	return *o.LastDateOfSalaryPayment.Get()
}

// GetLastDateOfSalaryPaymentOk returns a tuple with the LastDateOfSalaryPayment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) GetLastDateOfSalaryPaymentOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.LastDateOfSalaryPayment.Get(), o.LastDateOfSalaryPayment.IsSet()
}

// HasLastDateOfSalaryPayment returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) HasLastDateOfSalaryPayment() bool {
	if o != nil && o.LastDateOfSalaryPayment.IsSet() {
		return true
	}

	return false
}

// SetLastDateOfSalaryPayment gets a reference to the given NullableString and assigns it to the LastDateOfSalaryPayment field.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) SetLastDateOfSalaryPayment(v string) {
	o.LastDateOfSalaryPayment.Set(&v)
}
// SetLastDateOfSalaryPaymentNil sets the value for LastDateOfSalaryPayment to be an explicit nil
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) SetLastDateOfSalaryPaymentNil() {
	o.LastDateOfSalaryPayment.Set(nil)
}

// UnsetLastDateOfSalaryPayment ensures that no value is present for LastDateOfSalaryPayment, not even an explicit nil
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) UnsetLastDateOfSalaryPayment() {
	o.LastDateOfSalaryPayment.Unset()
}

// GetMinimumSalary returns the MinimumSalary field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) GetMinimumSalary() float32 {
	if o == nil || isNil(o.MinimumSalary) {
		var ret float32
		return ret
	}
	return *o.MinimumSalary
}

// GetMinimumSalaryOk returns a tuple with the MinimumSalary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) GetMinimumSalaryOk() (*float32, bool) {
	if o == nil || isNil(o.MinimumSalary) {
    return nil, false
	}
	return o.MinimumSalary, true
}

// HasMinimumSalary returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) HasMinimumSalary() bool {
	if o != nil && !isNil(o.MinimumSalary) {
		return true
	}

	return false
}

// SetMinimumSalary gets a reference to the given float32 and assigns it to the MinimumSalary field.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) SetMinimumSalary(v float32) {
	o.MinimumSalary = &v
}

// GetNetAverageMonthlySalary returns the NetAverageMonthlySalary field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) GetNetAverageMonthlySalary() float32 {
	if o == nil || isNil(o.NetAverageMonthlySalary) {
		var ret float32
		return ret
	}
	return *o.NetAverageMonthlySalary
}

// GetNetAverageMonthlySalaryOk returns a tuple with the NetAverageMonthlySalary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) GetNetAverageMonthlySalaryOk() (*float32, bool) {
	if o == nil || isNil(o.NetAverageMonthlySalary) {
    return nil, false
	}
	return o.NetAverageMonthlySalary, true
}

// HasNetAverageMonthlySalary returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) HasNetAverageMonthlySalary() bool {
	if o != nil && !isNil(o.NetAverageMonthlySalary) {
		return true
	}

	return false
}

// SetNetAverageMonthlySalary gets a reference to the given float32 and assigns it to the NetAverageMonthlySalary field.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) SetNetAverageMonthlySalary(v float32) {
	o.NetAverageMonthlySalary = &v
}

// GetNumberOfAdditionalIncomePayments returns the NumberOfAdditionalIncomePayments field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) GetNumberOfAdditionalIncomePayments() float32 {
	if o == nil || isNil(o.NumberOfAdditionalIncomePayments) {
		var ret float32
		return ret
	}
	return *o.NumberOfAdditionalIncomePayments
}

// GetNumberOfAdditionalIncomePaymentsOk returns a tuple with the NumberOfAdditionalIncomePayments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) GetNumberOfAdditionalIncomePaymentsOk() (*float32, bool) {
	if o == nil || isNil(o.NumberOfAdditionalIncomePayments) {
    return nil, false
	}
	return o.NumberOfAdditionalIncomePayments, true
}

// HasNumberOfAdditionalIncomePayments returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) HasNumberOfAdditionalIncomePayments() bool {
	if o != nil && !isNil(o.NumberOfAdditionalIncomePayments) {
		return true
	}

	return false
}

// SetNumberOfAdditionalIncomePayments gets a reference to the given float32 and assigns it to the NumberOfAdditionalIncomePayments field.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) SetNumberOfAdditionalIncomePayments(v float32) {
	o.NumberOfAdditionalIncomePayments = &v
}

// GetTotalnumberOfSalaryPayments returns the TotalnumberOfSalaryPayments field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) GetTotalnumberOfSalaryPayments() float32 {
	if o == nil || isNil(o.TotalnumberOfSalaryPayments) {
		var ret float32
		return ret
	}
	return *o.TotalnumberOfSalaryPayments
}

// GetTotalnumberOfSalaryPaymentsOk returns a tuple with the TotalnumberOfSalaryPayments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) GetTotalnumberOfSalaryPaymentsOk() (*float32, bool) {
	if o == nil || isNil(o.TotalnumberOfSalaryPayments) {
    return nil, false
	}
	return o.TotalnumberOfSalaryPayments, true
}

// HasTotalnumberOfSalaryPayments returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) HasTotalnumberOfSalaryPayments() bool {
	if o != nil && !isNil(o.TotalnumberOfSalaryPayments) {
		return true
	}

	return false
}

// SetTotalnumberOfSalaryPayments gets a reference to the given float32 and assigns it to the TotalnumberOfSalaryPayments field.
func (o *GetAccountAnalysisResponseEntityInflowBreakdown) SetTotalnumberOfSalaryPayments(v float32) {
	o.TotalnumberOfSalaryPayments = &v
}

func (o GetAccountAnalysisResponseEntityInflowBreakdown) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AdditionalIncome) {
		toSerialize["AdditionalIncome"] = o.AdditionalIncome
	}
	if o.RecurringSalaryPayments.IsSet() {
		toSerialize["RecurringSalaryPayments"] = o.RecurringSalaryPayments.Get()
	}
	if !isNil(o.ASalaryEarner) {
		toSerialize["aSalaryEarner"] = o.ASalaryEarner
	}
	if !isNil(o.AverageAdditionalIncome) {
		toSerialize["averageAdditionalIncome"] = o.AverageAdditionalIncome
	}
	if !isNil(o.AverageGuaranteedSalary) {
		toSerialize["averageGuaranteedSalary"] = o.AverageGuaranteedSalary
	}
	if o.EstimatedSalaryPaymentDay.IsSet() {
		toSerialize["estimatedSalaryPaymentDay"] = o.EstimatedSalaryPaymentDay.Get()
	}
	if o.LastDateOfSalaryPayment.IsSet() {
		toSerialize["lastDateOfSalaryPayment"] = o.LastDateOfSalaryPayment.Get()
	}
	if !isNil(o.MinimumSalary) {
		toSerialize["minimumSalary"] = o.MinimumSalary
	}
	if !isNil(o.NetAverageMonthlySalary) {
		toSerialize["netAverageMonthlySalary"] = o.NetAverageMonthlySalary
	}
	if !isNil(o.NumberOfAdditionalIncomePayments) {
		toSerialize["numberOfAdditionalIncomePayments"] = o.NumberOfAdditionalIncomePayments
	}
	if !isNil(o.TotalnumberOfSalaryPayments) {
		toSerialize["totalnumberOfSalaryPayments"] = o.TotalnumberOfSalaryPayments
	}
	return json.Marshal(toSerialize)
}

type NullableGetAccountAnalysisResponseEntityInflowBreakdown struct {
	value *GetAccountAnalysisResponseEntityInflowBreakdown
	isSet bool
}

func (v NullableGetAccountAnalysisResponseEntityInflowBreakdown) Get() *GetAccountAnalysisResponseEntityInflowBreakdown {
	return v.value
}

func (v *NullableGetAccountAnalysisResponseEntityInflowBreakdown) Set(val *GetAccountAnalysisResponseEntityInflowBreakdown) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAccountAnalysisResponseEntityInflowBreakdown) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAccountAnalysisResponseEntityInflowBreakdown) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAccountAnalysisResponseEntityInflowBreakdown(val *GetAccountAnalysisResponseEntityInflowBreakdown) *NullableGetAccountAnalysisResponseEntityInflowBreakdown {
	return &NullableGetAccountAnalysisResponseEntityInflowBreakdown{value: val, isSet: true}
}

func (v NullableGetAccountAnalysisResponseEntityInflowBreakdown) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAccountAnalysisResponseEntityInflowBreakdown) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


