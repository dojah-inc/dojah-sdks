/*
DOJAH APIs

Use Dojah to verify, onboard and manage user identity across Africa!

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package dojah

import (
	"encoding/json"
)

// GetAccountResponse struct for GetAccountResponse
type GetAccountResponse struct {
	Name *string `json:"name,omitempty"`
	AccountNumber *string `json:"account_number,omitempty"`
	Bvn *string `json:"bvn,omitempty"`
	AccountType *string `json:"account_type,omitempty"`
	Currency *string `json:"currency,omitempty"`
	AccountStatus *string `json:"account_status,omitempty"`
	Balance *string `json:"balance,omitempty"`
}

// NewGetAccountResponse instantiates a new GetAccountResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAccountResponse() *GetAccountResponse {
	this := GetAccountResponse{}
	return &this
}

// NewGetAccountResponseWithDefaults instantiates a new GetAccountResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAccountResponseWithDefaults() *GetAccountResponse {
	this := GetAccountResponse{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetAccountResponse) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountResponse) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetAccountResponse) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetAccountResponse) SetName(v string) {
	o.Name = &v
}

// GetAccountNumber returns the AccountNumber field value if set, zero value otherwise.
func (o *GetAccountResponse) GetAccountNumber() string {
	if o == nil || isNil(o.AccountNumber) {
		var ret string
		return ret
	}
	return *o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountResponse) GetAccountNumberOk() (*string, bool) {
	if o == nil || isNil(o.AccountNumber) {
    return nil, false
	}
	return o.AccountNumber, true
}

// HasAccountNumber returns a boolean if a field has been set.
func (o *GetAccountResponse) HasAccountNumber() bool {
	if o != nil && !isNil(o.AccountNumber) {
		return true
	}

	return false
}

// SetAccountNumber gets a reference to the given string and assigns it to the AccountNumber field.
func (o *GetAccountResponse) SetAccountNumber(v string) {
	o.AccountNumber = &v
}

// GetBvn returns the Bvn field value if set, zero value otherwise.
func (o *GetAccountResponse) GetBvn() string {
	if o == nil || isNil(o.Bvn) {
		var ret string
		return ret
	}
	return *o.Bvn
}

// GetBvnOk returns a tuple with the Bvn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountResponse) GetBvnOk() (*string, bool) {
	if o == nil || isNil(o.Bvn) {
    return nil, false
	}
	return o.Bvn, true
}

// HasBvn returns a boolean if a field has been set.
func (o *GetAccountResponse) HasBvn() bool {
	if o != nil && !isNil(o.Bvn) {
		return true
	}

	return false
}

// SetBvn gets a reference to the given string and assigns it to the Bvn field.
func (o *GetAccountResponse) SetBvn(v string) {
	o.Bvn = &v
}

// GetAccountType returns the AccountType field value if set, zero value otherwise.
func (o *GetAccountResponse) GetAccountType() string {
	if o == nil || isNil(o.AccountType) {
		var ret string
		return ret
	}
	return *o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountResponse) GetAccountTypeOk() (*string, bool) {
	if o == nil || isNil(o.AccountType) {
    return nil, false
	}
	return o.AccountType, true
}

// HasAccountType returns a boolean if a field has been set.
func (o *GetAccountResponse) HasAccountType() bool {
	if o != nil && !isNil(o.AccountType) {
		return true
	}

	return false
}

// SetAccountType gets a reference to the given string and assigns it to the AccountType field.
func (o *GetAccountResponse) SetAccountType(v string) {
	o.AccountType = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *GetAccountResponse) GetCurrency() string {
	if o == nil || isNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountResponse) GetCurrencyOk() (*string, bool) {
	if o == nil || isNil(o.Currency) {
    return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *GetAccountResponse) HasCurrency() bool {
	if o != nil && !isNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *GetAccountResponse) SetCurrency(v string) {
	o.Currency = &v
}

// GetAccountStatus returns the AccountStatus field value if set, zero value otherwise.
func (o *GetAccountResponse) GetAccountStatus() string {
	if o == nil || isNil(o.AccountStatus) {
		var ret string
		return ret
	}
	return *o.AccountStatus
}

// GetAccountStatusOk returns a tuple with the AccountStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountResponse) GetAccountStatusOk() (*string, bool) {
	if o == nil || isNil(o.AccountStatus) {
    return nil, false
	}
	return o.AccountStatus, true
}

// HasAccountStatus returns a boolean if a field has been set.
func (o *GetAccountResponse) HasAccountStatus() bool {
	if o != nil && !isNil(o.AccountStatus) {
		return true
	}

	return false
}

// SetAccountStatus gets a reference to the given string and assigns it to the AccountStatus field.
func (o *GetAccountResponse) SetAccountStatus(v string) {
	o.AccountStatus = &v
}

// GetBalance returns the Balance field value if set, zero value otherwise.
func (o *GetAccountResponse) GetBalance() string {
	if o == nil || isNil(o.Balance) {
		var ret string
		return ret
	}
	return *o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountResponse) GetBalanceOk() (*string, bool) {
	if o == nil || isNil(o.Balance) {
    return nil, false
	}
	return o.Balance, true
}

// HasBalance returns a boolean if a field has been set.
func (o *GetAccountResponse) HasBalance() bool {
	if o != nil && !isNil(o.Balance) {
		return true
	}

	return false
}

// SetBalance gets a reference to the given string and assigns it to the Balance field.
func (o *GetAccountResponse) SetBalance(v string) {
	o.Balance = &v
}

func (o GetAccountResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.AccountNumber) {
		toSerialize["account_number"] = o.AccountNumber
	}
	if !isNil(o.Bvn) {
		toSerialize["bvn"] = o.Bvn
	}
	if !isNil(o.AccountType) {
		toSerialize["account_type"] = o.AccountType
	}
	if !isNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !isNil(o.AccountStatus) {
		toSerialize["account_status"] = o.AccountStatus
	}
	if !isNil(o.Balance) {
		toSerialize["balance"] = o.Balance
	}
	return json.Marshal(toSerialize)
}

type NullableGetAccountResponse struct {
	value *GetAccountResponse
	isSet bool
}

func (v NullableGetAccountResponse) Get() *GetAccountResponse {
	return v.value
}

func (v *NullableGetAccountResponse) Set(val *GetAccountResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAccountResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAccountResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAccountResponse(val *GetAccountResponse) *NullableGetAccountResponse {
	return &NullableGetAccountResponse{value: val, isSet: true}
}

func (v NullableGetAccountResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAccountResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


