/*
DOJAH APIs

Use Dojah to verify, onboard and manage user identity across Africa!

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package dojah

import (
	"encoding/json"
)

// SendSmsResponseEntity struct for SendSmsResponseEntity
type SendSmsResponseEntity struct {
	Status *bool `json:"status,omitempty"`
	Mobile *string `json:"mobile,omitempty"`
	MessageId *string `json:"message_id,omitempty"`
	BatchId *string `json:"batch_id,omitempty"`
}

// NewSendSmsResponseEntity instantiates a new SendSmsResponseEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSendSmsResponseEntity() *SendSmsResponseEntity {
	this := SendSmsResponseEntity{}
	return &this
}

// NewSendSmsResponseEntityWithDefaults instantiates a new SendSmsResponseEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSendSmsResponseEntityWithDefaults() *SendSmsResponseEntity {
	this := SendSmsResponseEntity{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SendSmsResponseEntity) GetStatus() bool {
	if o == nil || isNil(o.Status) {
		var ret bool
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendSmsResponseEntity) GetStatusOk() (*bool, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SendSmsResponseEntity) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given bool and assigns it to the Status field.
func (o *SendSmsResponseEntity) SetStatus(v bool) {
	o.Status = &v
}

// GetMobile returns the Mobile field value if set, zero value otherwise.
func (o *SendSmsResponseEntity) GetMobile() string {
	if o == nil || isNil(o.Mobile) {
		var ret string
		return ret
	}
	return *o.Mobile
}

// GetMobileOk returns a tuple with the Mobile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendSmsResponseEntity) GetMobileOk() (*string, bool) {
	if o == nil || isNil(o.Mobile) {
    return nil, false
	}
	return o.Mobile, true
}

// HasMobile returns a boolean if a field has been set.
func (o *SendSmsResponseEntity) HasMobile() bool {
	if o != nil && !isNil(o.Mobile) {
		return true
	}

	return false
}

// SetMobile gets a reference to the given string and assigns it to the Mobile field.
func (o *SendSmsResponseEntity) SetMobile(v string) {
	o.Mobile = &v
}

// GetMessageId returns the MessageId field value if set, zero value otherwise.
func (o *SendSmsResponseEntity) GetMessageId() string {
	if o == nil || isNil(o.MessageId) {
		var ret string
		return ret
	}
	return *o.MessageId
}

// GetMessageIdOk returns a tuple with the MessageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendSmsResponseEntity) GetMessageIdOk() (*string, bool) {
	if o == nil || isNil(o.MessageId) {
    return nil, false
	}
	return o.MessageId, true
}

// HasMessageId returns a boolean if a field has been set.
func (o *SendSmsResponseEntity) HasMessageId() bool {
	if o != nil && !isNil(o.MessageId) {
		return true
	}

	return false
}

// SetMessageId gets a reference to the given string and assigns it to the MessageId field.
func (o *SendSmsResponseEntity) SetMessageId(v string) {
	o.MessageId = &v
}

// GetBatchId returns the BatchId field value if set, zero value otherwise.
func (o *SendSmsResponseEntity) GetBatchId() string {
	if o == nil || isNil(o.BatchId) {
		var ret string
		return ret
	}
	return *o.BatchId
}

// GetBatchIdOk returns a tuple with the BatchId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendSmsResponseEntity) GetBatchIdOk() (*string, bool) {
	if o == nil || isNil(o.BatchId) {
    return nil, false
	}
	return o.BatchId, true
}

// HasBatchId returns a boolean if a field has been set.
func (o *SendSmsResponseEntity) HasBatchId() bool {
	if o != nil && !isNil(o.BatchId) {
		return true
	}

	return false
}

// SetBatchId gets a reference to the given string and assigns it to the BatchId field.
func (o *SendSmsResponseEntity) SetBatchId(v string) {
	o.BatchId = &v
}

func (o SendSmsResponseEntity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.Mobile) {
		toSerialize["mobile"] = o.Mobile
	}
	if !isNil(o.MessageId) {
		toSerialize["message_id"] = o.MessageId
	}
	if !isNil(o.BatchId) {
		toSerialize["batch_id"] = o.BatchId
	}
	return json.Marshal(toSerialize)
}

type NullableSendSmsResponseEntity struct {
	value *SendSmsResponseEntity
	isSet bool
}

func (v NullableSendSmsResponseEntity) Get() *SendSmsResponseEntity {
	return v.value
}

func (v *NullableSendSmsResponseEntity) Set(val *SendSmsResponseEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableSendSmsResponseEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableSendSmsResponseEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSendSmsResponseEntity(val *SendSmsResponseEntity) *NullableSendSmsResponseEntity {
	return &NullableSendSmsResponseEntity{value: val, isSet: true}
}

func (v NullableSendSmsResponseEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSendSmsResponseEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


