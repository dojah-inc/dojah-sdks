/*
DOJAH APIs

Use Dojah to verify, onboard and manage user identity across Africa!

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package dojah

import (
	"encoding/json"
)

// GetWalletResponseEntity struct for GetWalletResponseEntity
type GetWalletResponseEntity struct {
	WalletId *string `json:"wallet_id,omitempty"`
	WalletAmount *float32 `json:"wallet_amount,omitempty"`
	AccountNumber *string `json:"account_number,omitempty"`
	PhoneNumber *string `json:"phone_number,omitempty"`
	BankName *string `json:"bank_name,omitempty"`
}

// NewGetWalletResponseEntity instantiates a new GetWalletResponseEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetWalletResponseEntity() *GetWalletResponseEntity {
	this := GetWalletResponseEntity{}
	return &this
}

// NewGetWalletResponseEntityWithDefaults instantiates a new GetWalletResponseEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetWalletResponseEntityWithDefaults() *GetWalletResponseEntity {
	this := GetWalletResponseEntity{}
	return &this
}

// GetWalletId returns the WalletId field value if set, zero value otherwise.
func (o *GetWalletResponseEntity) GetWalletId() string {
	if o == nil || isNil(o.WalletId) {
		var ret string
		return ret
	}
	return *o.WalletId
}

// GetWalletIdOk returns a tuple with the WalletId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetWalletResponseEntity) GetWalletIdOk() (*string, bool) {
	if o == nil || isNil(o.WalletId) {
    return nil, false
	}
	return o.WalletId, true
}

// HasWalletId returns a boolean if a field has been set.
func (o *GetWalletResponseEntity) HasWalletId() bool {
	if o != nil && !isNil(o.WalletId) {
		return true
	}

	return false
}

// SetWalletId gets a reference to the given string and assigns it to the WalletId field.
func (o *GetWalletResponseEntity) SetWalletId(v string) {
	o.WalletId = &v
}

// GetWalletAmount returns the WalletAmount field value if set, zero value otherwise.
func (o *GetWalletResponseEntity) GetWalletAmount() float32 {
	if o == nil || isNil(o.WalletAmount) {
		var ret float32
		return ret
	}
	return *o.WalletAmount
}

// GetWalletAmountOk returns a tuple with the WalletAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetWalletResponseEntity) GetWalletAmountOk() (*float32, bool) {
	if o == nil || isNil(o.WalletAmount) {
    return nil, false
	}
	return o.WalletAmount, true
}

// HasWalletAmount returns a boolean if a field has been set.
func (o *GetWalletResponseEntity) HasWalletAmount() bool {
	if o != nil && !isNil(o.WalletAmount) {
		return true
	}

	return false
}

// SetWalletAmount gets a reference to the given float32 and assigns it to the WalletAmount field.
func (o *GetWalletResponseEntity) SetWalletAmount(v float32) {
	o.WalletAmount = &v
}

// GetAccountNumber returns the AccountNumber field value if set, zero value otherwise.
func (o *GetWalletResponseEntity) GetAccountNumber() string {
	if o == nil || isNil(o.AccountNumber) {
		var ret string
		return ret
	}
	return *o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetWalletResponseEntity) GetAccountNumberOk() (*string, bool) {
	if o == nil || isNil(o.AccountNumber) {
    return nil, false
	}
	return o.AccountNumber, true
}

// HasAccountNumber returns a boolean if a field has been set.
func (o *GetWalletResponseEntity) HasAccountNumber() bool {
	if o != nil && !isNil(o.AccountNumber) {
		return true
	}

	return false
}

// SetAccountNumber gets a reference to the given string and assigns it to the AccountNumber field.
func (o *GetWalletResponseEntity) SetAccountNumber(v string) {
	o.AccountNumber = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *GetWalletResponseEntity) GetPhoneNumber() string {
	if o == nil || isNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetWalletResponseEntity) GetPhoneNumberOk() (*string, bool) {
	if o == nil || isNil(o.PhoneNumber) {
    return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *GetWalletResponseEntity) HasPhoneNumber() bool {
	if o != nil && !isNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *GetWalletResponseEntity) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetBankName returns the BankName field value if set, zero value otherwise.
func (o *GetWalletResponseEntity) GetBankName() string {
	if o == nil || isNil(o.BankName) {
		var ret string
		return ret
	}
	return *o.BankName
}

// GetBankNameOk returns a tuple with the BankName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetWalletResponseEntity) GetBankNameOk() (*string, bool) {
	if o == nil || isNil(o.BankName) {
    return nil, false
	}
	return o.BankName, true
}

// HasBankName returns a boolean if a field has been set.
func (o *GetWalletResponseEntity) HasBankName() bool {
	if o != nil && !isNil(o.BankName) {
		return true
	}

	return false
}

// SetBankName gets a reference to the given string and assigns it to the BankName field.
func (o *GetWalletResponseEntity) SetBankName(v string) {
	o.BankName = &v
}

func (o GetWalletResponseEntity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.WalletId) {
		toSerialize["wallet_id"] = o.WalletId
	}
	if !isNil(o.WalletAmount) {
		toSerialize["wallet_amount"] = o.WalletAmount
	}
	if !isNil(o.AccountNumber) {
		toSerialize["account_number"] = o.AccountNumber
	}
	if !isNil(o.PhoneNumber) {
		toSerialize["phone_number"] = o.PhoneNumber
	}
	if !isNil(o.BankName) {
		toSerialize["bank_name"] = o.BankName
	}
	return json.Marshal(toSerialize)
}

type NullableGetWalletResponseEntity struct {
	value *GetWalletResponseEntity
	isSet bool
}

func (v NullableGetWalletResponseEntity) Get() *GetWalletResponseEntity {
	return v.value
}

func (v *NullableGetWalletResponseEntity) Set(val *GetWalletResponseEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableGetWalletResponseEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableGetWalletResponseEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetWalletResponseEntity(val *GetWalletResponseEntity) *NullableGetWalletResponseEntity {
	return &NullableGetWalletResponseEntity{value: val, isSet: true}
}

func (v NullableGetWalletResponseEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetWalletResponseEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


