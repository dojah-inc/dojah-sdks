/*
DOJAH Publilc APIs

Use Dojah to verify, onboard and manage user identity across Africa!

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package dojah

import (
	"encoding/json"
)

// AnalyzeDocumentResponseEntityTextDataInner struct for AnalyzeDocumentResponseEntityTextDataInner
type AnalyzeDocumentResponseEntityTextDataInner struct {
	FieldName *string `json:"field_name,omitempty"`
	FieldType *float32 `json:"field_type,omitempty"`
	Status *float32 `json:"status,omitempty"`
	Value *string `json:"value,omitempty"`
}

// NewAnalyzeDocumentResponseEntityTextDataInner instantiates a new AnalyzeDocumentResponseEntityTextDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnalyzeDocumentResponseEntityTextDataInner() *AnalyzeDocumentResponseEntityTextDataInner {
	this := AnalyzeDocumentResponseEntityTextDataInner{}
	return &this
}

// NewAnalyzeDocumentResponseEntityTextDataInnerWithDefaults instantiates a new AnalyzeDocumentResponseEntityTextDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnalyzeDocumentResponseEntityTextDataInnerWithDefaults() *AnalyzeDocumentResponseEntityTextDataInner {
	this := AnalyzeDocumentResponseEntityTextDataInner{}
	return &this
}

// GetFieldName returns the FieldName field value if set, zero value otherwise.
func (o *AnalyzeDocumentResponseEntityTextDataInner) GetFieldName() string {
	if o == nil || isNil(o.FieldName) {
		var ret string
		return ret
	}
	return *o.FieldName
}

// GetFieldNameOk returns a tuple with the FieldName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyzeDocumentResponseEntityTextDataInner) GetFieldNameOk() (*string, bool) {
	if o == nil || isNil(o.FieldName) {
    return nil, false
	}
	return o.FieldName, true
}

// HasFieldName returns a boolean if a field has been set.
func (o *AnalyzeDocumentResponseEntityTextDataInner) HasFieldName() bool {
	if o != nil && !isNil(o.FieldName) {
		return true
	}

	return false
}

// SetFieldName gets a reference to the given string and assigns it to the FieldName field.
func (o *AnalyzeDocumentResponseEntityTextDataInner) SetFieldName(v string) {
	o.FieldName = &v
}

// GetFieldType returns the FieldType field value if set, zero value otherwise.
func (o *AnalyzeDocumentResponseEntityTextDataInner) GetFieldType() float32 {
	if o == nil || isNil(o.FieldType) {
		var ret float32
		return ret
	}
	return *o.FieldType
}

// GetFieldTypeOk returns a tuple with the FieldType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyzeDocumentResponseEntityTextDataInner) GetFieldTypeOk() (*float32, bool) {
	if o == nil || isNil(o.FieldType) {
    return nil, false
	}
	return o.FieldType, true
}

// HasFieldType returns a boolean if a field has been set.
func (o *AnalyzeDocumentResponseEntityTextDataInner) HasFieldType() bool {
	if o != nil && !isNil(o.FieldType) {
		return true
	}

	return false
}

// SetFieldType gets a reference to the given float32 and assigns it to the FieldType field.
func (o *AnalyzeDocumentResponseEntityTextDataInner) SetFieldType(v float32) {
	o.FieldType = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AnalyzeDocumentResponseEntityTextDataInner) GetStatus() float32 {
	if o == nil || isNil(o.Status) {
		var ret float32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyzeDocumentResponseEntityTextDataInner) GetStatusOk() (*float32, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AnalyzeDocumentResponseEntityTextDataInner) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given float32 and assigns it to the Status field.
func (o *AnalyzeDocumentResponseEntityTextDataInner) SetStatus(v float32) {
	o.Status = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *AnalyzeDocumentResponseEntityTextDataInner) GetValue() string {
	if o == nil || isNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyzeDocumentResponseEntityTextDataInner) GetValueOk() (*string, bool) {
	if o == nil || isNil(o.Value) {
    return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *AnalyzeDocumentResponseEntityTextDataInner) HasValue() bool {
	if o != nil && !isNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *AnalyzeDocumentResponseEntityTextDataInner) SetValue(v string) {
	o.Value = &v
}

func (o AnalyzeDocumentResponseEntityTextDataInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.FieldName) {
		toSerialize["field_name"] = o.FieldName
	}
	if !isNil(o.FieldType) {
		toSerialize["field_type"] = o.FieldType
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableAnalyzeDocumentResponseEntityTextDataInner struct {
	value *AnalyzeDocumentResponseEntityTextDataInner
	isSet bool
}

func (v NullableAnalyzeDocumentResponseEntityTextDataInner) Get() *AnalyzeDocumentResponseEntityTextDataInner {
	return v.value
}

func (v *NullableAnalyzeDocumentResponseEntityTextDataInner) Set(val *AnalyzeDocumentResponseEntityTextDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAnalyzeDocumentResponseEntityTextDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAnalyzeDocumentResponseEntityTextDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnalyzeDocumentResponseEntityTextDataInner(val *AnalyzeDocumentResponseEntityTextDataInner) *NullableAnalyzeDocumentResponseEntityTextDataInner {
	return &NullableAnalyzeDocumentResponseEntityTextDataInner{value: val, isSet: true}
}

func (v NullableAnalyzeDocumentResponseEntityTextDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAnalyzeDocumentResponseEntityTextDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


