/*
DOJAH APIs

Use Dojah to verify, onboard and manage user identity across Africa!

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package dojah

import (
	"encoding/json"
)

// PurchaseDataRequest struct for PurchaseDataRequest
type PurchaseDataRequest struct {
	Plan *string `json:"plan,omitempty"`
	Destination *string `json:"destination,omitempty"`
}

// NewPurchaseDataRequest instantiates a new PurchaseDataRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPurchaseDataRequest() *PurchaseDataRequest {
	this := PurchaseDataRequest{}
	return &this
}

// NewPurchaseDataRequestWithDefaults instantiates a new PurchaseDataRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPurchaseDataRequestWithDefaults() *PurchaseDataRequest {
	this := PurchaseDataRequest{}
	return &this
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *PurchaseDataRequest) GetPlan() string {
	if o == nil || isNil(o.Plan) {
		var ret string
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseDataRequest) GetPlanOk() (*string, bool) {
	if o == nil || isNil(o.Plan) {
    return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *PurchaseDataRequest) HasPlan() bool {
	if o != nil && !isNil(o.Plan) {
		return true
	}

	return false
}

// SetPlan gets a reference to the given string and assigns it to the Plan field.
func (o *PurchaseDataRequest) SetPlan(v string) {
	o.Plan = &v
}

// GetDestination returns the Destination field value if set, zero value otherwise.
func (o *PurchaseDataRequest) GetDestination() string {
	if o == nil || isNil(o.Destination) {
		var ret string
		return ret
	}
	return *o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseDataRequest) GetDestinationOk() (*string, bool) {
	if o == nil || isNil(o.Destination) {
    return nil, false
	}
	return o.Destination, true
}

// HasDestination returns a boolean if a field has been set.
func (o *PurchaseDataRequest) HasDestination() bool {
	if o != nil && !isNil(o.Destination) {
		return true
	}

	return false
}

// SetDestination gets a reference to the given string and assigns it to the Destination field.
func (o *PurchaseDataRequest) SetDestination(v string) {
	o.Destination = &v
}

func (o PurchaseDataRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Plan) {
		toSerialize["plan"] = o.Plan
	}
	if !isNil(o.Destination) {
		toSerialize["destination"] = o.Destination
	}
	return json.Marshal(toSerialize)
}

type NullablePurchaseDataRequest struct {
	value *PurchaseDataRequest
	isSet bool
}

func (v NullablePurchaseDataRequest) Get() *PurchaseDataRequest {
	return v.value
}

func (v *NullablePurchaseDataRequest) Set(val *PurchaseDataRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePurchaseDataRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePurchaseDataRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePurchaseDataRequest(val *PurchaseDataRequest) *NullablePurchaseDataRequest {
	return &NullablePurchaseDataRequest{value: val, isSet: true}
}

func (v NullablePurchaseDataRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePurchaseDataRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


