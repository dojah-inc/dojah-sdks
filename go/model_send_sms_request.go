/*
DOJAH Publilc APIs

Use Dojah to verify, onboard and manage user identity across Africa!

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package dojah

import (
	"encoding/json"
)

// SendSmsRequest struct for SendSmsRequest
type SendSmsRequest struct {
	Destination *string `json:"destination,omitempty"`
	Message *string `json:"message,omitempty"`
	Channel *string `json:"channel,omitempty"`
	SenderId *string `json:"sender_id,omitempty"`
}

// NewSendSmsRequest instantiates a new SendSmsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSendSmsRequest() *SendSmsRequest {
	this := SendSmsRequest{}
	return &this
}

// NewSendSmsRequestWithDefaults instantiates a new SendSmsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSendSmsRequestWithDefaults() *SendSmsRequest {
	this := SendSmsRequest{}
	return &this
}

// GetDestination returns the Destination field value if set, zero value otherwise.
func (o *SendSmsRequest) GetDestination() string {
	if o == nil || isNil(o.Destination) {
		var ret string
		return ret
	}
	return *o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendSmsRequest) GetDestinationOk() (*string, bool) {
	if o == nil || isNil(o.Destination) {
    return nil, false
	}
	return o.Destination, true
}

// HasDestination returns a boolean if a field has been set.
func (o *SendSmsRequest) HasDestination() bool {
	if o != nil && !isNil(o.Destination) {
		return true
	}

	return false
}

// SetDestination gets a reference to the given string and assigns it to the Destination field.
func (o *SendSmsRequest) SetDestination(v string) {
	o.Destination = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *SendSmsRequest) GetMessage() string {
	if o == nil || isNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendSmsRequest) GetMessageOk() (*string, bool) {
	if o == nil || isNil(o.Message) {
    return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *SendSmsRequest) HasMessage() bool {
	if o != nil && !isNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *SendSmsRequest) SetMessage(v string) {
	o.Message = &v
}

// GetChannel returns the Channel field value if set, zero value otherwise.
func (o *SendSmsRequest) GetChannel() string {
	if o == nil || isNil(o.Channel) {
		var ret string
		return ret
	}
	return *o.Channel
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendSmsRequest) GetChannelOk() (*string, bool) {
	if o == nil || isNil(o.Channel) {
    return nil, false
	}
	return o.Channel, true
}

// HasChannel returns a boolean if a field has been set.
func (o *SendSmsRequest) HasChannel() bool {
	if o != nil && !isNil(o.Channel) {
		return true
	}

	return false
}

// SetChannel gets a reference to the given string and assigns it to the Channel field.
func (o *SendSmsRequest) SetChannel(v string) {
	o.Channel = &v
}

// GetSenderId returns the SenderId field value if set, zero value otherwise.
func (o *SendSmsRequest) GetSenderId() string {
	if o == nil || isNil(o.SenderId) {
		var ret string
		return ret
	}
	return *o.SenderId
}

// GetSenderIdOk returns a tuple with the SenderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendSmsRequest) GetSenderIdOk() (*string, bool) {
	if o == nil || isNil(o.SenderId) {
    return nil, false
	}
	return o.SenderId, true
}

// HasSenderId returns a boolean if a field has been set.
func (o *SendSmsRequest) HasSenderId() bool {
	if o != nil && !isNil(o.SenderId) {
		return true
	}

	return false
}

// SetSenderId gets a reference to the given string and assigns it to the SenderId field.
func (o *SendSmsRequest) SetSenderId(v string) {
	o.SenderId = &v
}

func (o SendSmsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Destination) {
		toSerialize["destination"] = o.Destination
	}
	if !isNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !isNil(o.Channel) {
		toSerialize["channel"] = o.Channel
	}
	if !isNil(o.SenderId) {
		toSerialize["sender_id"] = o.SenderId
	}
	return json.Marshal(toSerialize)
}

type NullableSendSmsRequest struct {
	value *SendSmsRequest
	isSet bool
}

func (v NullableSendSmsRequest) Get() *SendSmsRequest {
	return v.value
}

func (v *NullableSendSmsRequest) Set(val *SendSmsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSendSmsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSendSmsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSendSmsRequest(val *SendSmsRequest) *NullableSendSmsRequest {
	return &NullableSendSmsRequest{value: val, isSet: true}
}

func (v NullableSendSmsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSendSmsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


