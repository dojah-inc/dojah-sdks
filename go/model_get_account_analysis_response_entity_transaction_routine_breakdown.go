/*
DOJAH APIs

Use Dojah to verify, onboard and manage user identity across Africa!

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package dojah

import (
	"encoding/json"
)

// GetAccountAnalysisResponseEntityTransactionRoutineBreakdown struct for GetAccountAnalysisResponseEntityTransactionRoutineBreakdown
type GetAccountAnalysisResponseEntityTransactionRoutineBreakdown struct {
	MaximumExpense *float32 `json:"MaximumExpense,omitempty"`
	LastCreditReceived *string `json:"lastCreditReceived,omitempty"`
	LastDebitMade *string `json:"lastDebitMade,omitempty"`
	MostFrequentBalanceRange *string `json:"mostFrequentBalanceRange,omitempty"`
	MostFrequentTransactionRange *string `json:"mostFrequentTransactionRange,omitempty"`
	NumberOfCardRequests *float32 `json:"numberOfCardRequests,omitempty"`
	PercentNumberOfDaysBalanceWasLessThan10ThousandNaira *float32 `json:"percentNumberOfDaysBalanceWasLessThan10ThousandNaira,omitempty"`
	PercentNumberOfDaysTransactionsWasLessThan10ThousandNaira *float32 `json:"percentNumberOfDaysTransactionsWasLessThan10ThousandNaira,omitempty"`
	PercentOfBalancesBetween100ThousandTo500ThousandNaira *float32 `json:"percentOfBalancesBetween100ThousandTo500ThousandNaira,omitempty"`
	PercentOfBalancesBetween10ThousandTo100ThousandNaira *float32 `json:"percentOfBalancesBetween10ThousandTo100ThousandNaira,omitempty"`
	PercentOfBalancesBetween500ThousandToOneMillionNaira *float32 `json:"percentOfBalancesBetween500ThousandToOneMillionNaira,omitempty"`
	PercentOfBalancesGreaterThanOneMillionNaira *float32 `json:"percentOfBalancesGreaterThanOneMillionNaira,omitempty"`
	PercentOfBalancesLessThan10ThousandNaira *float32 `json:"percentOfBalancesLessThan10ThousandNaira,omitempty"`
	PercentOfTransactionsBetween100ThousandTo500ThousandNaira *float32 `json:"percentOfTransactionsBetween100ThousandTo500ThousandNaira,omitempty"`
	PercentOfTransactionsBetween10ThousandTo100ThousandNaira *float32 `json:"percentOfTransactionsBetween10ThousandTo100ThousandNaira,omitempty"`
	PercentOfTransactionsBetween500ThousandToOneMillionNaira *float32 `json:"percentOfTransactionsBetween500ThousandToOneMillionNaira,omitempty"`
	PercentOfTransactionsGreaterThanOneMillionNaira *float32 `json:"percentOfTransactionsGreaterThanOneMillionNaira,omitempty"`
	PercentOfTransactionsLessThan10ThousandNaira *float32 `json:"percentOfTransactionsLessThan10ThousandNaira,omitempty"`
	PercentofCreditTransactions *float32 `json:"percentofCreditTransactions,omitempty"`
	PercentofDebitTransactions *float32 `json:"percentofDebitTransactions,omitempty"`
	TotalAmountOfTransactions *float32 `json:"totalAmountOfTransactions,omitempty"`
}

// NewGetAccountAnalysisResponseEntityTransactionRoutineBreakdown instantiates a new GetAccountAnalysisResponseEntityTransactionRoutineBreakdown object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAccountAnalysisResponseEntityTransactionRoutineBreakdown() *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown {
	this := GetAccountAnalysisResponseEntityTransactionRoutineBreakdown{}
	return &this
}

// NewGetAccountAnalysisResponseEntityTransactionRoutineBreakdownWithDefaults instantiates a new GetAccountAnalysisResponseEntityTransactionRoutineBreakdown object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAccountAnalysisResponseEntityTransactionRoutineBreakdownWithDefaults() *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown {
	this := GetAccountAnalysisResponseEntityTransactionRoutineBreakdown{}
	return &this
}

// GetMaximumExpense returns the MaximumExpense field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetMaximumExpense() float32 {
	if o == nil || isNil(o.MaximumExpense) {
		var ret float32
		return ret
	}
	return *o.MaximumExpense
}

// GetMaximumExpenseOk returns a tuple with the MaximumExpense field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetMaximumExpenseOk() (*float32, bool) {
	if o == nil || isNil(o.MaximumExpense) {
    return nil, false
	}
	return o.MaximumExpense, true
}

// HasMaximumExpense returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) HasMaximumExpense() bool {
	if o != nil && !isNil(o.MaximumExpense) {
		return true
	}

	return false
}

// SetMaximumExpense gets a reference to the given float32 and assigns it to the MaximumExpense field.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) SetMaximumExpense(v float32) {
	o.MaximumExpense = &v
}

// GetLastCreditReceived returns the LastCreditReceived field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetLastCreditReceived() string {
	if o == nil || isNil(o.LastCreditReceived) {
		var ret string
		return ret
	}
	return *o.LastCreditReceived
}

// GetLastCreditReceivedOk returns a tuple with the LastCreditReceived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetLastCreditReceivedOk() (*string, bool) {
	if o == nil || isNil(o.LastCreditReceived) {
    return nil, false
	}
	return o.LastCreditReceived, true
}

// HasLastCreditReceived returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) HasLastCreditReceived() bool {
	if o != nil && !isNil(o.LastCreditReceived) {
		return true
	}

	return false
}

// SetLastCreditReceived gets a reference to the given string and assigns it to the LastCreditReceived field.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) SetLastCreditReceived(v string) {
	o.LastCreditReceived = &v
}

// GetLastDebitMade returns the LastDebitMade field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetLastDebitMade() string {
	if o == nil || isNil(o.LastDebitMade) {
		var ret string
		return ret
	}
	return *o.LastDebitMade
}

// GetLastDebitMadeOk returns a tuple with the LastDebitMade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetLastDebitMadeOk() (*string, bool) {
	if o == nil || isNil(o.LastDebitMade) {
    return nil, false
	}
	return o.LastDebitMade, true
}

// HasLastDebitMade returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) HasLastDebitMade() bool {
	if o != nil && !isNil(o.LastDebitMade) {
		return true
	}

	return false
}

// SetLastDebitMade gets a reference to the given string and assigns it to the LastDebitMade field.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) SetLastDebitMade(v string) {
	o.LastDebitMade = &v
}

// GetMostFrequentBalanceRange returns the MostFrequentBalanceRange field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetMostFrequentBalanceRange() string {
	if o == nil || isNil(o.MostFrequentBalanceRange) {
		var ret string
		return ret
	}
	return *o.MostFrequentBalanceRange
}

// GetMostFrequentBalanceRangeOk returns a tuple with the MostFrequentBalanceRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetMostFrequentBalanceRangeOk() (*string, bool) {
	if o == nil || isNil(o.MostFrequentBalanceRange) {
    return nil, false
	}
	return o.MostFrequentBalanceRange, true
}

// HasMostFrequentBalanceRange returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) HasMostFrequentBalanceRange() bool {
	if o != nil && !isNil(o.MostFrequentBalanceRange) {
		return true
	}

	return false
}

// SetMostFrequentBalanceRange gets a reference to the given string and assigns it to the MostFrequentBalanceRange field.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) SetMostFrequentBalanceRange(v string) {
	o.MostFrequentBalanceRange = &v
}

// GetMostFrequentTransactionRange returns the MostFrequentTransactionRange field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetMostFrequentTransactionRange() string {
	if o == nil || isNil(o.MostFrequentTransactionRange) {
		var ret string
		return ret
	}
	return *o.MostFrequentTransactionRange
}

// GetMostFrequentTransactionRangeOk returns a tuple with the MostFrequentTransactionRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetMostFrequentTransactionRangeOk() (*string, bool) {
	if o == nil || isNil(o.MostFrequentTransactionRange) {
    return nil, false
	}
	return o.MostFrequentTransactionRange, true
}

// HasMostFrequentTransactionRange returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) HasMostFrequentTransactionRange() bool {
	if o != nil && !isNil(o.MostFrequentTransactionRange) {
		return true
	}

	return false
}

// SetMostFrequentTransactionRange gets a reference to the given string and assigns it to the MostFrequentTransactionRange field.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) SetMostFrequentTransactionRange(v string) {
	o.MostFrequentTransactionRange = &v
}

// GetNumberOfCardRequests returns the NumberOfCardRequests field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetNumberOfCardRequests() float32 {
	if o == nil || isNil(o.NumberOfCardRequests) {
		var ret float32
		return ret
	}
	return *o.NumberOfCardRequests
}

// GetNumberOfCardRequestsOk returns a tuple with the NumberOfCardRequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetNumberOfCardRequestsOk() (*float32, bool) {
	if o == nil || isNil(o.NumberOfCardRequests) {
    return nil, false
	}
	return o.NumberOfCardRequests, true
}

// HasNumberOfCardRequests returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) HasNumberOfCardRequests() bool {
	if o != nil && !isNil(o.NumberOfCardRequests) {
		return true
	}

	return false
}

// SetNumberOfCardRequests gets a reference to the given float32 and assigns it to the NumberOfCardRequests field.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) SetNumberOfCardRequests(v float32) {
	o.NumberOfCardRequests = &v
}

// GetPercentNumberOfDaysBalanceWasLessThan10ThousandNaira returns the PercentNumberOfDaysBalanceWasLessThan10ThousandNaira field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetPercentNumberOfDaysBalanceWasLessThan10ThousandNaira() float32 {
	if o == nil || isNil(o.PercentNumberOfDaysBalanceWasLessThan10ThousandNaira) {
		var ret float32
		return ret
	}
	return *o.PercentNumberOfDaysBalanceWasLessThan10ThousandNaira
}

// GetPercentNumberOfDaysBalanceWasLessThan10ThousandNairaOk returns a tuple with the PercentNumberOfDaysBalanceWasLessThan10ThousandNaira field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetPercentNumberOfDaysBalanceWasLessThan10ThousandNairaOk() (*float32, bool) {
	if o == nil || isNil(o.PercentNumberOfDaysBalanceWasLessThan10ThousandNaira) {
    return nil, false
	}
	return o.PercentNumberOfDaysBalanceWasLessThan10ThousandNaira, true
}

// HasPercentNumberOfDaysBalanceWasLessThan10ThousandNaira returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) HasPercentNumberOfDaysBalanceWasLessThan10ThousandNaira() bool {
	if o != nil && !isNil(o.PercentNumberOfDaysBalanceWasLessThan10ThousandNaira) {
		return true
	}

	return false
}

// SetPercentNumberOfDaysBalanceWasLessThan10ThousandNaira gets a reference to the given float32 and assigns it to the PercentNumberOfDaysBalanceWasLessThan10ThousandNaira field.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) SetPercentNumberOfDaysBalanceWasLessThan10ThousandNaira(v float32) {
	o.PercentNumberOfDaysBalanceWasLessThan10ThousandNaira = &v
}

// GetPercentNumberOfDaysTransactionsWasLessThan10ThousandNaira returns the PercentNumberOfDaysTransactionsWasLessThan10ThousandNaira field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetPercentNumberOfDaysTransactionsWasLessThan10ThousandNaira() float32 {
	if o == nil || isNil(o.PercentNumberOfDaysTransactionsWasLessThan10ThousandNaira) {
		var ret float32
		return ret
	}
	return *o.PercentNumberOfDaysTransactionsWasLessThan10ThousandNaira
}

// GetPercentNumberOfDaysTransactionsWasLessThan10ThousandNairaOk returns a tuple with the PercentNumberOfDaysTransactionsWasLessThan10ThousandNaira field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetPercentNumberOfDaysTransactionsWasLessThan10ThousandNairaOk() (*float32, bool) {
	if o == nil || isNil(o.PercentNumberOfDaysTransactionsWasLessThan10ThousandNaira) {
    return nil, false
	}
	return o.PercentNumberOfDaysTransactionsWasLessThan10ThousandNaira, true
}

// HasPercentNumberOfDaysTransactionsWasLessThan10ThousandNaira returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) HasPercentNumberOfDaysTransactionsWasLessThan10ThousandNaira() bool {
	if o != nil && !isNil(o.PercentNumberOfDaysTransactionsWasLessThan10ThousandNaira) {
		return true
	}

	return false
}

// SetPercentNumberOfDaysTransactionsWasLessThan10ThousandNaira gets a reference to the given float32 and assigns it to the PercentNumberOfDaysTransactionsWasLessThan10ThousandNaira field.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) SetPercentNumberOfDaysTransactionsWasLessThan10ThousandNaira(v float32) {
	o.PercentNumberOfDaysTransactionsWasLessThan10ThousandNaira = &v
}

// GetPercentOfBalancesBetween100ThousandTo500ThousandNaira returns the PercentOfBalancesBetween100ThousandTo500ThousandNaira field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetPercentOfBalancesBetween100ThousandTo500ThousandNaira() float32 {
	if o == nil || isNil(o.PercentOfBalancesBetween100ThousandTo500ThousandNaira) {
		var ret float32
		return ret
	}
	return *o.PercentOfBalancesBetween100ThousandTo500ThousandNaira
}

// GetPercentOfBalancesBetween100ThousandTo500ThousandNairaOk returns a tuple with the PercentOfBalancesBetween100ThousandTo500ThousandNaira field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetPercentOfBalancesBetween100ThousandTo500ThousandNairaOk() (*float32, bool) {
	if o == nil || isNil(o.PercentOfBalancesBetween100ThousandTo500ThousandNaira) {
    return nil, false
	}
	return o.PercentOfBalancesBetween100ThousandTo500ThousandNaira, true
}

// HasPercentOfBalancesBetween100ThousandTo500ThousandNaira returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) HasPercentOfBalancesBetween100ThousandTo500ThousandNaira() bool {
	if o != nil && !isNil(o.PercentOfBalancesBetween100ThousandTo500ThousandNaira) {
		return true
	}

	return false
}

// SetPercentOfBalancesBetween100ThousandTo500ThousandNaira gets a reference to the given float32 and assigns it to the PercentOfBalancesBetween100ThousandTo500ThousandNaira field.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) SetPercentOfBalancesBetween100ThousandTo500ThousandNaira(v float32) {
	o.PercentOfBalancesBetween100ThousandTo500ThousandNaira = &v
}

// GetPercentOfBalancesBetween10ThousandTo100ThousandNaira returns the PercentOfBalancesBetween10ThousandTo100ThousandNaira field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetPercentOfBalancesBetween10ThousandTo100ThousandNaira() float32 {
	if o == nil || isNil(o.PercentOfBalancesBetween10ThousandTo100ThousandNaira) {
		var ret float32
		return ret
	}
	return *o.PercentOfBalancesBetween10ThousandTo100ThousandNaira
}

// GetPercentOfBalancesBetween10ThousandTo100ThousandNairaOk returns a tuple with the PercentOfBalancesBetween10ThousandTo100ThousandNaira field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetPercentOfBalancesBetween10ThousandTo100ThousandNairaOk() (*float32, bool) {
	if o == nil || isNil(o.PercentOfBalancesBetween10ThousandTo100ThousandNaira) {
    return nil, false
	}
	return o.PercentOfBalancesBetween10ThousandTo100ThousandNaira, true
}

// HasPercentOfBalancesBetween10ThousandTo100ThousandNaira returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) HasPercentOfBalancesBetween10ThousandTo100ThousandNaira() bool {
	if o != nil && !isNil(o.PercentOfBalancesBetween10ThousandTo100ThousandNaira) {
		return true
	}

	return false
}

// SetPercentOfBalancesBetween10ThousandTo100ThousandNaira gets a reference to the given float32 and assigns it to the PercentOfBalancesBetween10ThousandTo100ThousandNaira field.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) SetPercentOfBalancesBetween10ThousandTo100ThousandNaira(v float32) {
	o.PercentOfBalancesBetween10ThousandTo100ThousandNaira = &v
}

// GetPercentOfBalancesBetween500ThousandToOneMillionNaira returns the PercentOfBalancesBetween500ThousandToOneMillionNaira field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetPercentOfBalancesBetween500ThousandToOneMillionNaira() float32 {
	if o == nil || isNil(o.PercentOfBalancesBetween500ThousandToOneMillionNaira) {
		var ret float32
		return ret
	}
	return *o.PercentOfBalancesBetween500ThousandToOneMillionNaira
}

// GetPercentOfBalancesBetween500ThousandToOneMillionNairaOk returns a tuple with the PercentOfBalancesBetween500ThousandToOneMillionNaira field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetPercentOfBalancesBetween500ThousandToOneMillionNairaOk() (*float32, bool) {
	if o == nil || isNil(o.PercentOfBalancesBetween500ThousandToOneMillionNaira) {
    return nil, false
	}
	return o.PercentOfBalancesBetween500ThousandToOneMillionNaira, true
}

// HasPercentOfBalancesBetween500ThousandToOneMillionNaira returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) HasPercentOfBalancesBetween500ThousandToOneMillionNaira() bool {
	if o != nil && !isNil(o.PercentOfBalancesBetween500ThousandToOneMillionNaira) {
		return true
	}

	return false
}

// SetPercentOfBalancesBetween500ThousandToOneMillionNaira gets a reference to the given float32 and assigns it to the PercentOfBalancesBetween500ThousandToOneMillionNaira field.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) SetPercentOfBalancesBetween500ThousandToOneMillionNaira(v float32) {
	o.PercentOfBalancesBetween500ThousandToOneMillionNaira = &v
}

// GetPercentOfBalancesGreaterThanOneMillionNaira returns the PercentOfBalancesGreaterThanOneMillionNaira field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetPercentOfBalancesGreaterThanOneMillionNaira() float32 {
	if o == nil || isNil(o.PercentOfBalancesGreaterThanOneMillionNaira) {
		var ret float32
		return ret
	}
	return *o.PercentOfBalancesGreaterThanOneMillionNaira
}

// GetPercentOfBalancesGreaterThanOneMillionNairaOk returns a tuple with the PercentOfBalancesGreaterThanOneMillionNaira field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetPercentOfBalancesGreaterThanOneMillionNairaOk() (*float32, bool) {
	if o == nil || isNil(o.PercentOfBalancesGreaterThanOneMillionNaira) {
    return nil, false
	}
	return o.PercentOfBalancesGreaterThanOneMillionNaira, true
}

// HasPercentOfBalancesGreaterThanOneMillionNaira returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) HasPercentOfBalancesGreaterThanOneMillionNaira() bool {
	if o != nil && !isNil(o.PercentOfBalancesGreaterThanOneMillionNaira) {
		return true
	}

	return false
}

// SetPercentOfBalancesGreaterThanOneMillionNaira gets a reference to the given float32 and assigns it to the PercentOfBalancesGreaterThanOneMillionNaira field.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) SetPercentOfBalancesGreaterThanOneMillionNaira(v float32) {
	o.PercentOfBalancesGreaterThanOneMillionNaira = &v
}

// GetPercentOfBalancesLessThan10ThousandNaira returns the PercentOfBalancesLessThan10ThousandNaira field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetPercentOfBalancesLessThan10ThousandNaira() float32 {
	if o == nil || isNil(o.PercentOfBalancesLessThan10ThousandNaira) {
		var ret float32
		return ret
	}
	return *o.PercentOfBalancesLessThan10ThousandNaira
}

// GetPercentOfBalancesLessThan10ThousandNairaOk returns a tuple with the PercentOfBalancesLessThan10ThousandNaira field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetPercentOfBalancesLessThan10ThousandNairaOk() (*float32, bool) {
	if o == nil || isNil(o.PercentOfBalancesLessThan10ThousandNaira) {
    return nil, false
	}
	return o.PercentOfBalancesLessThan10ThousandNaira, true
}

// HasPercentOfBalancesLessThan10ThousandNaira returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) HasPercentOfBalancesLessThan10ThousandNaira() bool {
	if o != nil && !isNil(o.PercentOfBalancesLessThan10ThousandNaira) {
		return true
	}

	return false
}

// SetPercentOfBalancesLessThan10ThousandNaira gets a reference to the given float32 and assigns it to the PercentOfBalancesLessThan10ThousandNaira field.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) SetPercentOfBalancesLessThan10ThousandNaira(v float32) {
	o.PercentOfBalancesLessThan10ThousandNaira = &v
}

// GetPercentOfTransactionsBetween100ThousandTo500ThousandNaira returns the PercentOfTransactionsBetween100ThousandTo500ThousandNaira field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetPercentOfTransactionsBetween100ThousandTo500ThousandNaira() float32 {
	if o == nil || isNil(o.PercentOfTransactionsBetween100ThousandTo500ThousandNaira) {
		var ret float32
		return ret
	}
	return *o.PercentOfTransactionsBetween100ThousandTo500ThousandNaira
}

// GetPercentOfTransactionsBetween100ThousandTo500ThousandNairaOk returns a tuple with the PercentOfTransactionsBetween100ThousandTo500ThousandNaira field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetPercentOfTransactionsBetween100ThousandTo500ThousandNairaOk() (*float32, bool) {
	if o == nil || isNil(o.PercentOfTransactionsBetween100ThousandTo500ThousandNaira) {
    return nil, false
	}
	return o.PercentOfTransactionsBetween100ThousandTo500ThousandNaira, true
}

// HasPercentOfTransactionsBetween100ThousandTo500ThousandNaira returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) HasPercentOfTransactionsBetween100ThousandTo500ThousandNaira() bool {
	if o != nil && !isNil(o.PercentOfTransactionsBetween100ThousandTo500ThousandNaira) {
		return true
	}

	return false
}

// SetPercentOfTransactionsBetween100ThousandTo500ThousandNaira gets a reference to the given float32 and assigns it to the PercentOfTransactionsBetween100ThousandTo500ThousandNaira field.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) SetPercentOfTransactionsBetween100ThousandTo500ThousandNaira(v float32) {
	o.PercentOfTransactionsBetween100ThousandTo500ThousandNaira = &v
}

// GetPercentOfTransactionsBetween10ThousandTo100ThousandNaira returns the PercentOfTransactionsBetween10ThousandTo100ThousandNaira field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetPercentOfTransactionsBetween10ThousandTo100ThousandNaira() float32 {
	if o == nil || isNil(o.PercentOfTransactionsBetween10ThousandTo100ThousandNaira) {
		var ret float32
		return ret
	}
	return *o.PercentOfTransactionsBetween10ThousandTo100ThousandNaira
}

// GetPercentOfTransactionsBetween10ThousandTo100ThousandNairaOk returns a tuple with the PercentOfTransactionsBetween10ThousandTo100ThousandNaira field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetPercentOfTransactionsBetween10ThousandTo100ThousandNairaOk() (*float32, bool) {
	if o == nil || isNil(o.PercentOfTransactionsBetween10ThousandTo100ThousandNaira) {
    return nil, false
	}
	return o.PercentOfTransactionsBetween10ThousandTo100ThousandNaira, true
}

// HasPercentOfTransactionsBetween10ThousandTo100ThousandNaira returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) HasPercentOfTransactionsBetween10ThousandTo100ThousandNaira() bool {
	if o != nil && !isNil(o.PercentOfTransactionsBetween10ThousandTo100ThousandNaira) {
		return true
	}

	return false
}

// SetPercentOfTransactionsBetween10ThousandTo100ThousandNaira gets a reference to the given float32 and assigns it to the PercentOfTransactionsBetween10ThousandTo100ThousandNaira field.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) SetPercentOfTransactionsBetween10ThousandTo100ThousandNaira(v float32) {
	o.PercentOfTransactionsBetween10ThousandTo100ThousandNaira = &v
}

// GetPercentOfTransactionsBetween500ThousandToOneMillionNaira returns the PercentOfTransactionsBetween500ThousandToOneMillionNaira field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetPercentOfTransactionsBetween500ThousandToOneMillionNaira() float32 {
	if o == nil || isNil(o.PercentOfTransactionsBetween500ThousandToOneMillionNaira) {
		var ret float32
		return ret
	}
	return *o.PercentOfTransactionsBetween500ThousandToOneMillionNaira
}

// GetPercentOfTransactionsBetween500ThousandToOneMillionNairaOk returns a tuple with the PercentOfTransactionsBetween500ThousandToOneMillionNaira field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetPercentOfTransactionsBetween500ThousandToOneMillionNairaOk() (*float32, bool) {
	if o == nil || isNil(o.PercentOfTransactionsBetween500ThousandToOneMillionNaira) {
    return nil, false
	}
	return o.PercentOfTransactionsBetween500ThousandToOneMillionNaira, true
}

// HasPercentOfTransactionsBetween500ThousandToOneMillionNaira returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) HasPercentOfTransactionsBetween500ThousandToOneMillionNaira() bool {
	if o != nil && !isNil(o.PercentOfTransactionsBetween500ThousandToOneMillionNaira) {
		return true
	}

	return false
}

// SetPercentOfTransactionsBetween500ThousandToOneMillionNaira gets a reference to the given float32 and assigns it to the PercentOfTransactionsBetween500ThousandToOneMillionNaira field.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) SetPercentOfTransactionsBetween500ThousandToOneMillionNaira(v float32) {
	o.PercentOfTransactionsBetween500ThousandToOneMillionNaira = &v
}

// GetPercentOfTransactionsGreaterThanOneMillionNaira returns the PercentOfTransactionsGreaterThanOneMillionNaira field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetPercentOfTransactionsGreaterThanOneMillionNaira() float32 {
	if o == nil || isNil(o.PercentOfTransactionsGreaterThanOneMillionNaira) {
		var ret float32
		return ret
	}
	return *o.PercentOfTransactionsGreaterThanOneMillionNaira
}

// GetPercentOfTransactionsGreaterThanOneMillionNairaOk returns a tuple with the PercentOfTransactionsGreaterThanOneMillionNaira field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetPercentOfTransactionsGreaterThanOneMillionNairaOk() (*float32, bool) {
	if o == nil || isNil(o.PercentOfTransactionsGreaterThanOneMillionNaira) {
    return nil, false
	}
	return o.PercentOfTransactionsGreaterThanOneMillionNaira, true
}

// HasPercentOfTransactionsGreaterThanOneMillionNaira returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) HasPercentOfTransactionsGreaterThanOneMillionNaira() bool {
	if o != nil && !isNil(o.PercentOfTransactionsGreaterThanOneMillionNaira) {
		return true
	}

	return false
}

// SetPercentOfTransactionsGreaterThanOneMillionNaira gets a reference to the given float32 and assigns it to the PercentOfTransactionsGreaterThanOneMillionNaira field.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) SetPercentOfTransactionsGreaterThanOneMillionNaira(v float32) {
	o.PercentOfTransactionsGreaterThanOneMillionNaira = &v
}

// GetPercentOfTransactionsLessThan10ThousandNaira returns the PercentOfTransactionsLessThan10ThousandNaira field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetPercentOfTransactionsLessThan10ThousandNaira() float32 {
	if o == nil || isNil(o.PercentOfTransactionsLessThan10ThousandNaira) {
		var ret float32
		return ret
	}
	return *o.PercentOfTransactionsLessThan10ThousandNaira
}

// GetPercentOfTransactionsLessThan10ThousandNairaOk returns a tuple with the PercentOfTransactionsLessThan10ThousandNaira field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetPercentOfTransactionsLessThan10ThousandNairaOk() (*float32, bool) {
	if o == nil || isNil(o.PercentOfTransactionsLessThan10ThousandNaira) {
    return nil, false
	}
	return o.PercentOfTransactionsLessThan10ThousandNaira, true
}

// HasPercentOfTransactionsLessThan10ThousandNaira returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) HasPercentOfTransactionsLessThan10ThousandNaira() bool {
	if o != nil && !isNil(o.PercentOfTransactionsLessThan10ThousandNaira) {
		return true
	}

	return false
}

// SetPercentOfTransactionsLessThan10ThousandNaira gets a reference to the given float32 and assigns it to the PercentOfTransactionsLessThan10ThousandNaira field.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) SetPercentOfTransactionsLessThan10ThousandNaira(v float32) {
	o.PercentOfTransactionsLessThan10ThousandNaira = &v
}

// GetPercentofCreditTransactions returns the PercentofCreditTransactions field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetPercentofCreditTransactions() float32 {
	if o == nil || isNil(o.PercentofCreditTransactions) {
		var ret float32
		return ret
	}
	return *o.PercentofCreditTransactions
}

// GetPercentofCreditTransactionsOk returns a tuple with the PercentofCreditTransactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetPercentofCreditTransactionsOk() (*float32, bool) {
	if o == nil || isNil(o.PercentofCreditTransactions) {
    return nil, false
	}
	return o.PercentofCreditTransactions, true
}

// HasPercentofCreditTransactions returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) HasPercentofCreditTransactions() bool {
	if o != nil && !isNil(o.PercentofCreditTransactions) {
		return true
	}

	return false
}

// SetPercentofCreditTransactions gets a reference to the given float32 and assigns it to the PercentofCreditTransactions field.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) SetPercentofCreditTransactions(v float32) {
	o.PercentofCreditTransactions = &v
}

// GetPercentofDebitTransactions returns the PercentofDebitTransactions field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetPercentofDebitTransactions() float32 {
	if o == nil || isNil(o.PercentofDebitTransactions) {
		var ret float32
		return ret
	}
	return *o.PercentofDebitTransactions
}

// GetPercentofDebitTransactionsOk returns a tuple with the PercentofDebitTransactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetPercentofDebitTransactionsOk() (*float32, bool) {
	if o == nil || isNil(o.PercentofDebitTransactions) {
    return nil, false
	}
	return o.PercentofDebitTransactions, true
}

// HasPercentofDebitTransactions returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) HasPercentofDebitTransactions() bool {
	if o != nil && !isNil(o.PercentofDebitTransactions) {
		return true
	}

	return false
}

// SetPercentofDebitTransactions gets a reference to the given float32 and assigns it to the PercentofDebitTransactions field.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) SetPercentofDebitTransactions(v float32) {
	o.PercentofDebitTransactions = &v
}

// GetTotalAmountOfTransactions returns the TotalAmountOfTransactions field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetTotalAmountOfTransactions() float32 {
	if o == nil || isNil(o.TotalAmountOfTransactions) {
		var ret float32
		return ret
	}
	return *o.TotalAmountOfTransactions
}

// GetTotalAmountOfTransactionsOk returns a tuple with the TotalAmountOfTransactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) GetTotalAmountOfTransactionsOk() (*float32, bool) {
	if o == nil || isNil(o.TotalAmountOfTransactions) {
    return nil, false
	}
	return o.TotalAmountOfTransactions, true
}

// HasTotalAmountOfTransactions returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) HasTotalAmountOfTransactions() bool {
	if o != nil && !isNil(o.TotalAmountOfTransactions) {
		return true
	}

	return false
}

// SetTotalAmountOfTransactions gets a reference to the given float32 and assigns it to the TotalAmountOfTransactions field.
func (o *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) SetTotalAmountOfTransactions(v float32) {
	o.TotalAmountOfTransactions = &v
}

func (o GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.MaximumExpense) {
		toSerialize["MaximumExpense"] = o.MaximumExpense
	}
	if !isNil(o.LastCreditReceived) {
		toSerialize["lastCreditReceived"] = o.LastCreditReceived
	}
	if !isNil(o.LastDebitMade) {
		toSerialize["lastDebitMade"] = o.LastDebitMade
	}
	if !isNil(o.MostFrequentBalanceRange) {
		toSerialize["mostFrequentBalanceRange"] = o.MostFrequentBalanceRange
	}
	if !isNil(o.MostFrequentTransactionRange) {
		toSerialize["mostFrequentTransactionRange"] = o.MostFrequentTransactionRange
	}
	if !isNil(o.NumberOfCardRequests) {
		toSerialize["numberOfCardRequests"] = o.NumberOfCardRequests
	}
	if !isNil(o.PercentNumberOfDaysBalanceWasLessThan10ThousandNaira) {
		toSerialize["percentNumberOfDaysBalanceWasLessThan10ThousandNaira"] = o.PercentNumberOfDaysBalanceWasLessThan10ThousandNaira
	}
	if !isNil(o.PercentNumberOfDaysTransactionsWasLessThan10ThousandNaira) {
		toSerialize["percentNumberOfDaysTransactionsWasLessThan10ThousandNaira"] = o.PercentNumberOfDaysTransactionsWasLessThan10ThousandNaira
	}
	if !isNil(o.PercentOfBalancesBetween100ThousandTo500ThousandNaira) {
		toSerialize["percentOfBalancesBetween100ThousandTo500ThousandNaira"] = o.PercentOfBalancesBetween100ThousandTo500ThousandNaira
	}
	if !isNil(o.PercentOfBalancesBetween10ThousandTo100ThousandNaira) {
		toSerialize["percentOfBalancesBetween10ThousandTo100ThousandNaira"] = o.PercentOfBalancesBetween10ThousandTo100ThousandNaira
	}
	if !isNil(o.PercentOfBalancesBetween500ThousandToOneMillionNaira) {
		toSerialize["percentOfBalancesBetween500ThousandToOneMillionNaira"] = o.PercentOfBalancesBetween500ThousandToOneMillionNaira
	}
	if !isNil(o.PercentOfBalancesGreaterThanOneMillionNaira) {
		toSerialize["percentOfBalancesGreaterThanOneMillionNaira"] = o.PercentOfBalancesGreaterThanOneMillionNaira
	}
	if !isNil(o.PercentOfBalancesLessThan10ThousandNaira) {
		toSerialize["percentOfBalancesLessThan10ThousandNaira"] = o.PercentOfBalancesLessThan10ThousandNaira
	}
	if !isNil(o.PercentOfTransactionsBetween100ThousandTo500ThousandNaira) {
		toSerialize["percentOfTransactionsBetween100ThousandTo500ThousandNaira"] = o.PercentOfTransactionsBetween100ThousandTo500ThousandNaira
	}
	if !isNil(o.PercentOfTransactionsBetween10ThousandTo100ThousandNaira) {
		toSerialize["percentOfTransactionsBetween10ThousandTo100ThousandNaira"] = o.PercentOfTransactionsBetween10ThousandTo100ThousandNaira
	}
	if !isNil(o.PercentOfTransactionsBetween500ThousandToOneMillionNaira) {
		toSerialize["percentOfTransactionsBetween500ThousandToOneMillionNaira"] = o.PercentOfTransactionsBetween500ThousandToOneMillionNaira
	}
	if !isNil(o.PercentOfTransactionsGreaterThanOneMillionNaira) {
		toSerialize["percentOfTransactionsGreaterThanOneMillionNaira"] = o.PercentOfTransactionsGreaterThanOneMillionNaira
	}
	if !isNil(o.PercentOfTransactionsLessThan10ThousandNaira) {
		toSerialize["percentOfTransactionsLessThan10ThousandNaira"] = o.PercentOfTransactionsLessThan10ThousandNaira
	}
	if !isNil(o.PercentofCreditTransactions) {
		toSerialize["percentofCreditTransactions"] = o.PercentofCreditTransactions
	}
	if !isNil(o.PercentofDebitTransactions) {
		toSerialize["percentofDebitTransactions"] = o.PercentofDebitTransactions
	}
	if !isNil(o.TotalAmountOfTransactions) {
		toSerialize["totalAmountOfTransactions"] = o.TotalAmountOfTransactions
	}
	return json.Marshal(toSerialize)
}

type NullableGetAccountAnalysisResponseEntityTransactionRoutineBreakdown struct {
	value *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown
	isSet bool
}

func (v NullableGetAccountAnalysisResponseEntityTransactionRoutineBreakdown) Get() *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown {
	return v.value
}

func (v *NullableGetAccountAnalysisResponseEntityTransactionRoutineBreakdown) Set(val *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAccountAnalysisResponseEntityTransactionRoutineBreakdown) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAccountAnalysisResponseEntityTransactionRoutineBreakdown) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAccountAnalysisResponseEntityTransactionRoutineBreakdown(val *GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) *NullableGetAccountAnalysisResponseEntityTransactionRoutineBreakdown {
	return &NullableGetAccountAnalysisResponseEntityTransactionRoutineBreakdown{value: val, isSet: true}
}

func (v NullableGetAccountAnalysisResponseEntityTransactionRoutineBreakdown) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAccountAnalysisResponseEntityTransactionRoutineBreakdown) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


