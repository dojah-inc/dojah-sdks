/*
DOJAH APIs

Use Dojah to verify, onboard and manage user identity across Africa!

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package dojah

import (
	"encoding/json"
)

// GetDocumentAnalysisResponseEntity struct for GetDocumentAnalysisResponseEntity
type GetDocumentAnalysisResponseEntity struct {
	Data *GetDocumentAnalysisResponseEntityData `json:"data,omitempty"`
}

// NewGetDocumentAnalysisResponseEntity instantiates a new GetDocumentAnalysisResponseEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetDocumentAnalysisResponseEntity() *GetDocumentAnalysisResponseEntity {
	this := GetDocumentAnalysisResponseEntity{}
	return &this
}

// NewGetDocumentAnalysisResponseEntityWithDefaults instantiates a new GetDocumentAnalysisResponseEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetDocumentAnalysisResponseEntityWithDefaults() *GetDocumentAnalysisResponseEntity {
	this := GetDocumentAnalysisResponseEntity{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *GetDocumentAnalysisResponseEntity) GetData() GetDocumentAnalysisResponseEntityData {
	if o == nil || isNil(o.Data) {
		var ret GetDocumentAnalysisResponseEntityData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDocumentAnalysisResponseEntity) GetDataOk() (*GetDocumentAnalysisResponseEntityData, bool) {
	if o == nil || isNil(o.Data) {
    return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *GetDocumentAnalysisResponseEntity) HasData() bool {
	if o != nil && !isNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given GetDocumentAnalysisResponseEntityData and assigns it to the Data field.
func (o *GetDocumentAnalysisResponseEntity) SetData(v GetDocumentAnalysisResponseEntityData) {
	o.Data = &v
}

func (o GetDocumentAnalysisResponseEntity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableGetDocumentAnalysisResponseEntity struct {
	value *GetDocumentAnalysisResponseEntity
	isSet bool
}

func (v NullableGetDocumentAnalysisResponseEntity) Get() *GetDocumentAnalysisResponseEntity {
	return v.value
}

func (v *NullableGetDocumentAnalysisResponseEntity) Set(val *GetDocumentAnalysisResponseEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDocumentAnalysisResponseEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDocumentAnalysisResponseEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDocumentAnalysisResponseEntity(val *GetDocumentAnalysisResponseEntity) *NullableGetDocumentAnalysisResponseEntity {
	return &NullableGetDocumentAnalysisResponseEntity{value: val, isSet: true}
}

func (v NullableGetDocumentAnalysisResponseEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDocumentAnalysisResponseEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


