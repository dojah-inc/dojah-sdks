/*
DOJAH APIs

Use Dojah to verify, onboard and manage user identity across Africa!

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package dojah

import (
	"encoding/json"
)

// GetAccountAnalysisResponseEntityAccountBreakdown struct for GetAccountAnalysisResponseEntityAccountBreakdown
type GetAccountAnalysisResponseEntityAccountBreakdown struct {
	TotalCreditEntry *float32 `json:"TotalCreditEntry,omitempty"`
	TotalDebitMade *float32 `json:"TotalDebitMade,omitempty"`
	AverageMonthlyBalance *float32 `json:"averageMonthlyBalance,omitempty"`
	AverageMonthlyCredits *float32 `json:"averageMonthlyCredits,omitempty"`
	AverageMonthlyDebits *float32 `json:"averageMonthlyDebits,omitempty"`
	AverageWeeklyBalance *float32 `json:"averageWeeklyBalance,omitempty"`
	AverageWeeklyCredits *float32 `json:"averageWeeklyCredits,omitempty"`
	AverageWeeklyDebits *float32 `json:"averageWeeklyDebits,omitempty"`
	ClosingBalance *float32 `json:"closingBalance,omitempty"`
	FirstDateInStatement *string `json:"firstDateInStatement,omitempty"`
	LastDateInStatement *string `json:"lastDateInStatement,omitempty"`
	NumberOfTransactingMonths *float32 `json:"numberOfTransactingMonths,omitempty"`
	PeriodInStatement *string `json:"periodInStatement,omitempty"`
	YearInStatement *string `json:"yearInStatement,omitempty"`
}

// NewGetAccountAnalysisResponseEntityAccountBreakdown instantiates a new GetAccountAnalysisResponseEntityAccountBreakdown object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAccountAnalysisResponseEntityAccountBreakdown() *GetAccountAnalysisResponseEntityAccountBreakdown {
	this := GetAccountAnalysisResponseEntityAccountBreakdown{}
	return &this
}

// NewGetAccountAnalysisResponseEntityAccountBreakdownWithDefaults instantiates a new GetAccountAnalysisResponseEntityAccountBreakdown object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAccountAnalysisResponseEntityAccountBreakdownWithDefaults() *GetAccountAnalysisResponseEntityAccountBreakdown {
	this := GetAccountAnalysisResponseEntityAccountBreakdown{}
	return &this
}

// GetTotalCreditEntry returns the TotalCreditEntry field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) GetTotalCreditEntry() float32 {
	if o == nil || isNil(o.TotalCreditEntry) {
		var ret float32
		return ret
	}
	return *o.TotalCreditEntry
}

// GetTotalCreditEntryOk returns a tuple with the TotalCreditEntry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) GetTotalCreditEntryOk() (*float32, bool) {
	if o == nil || isNil(o.TotalCreditEntry) {
    return nil, false
	}
	return o.TotalCreditEntry, true
}

// HasTotalCreditEntry returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) HasTotalCreditEntry() bool {
	if o != nil && !isNil(o.TotalCreditEntry) {
		return true
	}

	return false
}

// SetTotalCreditEntry gets a reference to the given float32 and assigns it to the TotalCreditEntry field.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) SetTotalCreditEntry(v float32) {
	o.TotalCreditEntry = &v
}

// GetTotalDebitMade returns the TotalDebitMade field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) GetTotalDebitMade() float32 {
	if o == nil || isNil(o.TotalDebitMade) {
		var ret float32
		return ret
	}
	return *o.TotalDebitMade
}

// GetTotalDebitMadeOk returns a tuple with the TotalDebitMade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) GetTotalDebitMadeOk() (*float32, bool) {
	if o == nil || isNil(o.TotalDebitMade) {
    return nil, false
	}
	return o.TotalDebitMade, true
}

// HasTotalDebitMade returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) HasTotalDebitMade() bool {
	if o != nil && !isNil(o.TotalDebitMade) {
		return true
	}

	return false
}

// SetTotalDebitMade gets a reference to the given float32 and assigns it to the TotalDebitMade field.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) SetTotalDebitMade(v float32) {
	o.TotalDebitMade = &v
}

// GetAverageMonthlyBalance returns the AverageMonthlyBalance field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) GetAverageMonthlyBalance() float32 {
	if o == nil || isNil(o.AverageMonthlyBalance) {
		var ret float32
		return ret
	}
	return *o.AverageMonthlyBalance
}

// GetAverageMonthlyBalanceOk returns a tuple with the AverageMonthlyBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) GetAverageMonthlyBalanceOk() (*float32, bool) {
	if o == nil || isNil(o.AverageMonthlyBalance) {
    return nil, false
	}
	return o.AverageMonthlyBalance, true
}

// HasAverageMonthlyBalance returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) HasAverageMonthlyBalance() bool {
	if o != nil && !isNil(o.AverageMonthlyBalance) {
		return true
	}

	return false
}

// SetAverageMonthlyBalance gets a reference to the given float32 and assigns it to the AverageMonthlyBalance field.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) SetAverageMonthlyBalance(v float32) {
	o.AverageMonthlyBalance = &v
}

// GetAverageMonthlyCredits returns the AverageMonthlyCredits field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) GetAverageMonthlyCredits() float32 {
	if o == nil || isNil(o.AverageMonthlyCredits) {
		var ret float32
		return ret
	}
	return *o.AverageMonthlyCredits
}

// GetAverageMonthlyCreditsOk returns a tuple with the AverageMonthlyCredits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) GetAverageMonthlyCreditsOk() (*float32, bool) {
	if o == nil || isNil(o.AverageMonthlyCredits) {
    return nil, false
	}
	return o.AverageMonthlyCredits, true
}

// HasAverageMonthlyCredits returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) HasAverageMonthlyCredits() bool {
	if o != nil && !isNil(o.AverageMonthlyCredits) {
		return true
	}

	return false
}

// SetAverageMonthlyCredits gets a reference to the given float32 and assigns it to the AverageMonthlyCredits field.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) SetAverageMonthlyCredits(v float32) {
	o.AverageMonthlyCredits = &v
}

// GetAverageMonthlyDebits returns the AverageMonthlyDebits field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) GetAverageMonthlyDebits() float32 {
	if o == nil || isNil(o.AverageMonthlyDebits) {
		var ret float32
		return ret
	}
	return *o.AverageMonthlyDebits
}

// GetAverageMonthlyDebitsOk returns a tuple with the AverageMonthlyDebits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) GetAverageMonthlyDebitsOk() (*float32, bool) {
	if o == nil || isNil(o.AverageMonthlyDebits) {
    return nil, false
	}
	return o.AverageMonthlyDebits, true
}

// HasAverageMonthlyDebits returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) HasAverageMonthlyDebits() bool {
	if o != nil && !isNil(o.AverageMonthlyDebits) {
		return true
	}

	return false
}

// SetAverageMonthlyDebits gets a reference to the given float32 and assigns it to the AverageMonthlyDebits field.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) SetAverageMonthlyDebits(v float32) {
	o.AverageMonthlyDebits = &v
}

// GetAverageWeeklyBalance returns the AverageWeeklyBalance field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) GetAverageWeeklyBalance() float32 {
	if o == nil || isNil(o.AverageWeeklyBalance) {
		var ret float32
		return ret
	}
	return *o.AverageWeeklyBalance
}

// GetAverageWeeklyBalanceOk returns a tuple with the AverageWeeklyBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) GetAverageWeeklyBalanceOk() (*float32, bool) {
	if o == nil || isNil(o.AverageWeeklyBalance) {
    return nil, false
	}
	return o.AverageWeeklyBalance, true
}

// HasAverageWeeklyBalance returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) HasAverageWeeklyBalance() bool {
	if o != nil && !isNil(o.AverageWeeklyBalance) {
		return true
	}

	return false
}

// SetAverageWeeklyBalance gets a reference to the given float32 and assigns it to the AverageWeeklyBalance field.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) SetAverageWeeklyBalance(v float32) {
	o.AverageWeeklyBalance = &v
}

// GetAverageWeeklyCredits returns the AverageWeeklyCredits field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) GetAverageWeeklyCredits() float32 {
	if o == nil || isNil(o.AverageWeeklyCredits) {
		var ret float32
		return ret
	}
	return *o.AverageWeeklyCredits
}

// GetAverageWeeklyCreditsOk returns a tuple with the AverageWeeklyCredits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) GetAverageWeeklyCreditsOk() (*float32, bool) {
	if o == nil || isNil(o.AverageWeeklyCredits) {
    return nil, false
	}
	return o.AverageWeeklyCredits, true
}

// HasAverageWeeklyCredits returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) HasAverageWeeklyCredits() bool {
	if o != nil && !isNil(o.AverageWeeklyCredits) {
		return true
	}

	return false
}

// SetAverageWeeklyCredits gets a reference to the given float32 and assigns it to the AverageWeeklyCredits field.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) SetAverageWeeklyCredits(v float32) {
	o.AverageWeeklyCredits = &v
}

// GetAverageWeeklyDebits returns the AverageWeeklyDebits field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) GetAverageWeeklyDebits() float32 {
	if o == nil || isNil(o.AverageWeeklyDebits) {
		var ret float32
		return ret
	}
	return *o.AverageWeeklyDebits
}

// GetAverageWeeklyDebitsOk returns a tuple with the AverageWeeklyDebits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) GetAverageWeeklyDebitsOk() (*float32, bool) {
	if o == nil || isNil(o.AverageWeeklyDebits) {
    return nil, false
	}
	return o.AverageWeeklyDebits, true
}

// HasAverageWeeklyDebits returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) HasAverageWeeklyDebits() bool {
	if o != nil && !isNil(o.AverageWeeklyDebits) {
		return true
	}

	return false
}

// SetAverageWeeklyDebits gets a reference to the given float32 and assigns it to the AverageWeeklyDebits field.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) SetAverageWeeklyDebits(v float32) {
	o.AverageWeeklyDebits = &v
}

// GetClosingBalance returns the ClosingBalance field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) GetClosingBalance() float32 {
	if o == nil || isNil(o.ClosingBalance) {
		var ret float32
		return ret
	}
	return *o.ClosingBalance
}

// GetClosingBalanceOk returns a tuple with the ClosingBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) GetClosingBalanceOk() (*float32, bool) {
	if o == nil || isNil(o.ClosingBalance) {
    return nil, false
	}
	return o.ClosingBalance, true
}

// HasClosingBalance returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) HasClosingBalance() bool {
	if o != nil && !isNil(o.ClosingBalance) {
		return true
	}

	return false
}

// SetClosingBalance gets a reference to the given float32 and assigns it to the ClosingBalance field.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) SetClosingBalance(v float32) {
	o.ClosingBalance = &v
}

// GetFirstDateInStatement returns the FirstDateInStatement field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) GetFirstDateInStatement() string {
	if o == nil || isNil(o.FirstDateInStatement) {
		var ret string
		return ret
	}
	return *o.FirstDateInStatement
}

// GetFirstDateInStatementOk returns a tuple with the FirstDateInStatement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) GetFirstDateInStatementOk() (*string, bool) {
	if o == nil || isNil(o.FirstDateInStatement) {
    return nil, false
	}
	return o.FirstDateInStatement, true
}

// HasFirstDateInStatement returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) HasFirstDateInStatement() bool {
	if o != nil && !isNil(o.FirstDateInStatement) {
		return true
	}

	return false
}

// SetFirstDateInStatement gets a reference to the given string and assigns it to the FirstDateInStatement field.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) SetFirstDateInStatement(v string) {
	o.FirstDateInStatement = &v
}

// GetLastDateInStatement returns the LastDateInStatement field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) GetLastDateInStatement() string {
	if o == nil || isNil(o.LastDateInStatement) {
		var ret string
		return ret
	}
	return *o.LastDateInStatement
}

// GetLastDateInStatementOk returns a tuple with the LastDateInStatement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) GetLastDateInStatementOk() (*string, bool) {
	if o == nil || isNil(o.LastDateInStatement) {
    return nil, false
	}
	return o.LastDateInStatement, true
}

// HasLastDateInStatement returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) HasLastDateInStatement() bool {
	if o != nil && !isNil(o.LastDateInStatement) {
		return true
	}

	return false
}

// SetLastDateInStatement gets a reference to the given string and assigns it to the LastDateInStatement field.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) SetLastDateInStatement(v string) {
	o.LastDateInStatement = &v
}

// GetNumberOfTransactingMonths returns the NumberOfTransactingMonths field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) GetNumberOfTransactingMonths() float32 {
	if o == nil || isNil(o.NumberOfTransactingMonths) {
		var ret float32
		return ret
	}
	return *o.NumberOfTransactingMonths
}

// GetNumberOfTransactingMonthsOk returns a tuple with the NumberOfTransactingMonths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) GetNumberOfTransactingMonthsOk() (*float32, bool) {
	if o == nil || isNil(o.NumberOfTransactingMonths) {
    return nil, false
	}
	return o.NumberOfTransactingMonths, true
}

// HasNumberOfTransactingMonths returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) HasNumberOfTransactingMonths() bool {
	if o != nil && !isNil(o.NumberOfTransactingMonths) {
		return true
	}

	return false
}

// SetNumberOfTransactingMonths gets a reference to the given float32 and assigns it to the NumberOfTransactingMonths field.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) SetNumberOfTransactingMonths(v float32) {
	o.NumberOfTransactingMonths = &v
}

// GetPeriodInStatement returns the PeriodInStatement field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) GetPeriodInStatement() string {
	if o == nil || isNil(o.PeriodInStatement) {
		var ret string
		return ret
	}
	return *o.PeriodInStatement
}

// GetPeriodInStatementOk returns a tuple with the PeriodInStatement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) GetPeriodInStatementOk() (*string, bool) {
	if o == nil || isNil(o.PeriodInStatement) {
    return nil, false
	}
	return o.PeriodInStatement, true
}

// HasPeriodInStatement returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) HasPeriodInStatement() bool {
	if o != nil && !isNil(o.PeriodInStatement) {
		return true
	}

	return false
}

// SetPeriodInStatement gets a reference to the given string and assigns it to the PeriodInStatement field.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) SetPeriodInStatement(v string) {
	o.PeriodInStatement = &v
}

// GetYearInStatement returns the YearInStatement field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) GetYearInStatement() string {
	if o == nil || isNil(o.YearInStatement) {
		var ret string
		return ret
	}
	return *o.YearInStatement
}

// GetYearInStatementOk returns a tuple with the YearInStatement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) GetYearInStatementOk() (*string, bool) {
	if o == nil || isNil(o.YearInStatement) {
    return nil, false
	}
	return o.YearInStatement, true
}

// HasYearInStatement returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) HasYearInStatement() bool {
	if o != nil && !isNil(o.YearInStatement) {
		return true
	}

	return false
}

// SetYearInStatement gets a reference to the given string and assigns it to the YearInStatement field.
func (o *GetAccountAnalysisResponseEntityAccountBreakdown) SetYearInStatement(v string) {
	o.YearInStatement = &v
}

func (o GetAccountAnalysisResponseEntityAccountBreakdown) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.TotalCreditEntry) {
		toSerialize["TotalCreditEntry"] = o.TotalCreditEntry
	}
	if !isNil(o.TotalDebitMade) {
		toSerialize["TotalDebitMade"] = o.TotalDebitMade
	}
	if !isNil(o.AverageMonthlyBalance) {
		toSerialize["averageMonthlyBalance"] = o.AverageMonthlyBalance
	}
	if !isNil(o.AverageMonthlyCredits) {
		toSerialize["averageMonthlyCredits"] = o.AverageMonthlyCredits
	}
	if !isNil(o.AverageMonthlyDebits) {
		toSerialize["averageMonthlyDebits"] = o.AverageMonthlyDebits
	}
	if !isNil(o.AverageWeeklyBalance) {
		toSerialize["averageWeeklyBalance"] = o.AverageWeeklyBalance
	}
	if !isNil(o.AverageWeeklyCredits) {
		toSerialize["averageWeeklyCredits"] = o.AverageWeeklyCredits
	}
	if !isNil(o.AverageWeeklyDebits) {
		toSerialize["averageWeeklyDebits"] = o.AverageWeeklyDebits
	}
	if !isNil(o.ClosingBalance) {
		toSerialize["closingBalance"] = o.ClosingBalance
	}
	if !isNil(o.FirstDateInStatement) {
		toSerialize["firstDateInStatement"] = o.FirstDateInStatement
	}
	if !isNil(o.LastDateInStatement) {
		toSerialize["lastDateInStatement"] = o.LastDateInStatement
	}
	if !isNil(o.NumberOfTransactingMonths) {
		toSerialize["numberOfTransactingMonths"] = o.NumberOfTransactingMonths
	}
	if !isNil(o.PeriodInStatement) {
		toSerialize["periodInStatement"] = o.PeriodInStatement
	}
	if !isNil(o.YearInStatement) {
		toSerialize["yearInStatement"] = o.YearInStatement
	}
	return json.Marshal(toSerialize)
}

type NullableGetAccountAnalysisResponseEntityAccountBreakdown struct {
	value *GetAccountAnalysisResponseEntityAccountBreakdown
	isSet bool
}

func (v NullableGetAccountAnalysisResponseEntityAccountBreakdown) Get() *GetAccountAnalysisResponseEntityAccountBreakdown {
	return v.value
}

func (v *NullableGetAccountAnalysisResponseEntityAccountBreakdown) Set(val *GetAccountAnalysisResponseEntityAccountBreakdown) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAccountAnalysisResponseEntityAccountBreakdown) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAccountAnalysisResponseEntityAccountBreakdown) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAccountAnalysisResponseEntityAccountBreakdown(val *GetAccountAnalysisResponseEntityAccountBreakdown) *NullableGetAccountAnalysisResponseEntityAccountBreakdown {
	return &NullableGetAccountAnalysisResponseEntityAccountBreakdown{value: val, isSet: true}
}

func (v NullableGetAccountAnalysisResponseEntityAccountBreakdown) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAccountAnalysisResponseEntityAccountBreakdown) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


