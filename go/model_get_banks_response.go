/*
DOJAH Publilc APIs

Use Dojah to verify, onboard and manage user identity across Africa!

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package dojah

import (
	"encoding/json"
)

// GetBanksResponse struct for GetBanksResponse
type GetBanksResponse struct {
	Entity []GetBanksResponseEntityInner `json:"entity,omitempty"`
}

// NewGetBanksResponse instantiates a new GetBanksResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetBanksResponse() *GetBanksResponse {
	this := GetBanksResponse{}
	return &this
}

// NewGetBanksResponseWithDefaults instantiates a new GetBanksResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetBanksResponseWithDefaults() *GetBanksResponse {
	this := GetBanksResponse{}
	return &this
}

// GetEntity returns the Entity field value if set, zero value otherwise.
func (o *GetBanksResponse) GetEntity() []GetBanksResponseEntityInner {
	if o == nil || isNil(o.Entity) {
		var ret []GetBanksResponseEntityInner
		return ret
	}
	return o.Entity
}

// GetEntityOk returns a tuple with the Entity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBanksResponse) GetEntityOk() ([]GetBanksResponseEntityInner, bool) {
	if o == nil || isNil(o.Entity) {
    return nil, false
	}
	return o.Entity, true
}

// HasEntity returns a boolean if a field has been set.
func (o *GetBanksResponse) HasEntity() bool {
	if o != nil && !isNil(o.Entity) {
		return true
	}

	return false
}

// SetEntity gets a reference to the given []GetBanksResponseEntityInner and assigns it to the Entity field.
func (o *GetBanksResponse) SetEntity(v []GetBanksResponseEntityInner) {
	o.Entity = v
}

func (o GetBanksResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Entity) {
		toSerialize["entity"] = o.Entity
	}
	return json.Marshal(toSerialize)
}

type NullableGetBanksResponse struct {
	value *GetBanksResponse
	isSet bool
}

func (v NullableGetBanksResponse) Get() *GetBanksResponse {
	return v.value
}

func (v *NullableGetBanksResponse) Set(val *GetBanksResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetBanksResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetBanksResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetBanksResponse(val *GetBanksResponse) *NullableGetBanksResponse {
	return &NullableGetBanksResponse{value: val, isSet: true}
}

func (v NullableGetBanksResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetBanksResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


