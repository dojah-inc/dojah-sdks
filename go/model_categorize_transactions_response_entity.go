/*
DOJAH APIs

Use Dojah to verify, onboard and manage user identity across Africa!

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package dojah

import (
	"encoding/json"
)

// CategorizeTransactionsResponseEntity struct for CategorizeTransactionsResponseEntity
type CategorizeTransactionsResponseEntity struct {
	Category *string `json:"category,omitempty"`
	SubCategory *string `json:"sub_category,omitempty"`
	ServiceId *float32 `json:"service_id,omitempty"`
	IsSubscription *float32 `json:"is_subscription,omitempty"`
	Duration *string `json:"duration,omitempty"`
	ServiceName *string `json:"service_name,omitempty"`
	Label *string `json:"label,omitempty"`
	ModeOfPayment *string `json:"mode_of_payment,omitempty"`
}

// NewCategorizeTransactionsResponseEntity instantiates a new CategorizeTransactionsResponseEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCategorizeTransactionsResponseEntity() *CategorizeTransactionsResponseEntity {
	this := CategorizeTransactionsResponseEntity{}
	return &this
}

// NewCategorizeTransactionsResponseEntityWithDefaults instantiates a new CategorizeTransactionsResponseEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCategorizeTransactionsResponseEntityWithDefaults() *CategorizeTransactionsResponseEntity {
	this := CategorizeTransactionsResponseEntity{}
	return &this
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *CategorizeTransactionsResponseEntity) GetCategory() string {
	if o == nil || isNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategorizeTransactionsResponseEntity) GetCategoryOk() (*string, bool) {
	if o == nil || isNil(o.Category) {
    return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *CategorizeTransactionsResponseEntity) HasCategory() bool {
	if o != nil && !isNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *CategorizeTransactionsResponseEntity) SetCategory(v string) {
	o.Category = &v
}

// GetSubCategory returns the SubCategory field value if set, zero value otherwise.
func (o *CategorizeTransactionsResponseEntity) GetSubCategory() string {
	if o == nil || isNil(o.SubCategory) {
		var ret string
		return ret
	}
	return *o.SubCategory
}

// GetSubCategoryOk returns a tuple with the SubCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategorizeTransactionsResponseEntity) GetSubCategoryOk() (*string, bool) {
	if o == nil || isNil(o.SubCategory) {
    return nil, false
	}
	return o.SubCategory, true
}

// HasSubCategory returns a boolean if a field has been set.
func (o *CategorizeTransactionsResponseEntity) HasSubCategory() bool {
	if o != nil && !isNil(o.SubCategory) {
		return true
	}

	return false
}

// SetSubCategory gets a reference to the given string and assigns it to the SubCategory field.
func (o *CategorizeTransactionsResponseEntity) SetSubCategory(v string) {
	o.SubCategory = &v
}

// GetServiceId returns the ServiceId field value if set, zero value otherwise.
func (o *CategorizeTransactionsResponseEntity) GetServiceId() float32 {
	if o == nil || isNil(o.ServiceId) {
		var ret float32
		return ret
	}
	return *o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategorizeTransactionsResponseEntity) GetServiceIdOk() (*float32, bool) {
	if o == nil || isNil(o.ServiceId) {
    return nil, false
	}
	return o.ServiceId, true
}

// HasServiceId returns a boolean if a field has been set.
func (o *CategorizeTransactionsResponseEntity) HasServiceId() bool {
	if o != nil && !isNil(o.ServiceId) {
		return true
	}

	return false
}

// SetServiceId gets a reference to the given float32 and assigns it to the ServiceId field.
func (o *CategorizeTransactionsResponseEntity) SetServiceId(v float32) {
	o.ServiceId = &v
}

// GetIsSubscription returns the IsSubscription field value if set, zero value otherwise.
func (o *CategorizeTransactionsResponseEntity) GetIsSubscription() float32 {
	if o == nil || isNil(o.IsSubscription) {
		var ret float32
		return ret
	}
	return *o.IsSubscription
}

// GetIsSubscriptionOk returns a tuple with the IsSubscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategorizeTransactionsResponseEntity) GetIsSubscriptionOk() (*float32, bool) {
	if o == nil || isNil(o.IsSubscription) {
    return nil, false
	}
	return o.IsSubscription, true
}

// HasIsSubscription returns a boolean if a field has been set.
func (o *CategorizeTransactionsResponseEntity) HasIsSubscription() bool {
	if o != nil && !isNil(o.IsSubscription) {
		return true
	}

	return false
}

// SetIsSubscription gets a reference to the given float32 and assigns it to the IsSubscription field.
func (o *CategorizeTransactionsResponseEntity) SetIsSubscription(v float32) {
	o.IsSubscription = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *CategorizeTransactionsResponseEntity) GetDuration() string {
	if o == nil || isNil(o.Duration) {
		var ret string
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategorizeTransactionsResponseEntity) GetDurationOk() (*string, bool) {
	if o == nil || isNil(o.Duration) {
    return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *CategorizeTransactionsResponseEntity) HasDuration() bool {
	if o != nil && !isNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given string and assigns it to the Duration field.
func (o *CategorizeTransactionsResponseEntity) SetDuration(v string) {
	o.Duration = &v
}

// GetServiceName returns the ServiceName field value if set, zero value otherwise.
func (o *CategorizeTransactionsResponseEntity) GetServiceName() string {
	if o == nil || isNil(o.ServiceName) {
		var ret string
		return ret
	}
	return *o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategorizeTransactionsResponseEntity) GetServiceNameOk() (*string, bool) {
	if o == nil || isNil(o.ServiceName) {
    return nil, false
	}
	return o.ServiceName, true
}

// HasServiceName returns a boolean if a field has been set.
func (o *CategorizeTransactionsResponseEntity) HasServiceName() bool {
	if o != nil && !isNil(o.ServiceName) {
		return true
	}

	return false
}

// SetServiceName gets a reference to the given string and assigns it to the ServiceName field.
func (o *CategorizeTransactionsResponseEntity) SetServiceName(v string) {
	o.ServiceName = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *CategorizeTransactionsResponseEntity) GetLabel() string {
	if o == nil || isNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategorizeTransactionsResponseEntity) GetLabelOk() (*string, bool) {
	if o == nil || isNil(o.Label) {
    return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *CategorizeTransactionsResponseEntity) HasLabel() bool {
	if o != nil && !isNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *CategorizeTransactionsResponseEntity) SetLabel(v string) {
	o.Label = &v
}

// GetModeOfPayment returns the ModeOfPayment field value if set, zero value otherwise.
func (o *CategorizeTransactionsResponseEntity) GetModeOfPayment() string {
	if o == nil || isNil(o.ModeOfPayment) {
		var ret string
		return ret
	}
	return *o.ModeOfPayment
}

// GetModeOfPaymentOk returns a tuple with the ModeOfPayment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategorizeTransactionsResponseEntity) GetModeOfPaymentOk() (*string, bool) {
	if o == nil || isNil(o.ModeOfPayment) {
    return nil, false
	}
	return o.ModeOfPayment, true
}

// HasModeOfPayment returns a boolean if a field has been set.
func (o *CategorizeTransactionsResponseEntity) HasModeOfPayment() bool {
	if o != nil && !isNil(o.ModeOfPayment) {
		return true
	}

	return false
}

// SetModeOfPayment gets a reference to the given string and assigns it to the ModeOfPayment field.
func (o *CategorizeTransactionsResponseEntity) SetModeOfPayment(v string) {
	o.ModeOfPayment = &v
}

func (o CategorizeTransactionsResponseEntity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !isNil(o.SubCategory) {
		toSerialize["sub_category"] = o.SubCategory
	}
	if !isNil(o.ServiceId) {
		toSerialize["service_id"] = o.ServiceId
	}
	if !isNil(o.IsSubscription) {
		toSerialize["is_subscription"] = o.IsSubscription
	}
	if !isNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !isNil(o.ServiceName) {
		toSerialize["service_name"] = o.ServiceName
	}
	if !isNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !isNil(o.ModeOfPayment) {
		toSerialize["mode_of_payment"] = o.ModeOfPayment
	}
	return json.Marshal(toSerialize)
}

type NullableCategorizeTransactionsResponseEntity struct {
	value *CategorizeTransactionsResponseEntity
	isSet bool
}

func (v NullableCategorizeTransactionsResponseEntity) Get() *CategorizeTransactionsResponseEntity {
	return v.value
}

func (v *NullableCategorizeTransactionsResponseEntity) Set(val *CategorizeTransactionsResponseEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableCategorizeTransactionsResponseEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableCategorizeTransactionsResponseEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCategorizeTransactionsResponseEntity(val *CategorizeTransactionsResponseEntity) *NullableCategorizeTransactionsResponseEntity {
	return &NullableCategorizeTransactionsResponseEntity{value: val, isSet: true}
}

func (v NullableCategorizeTransactionsResponseEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCategorizeTransactionsResponseEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


