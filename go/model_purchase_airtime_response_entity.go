/*
DOJAH Publilc APIs

Use Dojah to verify, onboard and manage user identity across Africa!

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package dojah

import (
	"encoding/json"
)

// PurchaseAirtimeResponseEntity struct for PurchaseAirtimeResponseEntity
type PurchaseAirtimeResponseEntity struct {
	Data []PurchaseAirtimeResponseEntityDataInner `json:"data,omitempty"`
	ReferenceId *string `json:"reference_id,omitempty"`
}

// NewPurchaseAirtimeResponseEntity instantiates a new PurchaseAirtimeResponseEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPurchaseAirtimeResponseEntity() *PurchaseAirtimeResponseEntity {
	this := PurchaseAirtimeResponseEntity{}
	return &this
}

// NewPurchaseAirtimeResponseEntityWithDefaults instantiates a new PurchaseAirtimeResponseEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPurchaseAirtimeResponseEntityWithDefaults() *PurchaseAirtimeResponseEntity {
	this := PurchaseAirtimeResponseEntity{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *PurchaseAirtimeResponseEntity) GetData() []PurchaseAirtimeResponseEntityDataInner {
	if o == nil || isNil(o.Data) {
		var ret []PurchaseAirtimeResponseEntityDataInner
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseAirtimeResponseEntity) GetDataOk() ([]PurchaseAirtimeResponseEntityDataInner, bool) {
	if o == nil || isNil(o.Data) {
    return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *PurchaseAirtimeResponseEntity) HasData() bool {
	if o != nil && !isNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []PurchaseAirtimeResponseEntityDataInner and assigns it to the Data field.
func (o *PurchaseAirtimeResponseEntity) SetData(v []PurchaseAirtimeResponseEntityDataInner) {
	o.Data = v
}

// GetReferenceId returns the ReferenceId field value if set, zero value otherwise.
func (o *PurchaseAirtimeResponseEntity) GetReferenceId() string {
	if o == nil || isNil(o.ReferenceId) {
		var ret string
		return ret
	}
	return *o.ReferenceId
}

// GetReferenceIdOk returns a tuple with the ReferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PurchaseAirtimeResponseEntity) GetReferenceIdOk() (*string, bool) {
	if o == nil || isNil(o.ReferenceId) {
    return nil, false
	}
	return o.ReferenceId, true
}

// HasReferenceId returns a boolean if a field has been set.
func (o *PurchaseAirtimeResponseEntity) HasReferenceId() bool {
	if o != nil && !isNil(o.ReferenceId) {
		return true
	}

	return false
}

// SetReferenceId gets a reference to the given string and assigns it to the ReferenceId field.
func (o *PurchaseAirtimeResponseEntity) SetReferenceId(v string) {
	o.ReferenceId = &v
}

func (o PurchaseAirtimeResponseEntity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !isNil(o.ReferenceId) {
		toSerialize["reference_id"] = o.ReferenceId
	}
	return json.Marshal(toSerialize)
}

type NullablePurchaseAirtimeResponseEntity struct {
	value *PurchaseAirtimeResponseEntity
	isSet bool
}

func (v NullablePurchaseAirtimeResponseEntity) Get() *PurchaseAirtimeResponseEntity {
	return v.value
}

func (v *NullablePurchaseAirtimeResponseEntity) Set(val *PurchaseAirtimeResponseEntity) {
	v.value = val
	v.isSet = true
}

func (v NullablePurchaseAirtimeResponseEntity) IsSet() bool {
	return v.isSet
}

func (v *NullablePurchaseAirtimeResponseEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePurchaseAirtimeResponseEntity(val *PurchaseAirtimeResponseEntity) *NullablePurchaseAirtimeResponseEntity {
	return &NullablePurchaseAirtimeResponseEntity{value: val, isSet: true}
}

func (v NullablePurchaseAirtimeResponseEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePurchaseAirtimeResponseEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


