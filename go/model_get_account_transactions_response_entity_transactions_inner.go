/*
DOJAH APIs

Use Dojah to verify, onboard and manage user identity across Africa!

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package dojah

import (
	"encoding/json"
)

// GetAccountTransactionsResponseEntityTransactionsInner struct for GetAccountTransactionsResponseEntityTransactionsInner
type GetAccountTransactionsResponseEntityTransactionsInner struct {
	Id *float32 `json:"id,omitempty"`
	TransactionDate *string `json:"transaction_date,omitempty"`
	ValueDate *string `json:"value_date,omitempty"`
	TransType *string `json:"trans_type,omitempty"`
	BankName *string `json:"bank_name,omitempty"`
	Amount *string `json:"amount,omitempty"`
	Reference *string `json:"reference,omitempty"`
	Narration *string `json:"narration,omitempty"`
}

// NewGetAccountTransactionsResponseEntityTransactionsInner instantiates a new GetAccountTransactionsResponseEntityTransactionsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAccountTransactionsResponseEntityTransactionsInner() *GetAccountTransactionsResponseEntityTransactionsInner {
	this := GetAccountTransactionsResponseEntityTransactionsInner{}
	return &this
}

// NewGetAccountTransactionsResponseEntityTransactionsInnerWithDefaults instantiates a new GetAccountTransactionsResponseEntityTransactionsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAccountTransactionsResponseEntityTransactionsInnerWithDefaults() *GetAccountTransactionsResponseEntityTransactionsInner {
	this := GetAccountTransactionsResponseEntityTransactionsInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetAccountTransactionsResponseEntityTransactionsInner) GetId() float32 {
	if o == nil || isNil(o.Id) {
		var ret float32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountTransactionsResponseEntityTransactionsInner) GetIdOk() (*float32, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetAccountTransactionsResponseEntityTransactionsInner) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given float32 and assigns it to the Id field.
func (o *GetAccountTransactionsResponseEntityTransactionsInner) SetId(v float32) {
	o.Id = &v
}

// GetTransactionDate returns the TransactionDate field value if set, zero value otherwise.
func (o *GetAccountTransactionsResponseEntityTransactionsInner) GetTransactionDate() string {
	if o == nil || isNil(o.TransactionDate) {
		var ret string
		return ret
	}
	return *o.TransactionDate
}

// GetTransactionDateOk returns a tuple with the TransactionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountTransactionsResponseEntityTransactionsInner) GetTransactionDateOk() (*string, bool) {
	if o == nil || isNil(o.TransactionDate) {
    return nil, false
	}
	return o.TransactionDate, true
}

// HasTransactionDate returns a boolean if a field has been set.
func (o *GetAccountTransactionsResponseEntityTransactionsInner) HasTransactionDate() bool {
	if o != nil && !isNil(o.TransactionDate) {
		return true
	}

	return false
}

// SetTransactionDate gets a reference to the given string and assigns it to the TransactionDate field.
func (o *GetAccountTransactionsResponseEntityTransactionsInner) SetTransactionDate(v string) {
	o.TransactionDate = &v
}

// GetValueDate returns the ValueDate field value if set, zero value otherwise.
func (o *GetAccountTransactionsResponseEntityTransactionsInner) GetValueDate() string {
	if o == nil || isNil(o.ValueDate) {
		var ret string
		return ret
	}
	return *o.ValueDate
}

// GetValueDateOk returns a tuple with the ValueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountTransactionsResponseEntityTransactionsInner) GetValueDateOk() (*string, bool) {
	if o == nil || isNil(o.ValueDate) {
    return nil, false
	}
	return o.ValueDate, true
}

// HasValueDate returns a boolean if a field has been set.
func (o *GetAccountTransactionsResponseEntityTransactionsInner) HasValueDate() bool {
	if o != nil && !isNil(o.ValueDate) {
		return true
	}

	return false
}

// SetValueDate gets a reference to the given string and assigns it to the ValueDate field.
func (o *GetAccountTransactionsResponseEntityTransactionsInner) SetValueDate(v string) {
	o.ValueDate = &v
}

// GetTransType returns the TransType field value if set, zero value otherwise.
func (o *GetAccountTransactionsResponseEntityTransactionsInner) GetTransType() string {
	if o == nil || isNil(o.TransType) {
		var ret string
		return ret
	}
	return *o.TransType
}

// GetTransTypeOk returns a tuple with the TransType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountTransactionsResponseEntityTransactionsInner) GetTransTypeOk() (*string, bool) {
	if o == nil || isNil(o.TransType) {
    return nil, false
	}
	return o.TransType, true
}

// HasTransType returns a boolean if a field has been set.
func (o *GetAccountTransactionsResponseEntityTransactionsInner) HasTransType() bool {
	if o != nil && !isNil(o.TransType) {
		return true
	}

	return false
}

// SetTransType gets a reference to the given string and assigns it to the TransType field.
func (o *GetAccountTransactionsResponseEntityTransactionsInner) SetTransType(v string) {
	o.TransType = &v
}

// GetBankName returns the BankName field value if set, zero value otherwise.
func (o *GetAccountTransactionsResponseEntityTransactionsInner) GetBankName() string {
	if o == nil || isNil(o.BankName) {
		var ret string
		return ret
	}
	return *o.BankName
}

// GetBankNameOk returns a tuple with the BankName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountTransactionsResponseEntityTransactionsInner) GetBankNameOk() (*string, bool) {
	if o == nil || isNil(o.BankName) {
    return nil, false
	}
	return o.BankName, true
}

// HasBankName returns a boolean if a field has been set.
func (o *GetAccountTransactionsResponseEntityTransactionsInner) HasBankName() bool {
	if o != nil && !isNil(o.BankName) {
		return true
	}

	return false
}

// SetBankName gets a reference to the given string and assigns it to the BankName field.
func (o *GetAccountTransactionsResponseEntityTransactionsInner) SetBankName(v string) {
	o.BankName = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *GetAccountTransactionsResponseEntityTransactionsInner) GetAmount() string {
	if o == nil || isNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountTransactionsResponseEntityTransactionsInner) GetAmountOk() (*string, bool) {
	if o == nil || isNil(o.Amount) {
    return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *GetAccountTransactionsResponseEntityTransactionsInner) HasAmount() bool {
	if o != nil && !isNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *GetAccountTransactionsResponseEntityTransactionsInner) SetAmount(v string) {
	o.Amount = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *GetAccountTransactionsResponseEntityTransactionsInner) GetReference() string {
	if o == nil || isNil(o.Reference) {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountTransactionsResponseEntityTransactionsInner) GetReferenceOk() (*string, bool) {
	if o == nil || isNil(o.Reference) {
    return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *GetAccountTransactionsResponseEntityTransactionsInner) HasReference() bool {
	if o != nil && !isNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *GetAccountTransactionsResponseEntityTransactionsInner) SetReference(v string) {
	o.Reference = &v
}

// GetNarration returns the Narration field value if set, zero value otherwise.
func (o *GetAccountTransactionsResponseEntityTransactionsInner) GetNarration() string {
	if o == nil || isNil(o.Narration) {
		var ret string
		return ret
	}
	return *o.Narration
}

// GetNarrationOk returns a tuple with the Narration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountTransactionsResponseEntityTransactionsInner) GetNarrationOk() (*string, bool) {
	if o == nil || isNil(o.Narration) {
    return nil, false
	}
	return o.Narration, true
}

// HasNarration returns a boolean if a field has been set.
func (o *GetAccountTransactionsResponseEntityTransactionsInner) HasNarration() bool {
	if o != nil && !isNil(o.Narration) {
		return true
	}

	return false
}

// SetNarration gets a reference to the given string and assigns it to the Narration field.
func (o *GetAccountTransactionsResponseEntityTransactionsInner) SetNarration(v string) {
	o.Narration = &v
}

func (o GetAccountTransactionsResponseEntityTransactionsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.TransactionDate) {
		toSerialize["transaction_date"] = o.TransactionDate
	}
	if !isNil(o.ValueDate) {
		toSerialize["value_date"] = o.ValueDate
	}
	if !isNil(o.TransType) {
		toSerialize["trans_type"] = o.TransType
	}
	if !isNil(o.BankName) {
		toSerialize["bank_name"] = o.BankName
	}
	if !isNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !isNil(o.Reference) {
		toSerialize["reference"] = o.Reference
	}
	if !isNil(o.Narration) {
		toSerialize["narration"] = o.Narration
	}
	return json.Marshal(toSerialize)
}

type NullableGetAccountTransactionsResponseEntityTransactionsInner struct {
	value *GetAccountTransactionsResponseEntityTransactionsInner
	isSet bool
}

func (v NullableGetAccountTransactionsResponseEntityTransactionsInner) Get() *GetAccountTransactionsResponseEntityTransactionsInner {
	return v.value
}

func (v *NullableGetAccountTransactionsResponseEntityTransactionsInner) Set(val *GetAccountTransactionsResponseEntityTransactionsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAccountTransactionsResponseEntityTransactionsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAccountTransactionsResponseEntityTransactionsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAccountTransactionsResponseEntityTransactionsInner(val *GetAccountTransactionsResponseEntityTransactionsInner) *NullableGetAccountTransactionsResponseEntityTransactionsInner {
	return &NullableGetAccountTransactionsResponseEntityTransactionsInner{value: val, isSet: true}
}

func (v NullableGetAccountTransactionsResponseEntityTransactionsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAccountTransactionsResponseEntityTransactionsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


