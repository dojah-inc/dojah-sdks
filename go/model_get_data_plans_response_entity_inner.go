/*
DOJAH APIs

Use Dojah to verify, onboard and manage user identity across Africa!

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package dojah

import (
	"encoding/json"
)

// GetDataPlansResponseEntityInner struct for GetDataPlansResponseEntityInner
type GetDataPlansResponseEntityInner struct {
	Description *string `json:"description,omitempty"`
	Amount *float32 `json:"amount,omitempty"`
	Plan *string `json:"plan,omitempty"`
}

// NewGetDataPlansResponseEntityInner instantiates a new GetDataPlansResponseEntityInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetDataPlansResponseEntityInner() *GetDataPlansResponseEntityInner {
	this := GetDataPlansResponseEntityInner{}
	return &this
}

// NewGetDataPlansResponseEntityInnerWithDefaults instantiates a new GetDataPlansResponseEntityInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetDataPlansResponseEntityInnerWithDefaults() *GetDataPlansResponseEntityInner {
	this := GetDataPlansResponseEntityInner{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GetDataPlansResponseEntityInner) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDataPlansResponseEntityInner) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GetDataPlansResponseEntityInner) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GetDataPlansResponseEntityInner) SetDescription(v string) {
	o.Description = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *GetDataPlansResponseEntityInner) GetAmount() float32 {
	if o == nil || isNil(o.Amount) {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDataPlansResponseEntityInner) GetAmountOk() (*float32, bool) {
	if o == nil || isNil(o.Amount) {
    return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *GetDataPlansResponseEntityInner) HasAmount() bool {
	if o != nil && !isNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *GetDataPlansResponseEntityInner) SetAmount(v float32) {
	o.Amount = &v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *GetDataPlansResponseEntityInner) GetPlan() string {
	if o == nil || isNil(o.Plan) {
		var ret string
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDataPlansResponseEntityInner) GetPlanOk() (*string, bool) {
	if o == nil || isNil(o.Plan) {
    return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *GetDataPlansResponseEntityInner) HasPlan() bool {
	if o != nil && !isNil(o.Plan) {
		return true
	}

	return false
}

// SetPlan gets a reference to the given string and assigns it to the Plan field.
func (o *GetDataPlansResponseEntityInner) SetPlan(v string) {
	o.Plan = &v
}

func (o GetDataPlansResponseEntityInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !isNil(o.Plan) {
		toSerialize["plan"] = o.Plan
	}
	return json.Marshal(toSerialize)
}

type NullableGetDataPlansResponseEntityInner struct {
	value *GetDataPlansResponseEntityInner
	isSet bool
}

func (v NullableGetDataPlansResponseEntityInner) Get() *GetDataPlansResponseEntityInner {
	return v.value
}

func (v *NullableGetDataPlansResponseEntityInner) Set(val *GetDataPlansResponseEntityInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDataPlansResponseEntityInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDataPlansResponseEntityInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDataPlansResponseEntityInner(val *GetDataPlansResponseEntityInner) *NullableGetDataPlansResponseEntityInner {
	return &NullableGetDataPlansResponseEntityInner{value: val, isSet: true}
}

func (v NullableGetDataPlansResponseEntityInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDataPlansResponseEntityInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


