/*
DOJAH APIs

Use Dojah to verify, onboard and manage user identity across Africa!

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package dojah

import (
	"encoding/json"
)

// GetAccountAnalysisResponseEntityExpenseBreakdown struct for GetAccountAnalysisResponseEntityExpenseBreakdown
type GetAccountAnalysisResponseEntityExpenseBreakdown struct {
	MaximumExpense *string `json:"MaximumExpense,omitempty"`
	AtmLocations []string `json:"atmLocations,omitempty"`
	AverageMonthlyExpenseOnAirtimeandData *float32 `json:"averageMonthlyExpenseOnAirtimeandData,omitempty"`
	AverageMonthlyExpenseOnAtmAndPOS *float32 `json:"averageMonthlyExpenseOnAtmAndPOS,omitempty"`
	AverageMonthlyExpenseOnChargesAndStampDuty *float32 `json:"averageMonthlyExpenseOnChargesAndStampDuty,omitempty"`
	AverageMonthlyExpenseOnEntertainment *float32 `json:"averageMonthlyExpenseOnEntertainment,omitempty"`
	AverageMonthlyExpenseOnGambling *float32 `json:"averageMonthlyExpenseOnGambling,omitempty"`
	AverageMonthlyExpenseOnHealth *float32 `json:"averageMonthlyExpenseOnHealth,omitempty"`
	AverageMonthlyExpenseOnHospitalityandFood *float32 `json:"averageMonthlyExpenseOnHospitalityandFood,omitempty"`
	AverageMonthlyExpenseOnInsurance *float32 `json:"averageMonthlyExpenseOnInsurance,omitempty"`
	AverageMonthlyExpenseOnInternationalTransactions *float32 `json:"averageMonthlyExpenseOnInternationalTransactions,omitempty"`
	AverageMonthlyExpenseOnOnlineandWeb *float32 `json:"averageMonthlyExpenseOnOnlineandWeb,omitempty"`
	AverageMonthlyExpenseOnRent *float32 `json:"averageMonthlyExpenseOnRent,omitempty"`
	AverageMonthlyExpenseOnSavingsAndInvestments *float32 `json:"averageMonthlyExpenseOnSavingsAndInvestments,omitempty"`
	AverageMonthlyExpenseOnTransfer *float32 `json:"averageMonthlyExpenseOnTransfer,omitempty"`
	AverageMonthlyExpenseOnTransportation *float32 `json:"averageMonthlyExpenseOnTransportation,omitempty"`
	AverageMonthlyExpenseOnUSSD *float32 `json:"averageMonthlyExpenseOnUSSD,omitempty"`
	AverageMonthlyExpenseOnUtilities *float32 `json:"averageMonthlyExpenseOnUtilities,omitempty"`
	AverageMonthlyExpenseonTravel *float32 `json:"averageMonthlyExpenseonTravel,omitempty"`
	AverageMonthlyRecurringExpenses *float32 `json:"averageMonthlyRecurringExpenses,omitempty"`
	AverageMonthlyTotalExpenses *float32 `json:"averageMonthlyTotalExpenses,omitempty"`
	MinimumSalary *float32 `json:"minimumSalary,omitempty"`
	MonthWithmaximumExpense *string `json:"monthWithmaximumExpense,omitempty"`
	MostFrequentExpense *string `json:"mostFrequentExpense,omitempty"`
	MostFrequentExpenseCategory *string `json:"mostFrequentExpenseCategory,omitempty"`
	TotalExpenseOnAirtimeAndData *float32 `json:"totalExpenseOnAirtimeAndData,omitempty"`
	TotalExpenseOnInternationalTransactions *float32 `json:"totalExpenseOnInternationalTransactions,omitempty"`
	TotalExpenseOnSavingsAndInvestments *float32 `json:"totalExpenseOnSavingsAndInvestments,omitempty"`
	TotalExpenseOnTransfer *float32 `json:"totalExpenseOnTransfer,omitempty"`
	TotalExpenseOnTransportation *float32 `json:"totalExpenseOnTransportation,omitempty"`
	TotalExpenseOnTravel *float32 `json:"totalExpenseOnTravel,omitempty"`
	TotalExpenseOnUSSD *float32 `json:"totalExpenseOnUSSD,omitempty"`
	TotalExpenseOnUtilities *float32 `json:"totalExpenseOnUtilities,omitempty"`
	TotalExpenseonChargesAndStampDuty *float32 `json:"totalExpenseonChargesAndStampDuty,omitempty"`
	TotalExpenseonEntertainment *float32 `json:"totalExpenseonEntertainment,omitempty"`
	TotalExpenseonGambling *float32 `json:"totalExpenseonGambling,omitempty"`
	TotalExpenseonHealth *float32 `json:"totalExpenseonHealth,omitempty"`
	TotalExpenseonHospitalityandFood *float32 `json:"totalExpenseonHospitalityandFood,omitempty"`
	TotalExpenseonInsurance *float32 `json:"totalExpenseonInsurance,omitempty"`
	TotalExpenseonOnlineandWeb *float32 `json:"totalExpenseonOnlineandWeb,omitempty"`
	TotalMonthlyExpenses *float32 `json:"totalMonthlyExpenses,omitempty"`
	TotalRecurringExpenses *float32 `json:"totalRecurringExpenses,omitempty"`
}

// NewGetAccountAnalysisResponseEntityExpenseBreakdown instantiates a new GetAccountAnalysisResponseEntityExpenseBreakdown object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAccountAnalysisResponseEntityExpenseBreakdown() *GetAccountAnalysisResponseEntityExpenseBreakdown {
	this := GetAccountAnalysisResponseEntityExpenseBreakdown{}
	return &this
}

// NewGetAccountAnalysisResponseEntityExpenseBreakdownWithDefaults instantiates a new GetAccountAnalysisResponseEntityExpenseBreakdown object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAccountAnalysisResponseEntityExpenseBreakdownWithDefaults() *GetAccountAnalysisResponseEntityExpenseBreakdown {
	this := GetAccountAnalysisResponseEntityExpenseBreakdown{}
	return &this
}

// GetMaximumExpense returns the MaximumExpense field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetMaximumExpense() string {
	if o == nil || isNil(o.MaximumExpense) {
		var ret string
		return ret
	}
	return *o.MaximumExpense
}

// GetMaximumExpenseOk returns a tuple with the MaximumExpense field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetMaximumExpenseOk() (*string, bool) {
	if o == nil || isNil(o.MaximumExpense) {
    return nil, false
	}
	return o.MaximumExpense, true
}

// HasMaximumExpense returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasMaximumExpense() bool {
	if o != nil && !isNil(o.MaximumExpense) {
		return true
	}

	return false
}

// SetMaximumExpense gets a reference to the given string and assigns it to the MaximumExpense field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetMaximumExpense(v string) {
	o.MaximumExpense = &v
}

// GetAtmLocations returns the AtmLocations field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAtmLocations() []string {
	if o == nil || isNil(o.AtmLocations) {
		var ret []string
		return ret
	}
	return o.AtmLocations
}

// GetAtmLocationsOk returns a tuple with the AtmLocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAtmLocationsOk() ([]string, bool) {
	if o == nil || isNil(o.AtmLocations) {
    return nil, false
	}
	return o.AtmLocations, true
}

// HasAtmLocations returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasAtmLocations() bool {
	if o != nil && !isNil(o.AtmLocations) {
		return true
	}

	return false
}

// SetAtmLocations gets a reference to the given []string and assigns it to the AtmLocations field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetAtmLocations(v []string) {
	o.AtmLocations = v
}

// GetAverageMonthlyExpenseOnAirtimeandData returns the AverageMonthlyExpenseOnAirtimeandData field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyExpenseOnAirtimeandData() float32 {
	if o == nil || isNil(o.AverageMonthlyExpenseOnAirtimeandData) {
		var ret float32
		return ret
	}
	return *o.AverageMonthlyExpenseOnAirtimeandData
}

// GetAverageMonthlyExpenseOnAirtimeandDataOk returns a tuple with the AverageMonthlyExpenseOnAirtimeandData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyExpenseOnAirtimeandDataOk() (*float32, bool) {
	if o == nil || isNil(o.AverageMonthlyExpenseOnAirtimeandData) {
    return nil, false
	}
	return o.AverageMonthlyExpenseOnAirtimeandData, true
}

// HasAverageMonthlyExpenseOnAirtimeandData returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasAverageMonthlyExpenseOnAirtimeandData() bool {
	if o != nil && !isNil(o.AverageMonthlyExpenseOnAirtimeandData) {
		return true
	}

	return false
}

// SetAverageMonthlyExpenseOnAirtimeandData gets a reference to the given float32 and assigns it to the AverageMonthlyExpenseOnAirtimeandData field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetAverageMonthlyExpenseOnAirtimeandData(v float32) {
	o.AverageMonthlyExpenseOnAirtimeandData = &v
}

// GetAverageMonthlyExpenseOnAtmAndPOS returns the AverageMonthlyExpenseOnAtmAndPOS field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyExpenseOnAtmAndPOS() float32 {
	if o == nil || isNil(o.AverageMonthlyExpenseOnAtmAndPOS) {
		var ret float32
		return ret
	}
	return *o.AverageMonthlyExpenseOnAtmAndPOS
}

// GetAverageMonthlyExpenseOnAtmAndPOSOk returns a tuple with the AverageMonthlyExpenseOnAtmAndPOS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyExpenseOnAtmAndPOSOk() (*float32, bool) {
	if o == nil || isNil(o.AverageMonthlyExpenseOnAtmAndPOS) {
    return nil, false
	}
	return o.AverageMonthlyExpenseOnAtmAndPOS, true
}

// HasAverageMonthlyExpenseOnAtmAndPOS returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasAverageMonthlyExpenseOnAtmAndPOS() bool {
	if o != nil && !isNil(o.AverageMonthlyExpenseOnAtmAndPOS) {
		return true
	}

	return false
}

// SetAverageMonthlyExpenseOnAtmAndPOS gets a reference to the given float32 and assigns it to the AverageMonthlyExpenseOnAtmAndPOS field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetAverageMonthlyExpenseOnAtmAndPOS(v float32) {
	o.AverageMonthlyExpenseOnAtmAndPOS = &v
}

// GetAverageMonthlyExpenseOnChargesAndStampDuty returns the AverageMonthlyExpenseOnChargesAndStampDuty field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyExpenseOnChargesAndStampDuty() float32 {
	if o == nil || isNil(o.AverageMonthlyExpenseOnChargesAndStampDuty) {
		var ret float32
		return ret
	}
	return *o.AverageMonthlyExpenseOnChargesAndStampDuty
}

// GetAverageMonthlyExpenseOnChargesAndStampDutyOk returns a tuple with the AverageMonthlyExpenseOnChargesAndStampDuty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyExpenseOnChargesAndStampDutyOk() (*float32, bool) {
	if o == nil || isNil(o.AverageMonthlyExpenseOnChargesAndStampDuty) {
    return nil, false
	}
	return o.AverageMonthlyExpenseOnChargesAndStampDuty, true
}

// HasAverageMonthlyExpenseOnChargesAndStampDuty returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasAverageMonthlyExpenseOnChargesAndStampDuty() bool {
	if o != nil && !isNil(o.AverageMonthlyExpenseOnChargesAndStampDuty) {
		return true
	}

	return false
}

// SetAverageMonthlyExpenseOnChargesAndStampDuty gets a reference to the given float32 and assigns it to the AverageMonthlyExpenseOnChargesAndStampDuty field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetAverageMonthlyExpenseOnChargesAndStampDuty(v float32) {
	o.AverageMonthlyExpenseOnChargesAndStampDuty = &v
}

// GetAverageMonthlyExpenseOnEntertainment returns the AverageMonthlyExpenseOnEntertainment field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyExpenseOnEntertainment() float32 {
	if o == nil || isNil(o.AverageMonthlyExpenseOnEntertainment) {
		var ret float32
		return ret
	}
	return *o.AverageMonthlyExpenseOnEntertainment
}

// GetAverageMonthlyExpenseOnEntertainmentOk returns a tuple with the AverageMonthlyExpenseOnEntertainment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyExpenseOnEntertainmentOk() (*float32, bool) {
	if o == nil || isNil(o.AverageMonthlyExpenseOnEntertainment) {
    return nil, false
	}
	return o.AverageMonthlyExpenseOnEntertainment, true
}

// HasAverageMonthlyExpenseOnEntertainment returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasAverageMonthlyExpenseOnEntertainment() bool {
	if o != nil && !isNil(o.AverageMonthlyExpenseOnEntertainment) {
		return true
	}

	return false
}

// SetAverageMonthlyExpenseOnEntertainment gets a reference to the given float32 and assigns it to the AverageMonthlyExpenseOnEntertainment field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetAverageMonthlyExpenseOnEntertainment(v float32) {
	o.AverageMonthlyExpenseOnEntertainment = &v
}

// GetAverageMonthlyExpenseOnGambling returns the AverageMonthlyExpenseOnGambling field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyExpenseOnGambling() float32 {
	if o == nil || isNil(o.AverageMonthlyExpenseOnGambling) {
		var ret float32
		return ret
	}
	return *o.AverageMonthlyExpenseOnGambling
}

// GetAverageMonthlyExpenseOnGamblingOk returns a tuple with the AverageMonthlyExpenseOnGambling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyExpenseOnGamblingOk() (*float32, bool) {
	if o == nil || isNil(o.AverageMonthlyExpenseOnGambling) {
    return nil, false
	}
	return o.AverageMonthlyExpenseOnGambling, true
}

// HasAverageMonthlyExpenseOnGambling returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasAverageMonthlyExpenseOnGambling() bool {
	if o != nil && !isNil(o.AverageMonthlyExpenseOnGambling) {
		return true
	}

	return false
}

// SetAverageMonthlyExpenseOnGambling gets a reference to the given float32 and assigns it to the AverageMonthlyExpenseOnGambling field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetAverageMonthlyExpenseOnGambling(v float32) {
	o.AverageMonthlyExpenseOnGambling = &v
}

// GetAverageMonthlyExpenseOnHealth returns the AverageMonthlyExpenseOnHealth field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyExpenseOnHealth() float32 {
	if o == nil || isNil(o.AverageMonthlyExpenseOnHealth) {
		var ret float32
		return ret
	}
	return *o.AverageMonthlyExpenseOnHealth
}

// GetAverageMonthlyExpenseOnHealthOk returns a tuple with the AverageMonthlyExpenseOnHealth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyExpenseOnHealthOk() (*float32, bool) {
	if o == nil || isNil(o.AverageMonthlyExpenseOnHealth) {
    return nil, false
	}
	return o.AverageMonthlyExpenseOnHealth, true
}

// HasAverageMonthlyExpenseOnHealth returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasAverageMonthlyExpenseOnHealth() bool {
	if o != nil && !isNil(o.AverageMonthlyExpenseOnHealth) {
		return true
	}

	return false
}

// SetAverageMonthlyExpenseOnHealth gets a reference to the given float32 and assigns it to the AverageMonthlyExpenseOnHealth field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetAverageMonthlyExpenseOnHealth(v float32) {
	o.AverageMonthlyExpenseOnHealth = &v
}

// GetAverageMonthlyExpenseOnHospitalityandFood returns the AverageMonthlyExpenseOnHospitalityandFood field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyExpenseOnHospitalityandFood() float32 {
	if o == nil || isNil(o.AverageMonthlyExpenseOnHospitalityandFood) {
		var ret float32
		return ret
	}
	return *o.AverageMonthlyExpenseOnHospitalityandFood
}

// GetAverageMonthlyExpenseOnHospitalityandFoodOk returns a tuple with the AverageMonthlyExpenseOnHospitalityandFood field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyExpenseOnHospitalityandFoodOk() (*float32, bool) {
	if o == nil || isNil(o.AverageMonthlyExpenseOnHospitalityandFood) {
    return nil, false
	}
	return o.AverageMonthlyExpenseOnHospitalityandFood, true
}

// HasAverageMonthlyExpenseOnHospitalityandFood returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasAverageMonthlyExpenseOnHospitalityandFood() bool {
	if o != nil && !isNil(o.AverageMonthlyExpenseOnHospitalityandFood) {
		return true
	}

	return false
}

// SetAverageMonthlyExpenseOnHospitalityandFood gets a reference to the given float32 and assigns it to the AverageMonthlyExpenseOnHospitalityandFood field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetAverageMonthlyExpenseOnHospitalityandFood(v float32) {
	o.AverageMonthlyExpenseOnHospitalityandFood = &v
}

// GetAverageMonthlyExpenseOnInsurance returns the AverageMonthlyExpenseOnInsurance field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyExpenseOnInsurance() float32 {
	if o == nil || isNil(o.AverageMonthlyExpenseOnInsurance) {
		var ret float32
		return ret
	}
	return *o.AverageMonthlyExpenseOnInsurance
}

// GetAverageMonthlyExpenseOnInsuranceOk returns a tuple with the AverageMonthlyExpenseOnInsurance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyExpenseOnInsuranceOk() (*float32, bool) {
	if o == nil || isNil(o.AverageMonthlyExpenseOnInsurance) {
    return nil, false
	}
	return o.AverageMonthlyExpenseOnInsurance, true
}

// HasAverageMonthlyExpenseOnInsurance returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasAverageMonthlyExpenseOnInsurance() bool {
	if o != nil && !isNil(o.AverageMonthlyExpenseOnInsurance) {
		return true
	}

	return false
}

// SetAverageMonthlyExpenseOnInsurance gets a reference to the given float32 and assigns it to the AverageMonthlyExpenseOnInsurance field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetAverageMonthlyExpenseOnInsurance(v float32) {
	o.AverageMonthlyExpenseOnInsurance = &v
}

// GetAverageMonthlyExpenseOnInternationalTransactions returns the AverageMonthlyExpenseOnInternationalTransactions field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyExpenseOnInternationalTransactions() float32 {
	if o == nil || isNil(o.AverageMonthlyExpenseOnInternationalTransactions) {
		var ret float32
		return ret
	}
	return *o.AverageMonthlyExpenseOnInternationalTransactions
}

// GetAverageMonthlyExpenseOnInternationalTransactionsOk returns a tuple with the AverageMonthlyExpenseOnInternationalTransactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyExpenseOnInternationalTransactionsOk() (*float32, bool) {
	if o == nil || isNil(o.AverageMonthlyExpenseOnInternationalTransactions) {
    return nil, false
	}
	return o.AverageMonthlyExpenseOnInternationalTransactions, true
}

// HasAverageMonthlyExpenseOnInternationalTransactions returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasAverageMonthlyExpenseOnInternationalTransactions() bool {
	if o != nil && !isNil(o.AverageMonthlyExpenseOnInternationalTransactions) {
		return true
	}

	return false
}

// SetAverageMonthlyExpenseOnInternationalTransactions gets a reference to the given float32 and assigns it to the AverageMonthlyExpenseOnInternationalTransactions field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetAverageMonthlyExpenseOnInternationalTransactions(v float32) {
	o.AverageMonthlyExpenseOnInternationalTransactions = &v
}

// GetAverageMonthlyExpenseOnOnlineandWeb returns the AverageMonthlyExpenseOnOnlineandWeb field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyExpenseOnOnlineandWeb() float32 {
	if o == nil || isNil(o.AverageMonthlyExpenseOnOnlineandWeb) {
		var ret float32
		return ret
	}
	return *o.AverageMonthlyExpenseOnOnlineandWeb
}

// GetAverageMonthlyExpenseOnOnlineandWebOk returns a tuple with the AverageMonthlyExpenseOnOnlineandWeb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyExpenseOnOnlineandWebOk() (*float32, bool) {
	if o == nil || isNil(o.AverageMonthlyExpenseOnOnlineandWeb) {
    return nil, false
	}
	return o.AverageMonthlyExpenseOnOnlineandWeb, true
}

// HasAverageMonthlyExpenseOnOnlineandWeb returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasAverageMonthlyExpenseOnOnlineandWeb() bool {
	if o != nil && !isNil(o.AverageMonthlyExpenseOnOnlineandWeb) {
		return true
	}

	return false
}

// SetAverageMonthlyExpenseOnOnlineandWeb gets a reference to the given float32 and assigns it to the AverageMonthlyExpenseOnOnlineandWeb field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetAverageMonthlyExpenseOnOnlineandWeb(v float32) {
	o.AverageMonthlyExpenseOnOnlineandWeb = &v
}

// GetAverageMonthlyExpenseOnRent returns the AverageMonthlyExpenseOnRent field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyExpenseOnRent() float32 {
	if o == nil || isNil(o.AverageMonthlyExpenseOnRent) {
		var ret float32
		return ret
	}
	return *o.AverageMonthlyExpenseOnRent
}

// GetAverageMonthlyExpenseOnRentOk returns a tuple with the AverageMonthlyExpenseOnRent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyExpenseOnRentOk() (*float32, bool) {
	if o == nil || isNil(o.AverageMonthlyExpenseOnRent) {
    return nil, false
	}
	return o.AverageMonthlyExpenseOnRent, true
}

// HasAverageMonthlyExpenseOnRent returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasAverageMonthlyExpenseOnRent() bool {
	if o != nil && !isNil(o.AverageMonthlyExpenseOnRent) {
		return true
	}

	return false
}

// SetAverageMonthlyExpenseOnRent gets a reference to the given float32 and assigns it to the AverageMonthlyExpenseOnRent field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetAverageMonthlyExpenseOnRent(v float32) {
	o.AverageMonthlyExpenseOnRent = &v
}

// GetAverageMonthlyExpenseOnSavingsAndInvestments returns the AverageMonthlyExpenseOnSavingsAndInvestments field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyExpenseOnSavingsAndInvestments() float32 {
	if o == nil || isNil(o.AverageMonthlyExpenseOnSavingsAndInvestments) {
		var ret float32
		return ret
	}
	return *o.AverageMonthlyExpenseOnSavingsAndInvestments
}

// GetAverageMonthlyExpenseOnSavingsAndInvestmentsOk returns a tuple with the AverageMonthlyExpenseOnSavingsAndInvestments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyExpenseOnSavingsAndInvestmentsOk() (*float32, bool) {
	if o == nil || isNil(o.AverageMonthlyExpenseOnSavingsAndInvestments) {
    return nil, false
	}
	return o.AverageMonthlyExpenseOnSavingsAndInvestments, true
}

// HasAverageMonthlyExpenseOnSavingsAndInvestments returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasAverageMonthlyExpenseOnSavingsAndInvestments() bool {
	if o != nil && !isNil(o.AverageMonthlyExpenseOnSavingsAndInvestments) {
		return true
	}

	return false
}

// SetAverageMonthlyExpenseOnSavingsAndInvestments gets a reference to the given float32 and assigns it to the AverageMonthlyExpenseOnSavingsAndInvestments field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetAverageMonthlyExpenseOnSavingsAndInvestments(v float32) {
	o.AverageMonthlyExpenseOnSavingsAndInvestments = &v
}

// GetAverageMonthlyExpenseOnTransfer returns the AverageMonthlyExpenseOnTransfer field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyExpenseOnTransfer() float32 {
	if o == nil || isNil(o.AverageMonthlyExpenseOnTransfer) {
		var ret float32
		return ret
	}
	return *o.AverageMonthlyExpenseOnTransfer
}

// GetAverageMonthlyExpenseOnTransferOk returns a tuple with the AverageMonthlyExpenseOnTransfer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyExpenseOnTransferOk() (*float32, bool) {
	if o == nil || isNil(o.AverageMonthlyExpenseOnTransfer) {
    return nil, false
	}
	return o.AverageMonthlyExpenseOnTransfer, true
}

// HasAverageMonthlyExpenseOnTransfer returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasAverageMonthlyExpenseOnTransfer() bool {
	if o != nil && !isNil(o.AverageMonthlyExpenseOnTransfer) {
		return true
	}

	return false
}

// SetAverageMonthlyExpenseOnTransfer gets a reference to the given float32 and assigns it to the AverageMonthlyExpenseOnTransfer field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetAverageMonthlyExpenseOnTransfer(v float32) {
	o.AverageMonthlyExpenseOnTransfer = &v
}

// GetAverageMonthlyExpenseOnTransportation returns the AverageMonthlyExpenseOnTransportation field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyExpenseOnTransportation() float32 {
	if o == nil || isNil(o.AverageMonthlyExpenseOnTransportation) {
		var ret float32
		return ret
	}
	return *o.AverageMonthlyExpenseOnTransportation
}

// GetAverageMonthlyExpenseOnTransportationOk returns a tuple with the AverageMonthlyExpenseOnTransportation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyExpenseOnTransportationOk() (*float32, bool) {
	if o == nil || isNil(o.AverageMonthlyExpenseOnTransportation) {
    return nil, false
	}
	return o.AverageMonthlyExpenseOnTransportation, true
}

// HasAverageMonthlyExpenseOnTransportation returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasAverageMonthlyExpenseOnTransportation() bool {
	if o != nil && !isNil(o.AverageMonthlyExpenseOnTransportation) {
		return true
	}

	return false
}

// SetAverageMonthlyExpenseOnTransportation gets a reference to the given float32 and assigns it to the AverageMonthlyExpenseOnTransportation field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetAverageMonthlyExpenseOnTransportation(v float32) {
	o.AverageMonthlyExpenseOnTransportation = &v
}

// GetAverageMonthlyExpenseOnUSSD returns the AverageMonthlyExpenseOnUSSD field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyExpenseOnUSSD() float32 {
	if o == nil || isNil(o.AverageMonthlyExpenseOnUSSD) {
		var ret float32
		return ret
	}
	return *o.AverageMonthlyExpenseOnUSSD
}

// GetAverageMonthlyExpenseOnUSSDOk returns a tuple with the AverageMonthlyExpenseOnUSSD field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyExpenseOnUSSDOk() (*float32, bool) {
	if o == nil || isNil(o.AverageMonthlyExpenseOnUSSD) {
    return nil, false
	}
	return o.AverageMonthlyExpenseOnUSSD, true
}

// HasAverageMonthlyExpenseOnUSSD returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasAverageMonthlyExpenseOnUSSD() bool {
	if o != nil && !isNil(o.AverageMonthlyExpenseOnUSSD) {
		return true
	}

	return false
}

// SetAverageMonthlyExpenseOnUSSD gets a reference to the given float32 and assigns it to the AverageMonthlyExpenseOnUSSD field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetAverageMonthlyExpenseOnUSSD(v float32) {
	o.AverageMonthlyExpenseOnUSSD = &v
}

// GetAverageMonthlyExpenseOnUtilities returns the AverageMonthlyExpenseOnUtilities field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyExpenseOnUtilities() float32 {
	if o == nil || isNil(o.AverageMonthlyExpenseOnUtilities) {
		var ret float32
		return ret
	}
	return *o.AverageMonthlyExpenseOnUtilities
}

// GetAverageMonthlyExpenseOnUtilitiesOk returns a tuple with the AverageMonthlyExpenseOnUtilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyExpenseOnUtilitiesOk() (*float32, bool) {
	if o == nil || isNil(o.AverageMonthlyExpenseOnUtilities) {
    return nil, false
	}
	return o.AverageMonthlyExpenseOnUtilities, true
}

// HasAverageMonthlyExpenseOnUtilities returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasAverageMonthlyExpenseOnUtilities() bool {
	if o != nil && !isNil(o.AverageMonthlyExpenseOnUtilities) {
		return true
	}

	return false
}

// SetAverageMonthlyExpenseOnUtilities gets a reference to the given float32 and assigns it to the AverageMonthlyExpenseOnUtilities field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetAverageMonthlyExpenseOnUtilities(v float32) {
	o.AverageMonthlyExpenseOnUtilities = &v
}

// GetAverageMonthlyExpenseonTravel returns the AverageMonthlyExpenseonTravel field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyExpenseonTravel() float32 {
	if o == nil || isNil(o.AverageMonthlyExpenseonTravel) {
		var ret float32
		return ret
	}
	return *o.AverageMonthlyExpenseonTravel
}

// GetAverageMonthlyExpenseonTravelOk returns a tuple with the AverageMonthlyExpenseonTravel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyExpenseonTravelOk() (*float32, bool) {
	if o == nil || isNil(o.AverageMonthlyExpenseonTravel) {
    return nil, false
	}
	return o.AverageMonthlyExpenseonTravel, true
}

// HasAverageMonthlyExpenseonTravel returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasAverageMonthlyExpenseonTravel() bool {
	if o != nil && !isNil(o.AverageMonthlyExpenseonTravel) {
		return true
	}

	return false
}

// SetAverageMonthlyExpenseonTravel gets a reference to the given float32 and assigns it to the AverageMonthlyExpenseonTravel field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetAverageMonthlyExpenseonTravel(v float32) {
	o.AverageMonthlyExpenseonTravel = &v
}

// GetAverageMonthlyRecurringExpenses returns the AverageMonthlyRecurringExpenses field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyRecurringExpenses() float32 {
	if o == nil || isNil(o.AverageMonthlyRecurringExpenses) {
		var ret float32
		return ret
	}
	return *o.AverageMonthlyRecurringExpenses
}

// GetAverageMonthlyRecurringExpensesOk returns a tuple with the AverageMonthlyRecurringExpenses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyRecurringExpensesOk() (*float32, bool) {
	if o == nil || isNil(o.AverageMonthlyRecurringExpenses) {
    return nil, false
	}
	return o.AverageMonthlyRecurringExpenses, true
}

// HasAverageMonthlyRecurringExpenses returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasAverageMonthlyRecurringExpenses() bool {
	if o != nil && !isNil(o.AverageMonthlyRecurringExpenses) {
		return true
	}

	return false
}

// SetAverageMonthlyRecurringExpenses gets a reference to the given float32 and assigns it to the AverageMonthlyRecurringExpenses field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetAverageMonthlyRecurringExpenses(v float32) {
	o.AverageMonthlyRecurringExpenses = &v
}

// GetAverageMonthlyTotalExpenses returns the AverageMonthlyTotalExpenses field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyTotalExpenses() float32 {
	if o == nil || isNil(o.AverageMonthlyTotalExpenses) {
		var ret float32
		return ret
	}
	return *o.AverageMonthlyTotalExpenses
}

// GetAverageMonthlyTotalExpensesOk returns a tuple with the AverageMonthlyTotalExpenses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetAverageMonthlyTotalExpensesOk() (*float32, bool) {
	if o == nil || isNil(o.AverageMonthlyTotalExpenses) {
    return nil, false
	}
	return o.AverageMonthlyTotalExpenses, true
}

// HasAverageMonthlyTotalExpenses returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasAverageMonthlyTotalExpenses() bool {
	if o != nil && !isNil(o.AverageMonthlyTotalExpenses) {
		return true
	}

	return false
}

// SetAverageMonthlyTotalExpenses gets a reference to the given float32 and assigns it to the AverageMonthlyTotalExpenses field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetAverageMonthlyTotalExpenses(v float32) {
	o.AverageMonthlyTotalExpenses = &v
}

// GetMinimumSalary returns the MinimumSalary field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetMinimumSalary() float32 {
	if o == nil || isNil(o.MinimumSalary) {
		var ret float32
		return ret
	}
	return *o.MinimumSalary
}

// GetMinimumSalaryOk returns a tuple with the MinimumSalary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetMinimumSalaryOk() (*float32, bool) {
	if o == nil || isNil(o.MinimumSalary) {
    return nil, false
	}
	return o.MinimumSalary, true
}

// HasMinimumSalary returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasMinimumSalary() bool {
	if o != nil && !isNil(o.MinimumSalary) {
		return true
	}

	return false
}

// SetMinimumSalary gets a reference to the given float32 and assigns it to the MinimumSalary field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetMinimumSalary(v float32) {
	o.MinimumSalary = &v
}

// GetMonthWithmaximumExpense returns the MonthWithmaximumExpense field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetMonthWithmaximumExpense() string {
	if o == nil || isNil(o.MonthWithmaximumExpense) {
		var ret string
		return ret
	}
	return *o.MonthWithmaximumExpense
}

// GetMonthWithmaximumExpenseOk returns a tuple with the MonthWithmaximumExpense field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetMonthWithmaximumExpenseOk() (*string, bool) {
	if o == nil || isNil(o.MonthWithmaximumExpense) {
    return nil, false
	}
	return o.MonthWithmaximumExpense, true
}

// HasMonthWithmaximumExpense returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasMonthWithmaximumExpense() bool {
	if o != nil && !isNil(o.MonthWithmaximumExpense) {
		return true
	}

	return false
}

// SetMonthWithmaximumExpense gets a reference to the given string and assigns it to the MonthWithmaximumExpense field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetMonthWithmaximumExpense(v string) {
	o.MonthWithmaximumExpense = &v
}

// GetMostFrequentExpense returns the MostFrequentExpense field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetMostFrequentExpense() string {
	if o == nil || isNil(o.MostFrequentExpense) {
		var ret string
		return ret
	}
	return *o.MostFrequentExpense
}

// GetMostFrequentExpenseOk returns a tuple with the MostFrequentExpense field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetMostFrequentExpenseOk() (*string, bool) {
	if o == nil || isNil(o.MostFrequentExpense) {
    return nil, false
	}
	return o.MostFrequentExpense, true
}

// HasMostFrequentExpense returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasMostFrequentExpense() bool {
	if o != nil && !isNil(o.MostFrequentExpense) {
		return true
	}

	return false
}

// SetMostFrequentExpense gets a reference to the given string and assigns it to the MostFrequentExpense field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetMostFrequentExpense(v string) {
	o.MostFrequentExpense = &v
}

// GetMostFrequentExpenseCategory returns the MostFrequentExpenseCategory field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetMostFrequentExpenseCategory() string {
	if o == nil || isNil(o.MostFrequentExpenseCategory) {
		var ret string
		return ret
	}
	return *o.MostFrequentExpenseCategory
}

// GetMostFrequentExpenseCategoryOk returns a tuple with the MostFrequentExpenseCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetMostFrequentExpenseCategoryOk() (*string, bool) {
	if o == nil || isNil(o.MostFrequentExpenseCategory) {
    return nil, false
	}
	return o.MostFrequentExpenseCategory, true
}

// HasMostFrequentExpenseCategory returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasMostFrequentExpenseCategory() bool {
	if o != nil && !isNil(o.MostFrequentExpenseCategory) {
		return true
	}

	return false
}

// SetMostFrequentExpenseCategory gets a reference to the given string and assigns it to the MostFrequentExpenseCategory field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetMostFrequentExpenseCategory(v string) {
	o.MostFrequentExpenseCategory = &v
}

// GetTotalExpenseOnAirtimeAndData returns the TotalExpenseOnAirtimeAndData field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetTotalExpenseOnAirtimeAndData() float32 {
	if o == nil || isNil(o.TotalExpenseOnAirtimeAndData) {
		var ret float32
		return ret
	}
	return *o.TotalExpenseOnAirtimeAndData
}

// GetTotalExpenseOnAirtimeAndDataOk returns a tuple with the TotalExpenseOnAirtimeAndData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetTotalExpenseOnAirtimeAndDataOk() (*float32, bool) {
	if o == nil || isNil(o.TotalExpenseOnAirtimeAndData) {
    return nil, false
	}
	return o.TotalExpenseOnAirtimeAndData, true
}

// HasTotalExpenseOnAirtimeAndData returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasTotalExpenseOnAirtimeAndData() bool {
	if o != nil && !isNil(o.TotalExpenseOnAirtimeAndData) {
		return true
	}

	return false
}

// SetTotalExpenseOnAirtimeAndData gets a reference to the given float32 and assigns it to the TotalExpenseOnAirtimeAndData field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetTotalExpenseOnAirtimeAndData(v float32) {
	o.TotalExpenseOnAirtimeAndData = &v
}

// GetTotalExpenseOnInternationalTransactions returns the TotalExpenseOnInternationalTransactions field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetTotalExpenseOnInternationalTransactions() float32 {
	if o == nil || isNil(o.TotalExpenseOnInternationalTransactions) {
		var ret float32
		return ret
	}
	return *o.TotalExpenseOnInternationalTransactions
}

// GetTotalExpenseOnInternationalTransactionsOk returns a tuple with the TotalExpenseOnInternationalTransactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetTotalExpenseOnInternationalTransactionsOk() (*float32, bool) {
	if o == nil || isNil(o.TotalExpenseOnInternationalTransactions) {
    return nil, false
	}
	return o.TotalExpenseOnInternationalTransactions, true
}

// HasTotalExpenseOnInternationalTransactions returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasTotalExpenseOnInternationalTransactions() bool {
	if o != nil && !isNil(o.TotalExpenseOnInternationalTransactions) {
		return true
	}

	return false
}

// SetTotalExpenseOnInternationalTransactions gets a reference to the given float32 and assigns it to the TotalExpenseOnInternationalTransactions field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetTotalExpenseOnInternationalTransactions(v float32) {
	o.TotalExpenseOnInternationalTransactions = &v
}

// GetTotalExpenseOnSavingsAndInvestments returns the TotalExpenseOnSavingsAndInvestments field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetTotalExpenseOnSavingsAndInvestments() float32 {
	if o == nil || isNil(o.TotalExpenseOnSavingsAndInvestments) {
		var ret float32
		return ret
	}
	return *o.TotalExpenseOnSavingsAndInvestments
}

// GetTotalExpenseOnSavingsAndInvestmentsOk returns a tuple with the TotalExpenseOnSavingsAndInvestments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetTotalExpenseOnSavingsAndInvestmentsOk() (*float32, bool) {
	if o == nil || isNil(o.TotalExpenseOnSavingsAndInvestments) {
    return nil, false
	}
	return o.TotalExpenseOnSavingsAndInvestments, true
}

// HasTotalExpenseOnSavingsAndInvestments returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasTotalExpenseOnSavingsAndInvestments() bool {
	if o != nil && !isNil(o.TotalExpenseOnSavingsAndInvestments) {
		return true
	}

	return false
}

// SetTotalExpenseOnSavingsAndInvestments gets a reference to the given float32 and assigns it to the TotalExpenseOnSavingsAndInvestments field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetTotalExpenseOnSavingsAndInvestments(v float32) {
	o.TotalExpenseOnSavingsAndInvestments = &v
}

// GetTotalExpenseOnTransfer returns the TotalExpenseOnTransfer field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetTotalExpenseOnTransfer() float32 {
	if o == nil || isNil(o.TotalExpenseOnTransfer) {
		var ret float32
		return ret
	}
	return *o.TotalExpenseOnTransfer
}

// GetTotalExpenseOnTransferOk returns a tuple with the TotalExpenseOnTransfer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetTotalExpenseOnTransferOk() (*float32, bool) {
	if o == nil || isNil(o.TotalExpenseOnTransfer) {
    return nil, false
	}
	return o.TotalExpenseOnTransfer, true
}

// HasTotalExpenseOnTransfer returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasTotalExpenseOnTransfer() bool {
	if o != nil && !isNil(o.TotalExpenseOnTransfer) {
		return true
	}

	return false
}

// SetTotalExpenseOnTransfer gets a reference to the given float32 and assigns it to the TotalExpenseOnTransfer field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetTotalExpenseOnTransfer(v float32) {
	o.TotalExpenseOnTransfer = &v
}

// GetTotalExpenseOnTransportation returns the TotalExpenseOnTransportation field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetTotalExpenseOnTransportation() float32 {
	if o == nil || isNil(o.TotalExpenseOnTransportation) {
		var ret float32
		return ret
	}
	return *o.TotalExpenseOnTransportation
}

// GetTotalExpenseOnTransportationOk returns a tuple with the TotalExpenseOnTransportation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetTotalExpenseOnTransportationOk() (*float32, bool) {
	if o == nil || isNil(o.TotalExpenseOnTransportation) {
    return nil, false
	}
	return o.TotalExpenseOnTransportation, true
}

// HasTotalExpenseOnTransportation returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasTotalExpenseOnTransportation() bool {
	if o != nil && !isNil(o.TotalExpenseOnTransportation) {
		return true
	}

	return false
}

// SetTotalExpenseOnTransportation gets a reference to the given float32 and assigns it to the TotalExpenseOnTransportation field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetTotalExpenseOnTransportation(v float32) {
	o.TotalExpenseOnTransportation = &v
}

// GetTotalExpenseOnTravel returns the TotalExpenseOnTravel field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetTotalExpenseOnTravel() float32 {
	if o == nil || isNil(o.TotalExpenseOnTravel) {
		var ret float32
		return ret
	}
	return *o.TotalExpenseOnTravel
}

// GetTotalExpenseOnTravelOk returns a tuple with the TotalExpenseOnTravel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetTotalExpenseOnTravelOk() (*float32, bool) {
	if o == nil || isNil(o.TotalExpenseOnTravel) {
    return nil, false
	}
	return o.TotalExpenseOnTravel, true
}

// HasTotalExpenseOnTravel returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasTotalExpenseOnTravel() bool {
	if o != nil && !isNil(o.TotalExpenseOnTravel) {
		return true
	}

	return false
}

// SetTotalExpenseOnTravel gets a reference to the given float32 and assigns it to the TotalExpenseOnTravel field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetTotalExpenseOnTravel(v float32) {
	o.TotalExpenseOnTravel = &v
}

// GetTotalExpenseOnUSSD returns the TotalExpenseOnUSSD field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetTotalExpenseOnUSSD() float32 {
	if o == nil || isNil(o.TotalExpenseOnUSSD) {
		var ret float32
		return ret
	}
	return *o.TotalExpenseOnUSSD
}

// GetTotalExpenseOnUSSDOk returns a tuple with the TotalExpenseOnUSSD field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetTotalExpenseOnUSSDOk() (*float32, bool) {
	if o == nil || isNil(o.TotalExpenseOnUSSD) {
    return nil, false
	}
	return o.TotalExpenseOnUSSD, true
}

// HasTotalExpenseOnUSSD returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasTotalExpenseOnUSSD() bool {
	if o != nil && !isNil(o.TotalExpenseOnUSSD) {
		return true
	}

	return false
}

// SetTotalExpenseOnUSSD gets a reference to the given float32 and assigns it to the TotalExpenseOnUSSD field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetTotalExpenseOnUSSD(v float32) {
	o.TotalExpenseOnUSSD = &v
}

// GetTotalExpenseOnUtilities returns the TotalExpenseOnUtilities field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetTotalExpenseOnUtilities() float32 {
	if o == nil || isNil(o.TotalExpenseOnUtilities) {
		var ret float32
		return ret
	}
	return *o.TotalExpenseOnUtilities
}

// GetTotalExpenseOnUtilitiesOk returns a tuple with the TotalExpenseOnUtilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetTotalExpenseOnUtilitiesOk() (*float32, bool) {
	if o == nil || isNil(o.TotalExpenseOnUtilities) {
    return nil, false
	}
	return o.TotalExpenseOnUtilities, true
}

// HasTotalExpenseOnUtilities returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasTotalExpenseOnUtilities() bool {
	if o != nil && !isNil(o.TotalExpenseOnUtilities) {
		return true
	}

	return false
}

// SetTotalExpenseOnUtilities gets a reference to the given float32 and assigns it to the TotalExpenseOnUtilities field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetTotalExpenseOnUtilities(v float32) {
	o.TotalExpenseOnUtilities = &v
}

// GetTotalExpenseonChargesAndStampDuty returns the TotalExpenseonChargesAndStampDuty field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetTotalExpenseonChargesAndStampDuty() float32 {
	if o == nil || isNil(o.TotalExpenseonChargesAndStampDuty) {
		var ret float32
		return ret
	}
	return *o.TotalExpenseonChargesAndStampDuty
}

// GetTotalExpenseonChargesAndStampDutyOk returns a tuple with the TotalExpenseonChargesAndStampDuty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetTotalExpenseonChargesAndStampDutyOk() (*float32, bool) {
	if o == nil || isNil(o.TotalExpenseonChargesAndStampDuty) {
    return nil, false
	}
	return o.TotalExpenseonChargesAndStampDuty, true
}

// HasTotalExpenseonChargesAndStampDuty returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasTotalExpenseonChargesAndStampDuty() bool {
	if o != nil && !isNil(o.TotalExpenseonChargesAndStampDuty) {
		return true
	}

	return false
}

// SetTotalExpenseonChargesAndStampDuty gets a reference to the given float32 and assigns it to the TotalExpenseonChargesAndStampDuty field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetTotalExpenseonChargesAndStampDuty(v float32) {
	o.TotalExpenseonChargesAndStampDuty = &v
}

// GetTotalExpenseonEntertainment returns the TotalExpenseonEntertainment field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetTotalExpenseonEntertainment() float32 {
	if o == nil || isNil(o.TotalExpenseonEntertainment) {
		var ret float32
		return ret
	}
	return *o.TotalExpenseonEntertainment
}

// GetTotalExpenseonEntertainmentOk returns a tuple with the TotalExpenseonEntertainment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetTotalExpenseonEntertainmentOk() (*float32, bool) {
	if o == nil || isNil(o.TotalExpenseonEntertainment) {
    return nil, false
	}
	return o.TotalExpenseonEntertainment, true
}

// HasTotalExpenseonEntertainment returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasTotalExpenseonEntertainment() bool {
	if o != nil && !isNil(o.TotalExpenseonEntertainment) {
		return true
	}

	return false
}

// SetTotalExpenseonEntertainment gets a reference to the given float32 and assigns it to the TotalExpenseonEntertainment field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetTotalExpenseonEntertainment(v float32) {
	o.TotalExpenseonEntertainment = &v
}

// GetTotalExpenseonGambling returns the TotalExpenseonGambling field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetTotalExpenseonGambling() float32 {
	if o == nil || isNil(o.TotalExpenseonGambling) {
		var ret float32
		return ret
	}
	return *o.TotalExpenseonGambling
}

// GetTotalExpenseonGamblingOk returns a tuple with the TotalExpenseonGambling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetTotalExpenseonGamblingOk() (*float32, bool) {
	if o == nil || isNil(o.TotalExpenseonGambling) {
    return nil, false
	}
	return o.TotalExpenseonGambling, true
}

// HasTotalExpenseonGambling returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasTotalExpenseonGambling() bool {
	if o != nil && !isNil(o.TotalExpenseonGambling) {
		return true
	}

	return false
}

// SetTotalExpenseonGambling gets a reference to the given float32 and assigns it to the TotalExpenseonGambling field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetTotalExpenseonGambling(v float32) {
	o.TotalExpenseonGambling = &v
}

// GetTotalExpenseonHealth returns the TotalExpenseonHealth field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetTotalExpenseonHealth() float32 {
	if o == nil || isNil(o.TotalExpenseonHealth) {
		var ret float32
		return ret
	}
	return *o.TotalExpenseonHealth
}

// GetTotalExpenseonHealthOk returns a tuple with the TotalExpenseonHealth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetTotalExpenseonHealthOk() (*float32, bool) {
	if o == nil || isNil(o.TotalExpenseonHealth) {
    return nil, false
	}
	return o.TotalExpenseonHealth, true
}

// HasTotalExpenseonHealth returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasTotalExpenseonHealth() bool {
	if o != nil && !isNil(o.TotalExpenseonHealth) {
		return true
	}

	return false
}

// SetTotalExpenseonHealth gets a reference to the given float32 and assigns it to the TotalExpenseonHealth field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetTotalExpenseonHealth(v float32) {
	o.TotalExpenseonHealth = &v
}

// GetTotalExpenseonHospitalityandFood returns the TotalExpenseonHospitalityandFood field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetTotalExpenseonHospitalityandFood() float32 {
	if o == nil || isNil(o.TotalExpenseonHospitalityandFood) {
		var ret float32
		return ret
	}
	return *o.TotalExpenseonHospitalityandFood
}

// GetTotalExpenseonHospitalityandFoodOk returns a tuple with the TotalExpenseonHospitalityandFood field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetTotalExpenseonHospitalityandFoodOk() (*float32, bool) {
	if o == nil || isNil(o.TotalExpenseonHospitalityandFood) {
    return nil, false
	}
	return o.TotalExpenseonHospitalityandFood, true
}

// HasTotalExpenseonHospitalityandFood returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasTotalExpenseonHospitalityandFood() bool {
	if o != nil && !isNil(o.TotalExpenseonHospitalityandFood) {
		return true
	}

	return false
}

// SetTotalExpenseonHospitalityandFood gets a reference to the given float32 and assigns it to the TotalExpenseonHospitalityandFood field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetTotalExpenseonHospitalityandFood(v float32) {
	o.TotalExpenseonHospitalityandFood = &v
}

// GetTotalExpenseonInsurance returns the TotalExpenseonInsurance field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetTotalExpenseonInsurance() float32 {
	if o == nil || isNil(o.TotalExpenseonInsurance) {
		var ret float32
		return ret
	}
	return *o.TotalExpenseonInsurance
}

// GetTotalExpenseonInsuranceOk returns a tuple with the TotalExpenseonInsurance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetTotalExpenseonInsuranceOk() (*float32, bool) {
	if o == nil || isNil(o.TotalExpenseonInsurance) {
    return nil, false
	}
	return o.TotalExpenseonInsurance, true
}

// HasTotalExpenseonInsurance returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasTotalExpenseonInsurance() bool {
	if o != nil && !isNil(o.TotalExpenseonInsurance) {
		return true
	}

	return false
}

// SetTotalExpenseonInsurance gets a reference to the given float32 and assigns it to the TotalExpenseonInsurance field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetTotalExpenseonInsurance(v float32) {
	o.TotalExpenseonInsurance = &v
}

// GetTotalExpenseonOnlineandWeb returns the TotalExpenseonOnlineandWeb field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetTotalExpenseonOnlineandWeb() float32 {
	if o == nil || isNil(o.TotalExpenseonOnlineandWeb) {
		var ret float32
		return ret
	}
	return *o.TotalExpenseonOnlineandWeb
}

// GetTotalExpenseonOnlineandWebOk returns a tuple with the TotalExpenseonOnlineandWeb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetTotalExpenseonOnlineandWebOk() (*float32, bool) {
	if o == nil || isNil(o.TotalExpenseonOnlineandWeb) {
    return nil, false
	}
	return o.TotalExpenseonOnlineandWeb, true
}

// HasTotalExpenseonOnlineandWeb returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasTotalExpenseonOnlineandWeb() bool {
	if o != nil && !isNil(o.TotalExpenseonOnlineandWeb) {
		return true
	}

	return false
}

// SetTotalExpenseonOnlineandWeb gets a reference to the given float32 and assigns it to the TotalExpenseonOnlineandWeb field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetTotalExpenseonOnlineandWeb(v float32) {
	o.TotalExpenseonOnlineandWeb = &v
}

// GetTotalMonthlyExpenses returns the TotalMonthlyExpenses field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetTotalMonthlyExpenses() float32 {
	if o == nil || isNil(o.TotalMonthlyExpenses) {
		var ret float32
		return ret
	}
	return *o.TotalMonthlyExpenses
}

// GetTotalMonthlyExpensesOk returns a tuple with the TotalMonthlyExpenses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetTotalMonthlyExpensesOk() (*float32, bool) {
	if o == nil || isNil(o.TotalMonthlyExpenses) {
    return nil, false
	}
	return o.TotalMonthlyExpenses, true
}

// HasTotalMonthlyExpenses returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasTotalMonthlyExpenses() bool {
	if o != nil && !isNil(o.TotalMonthlyExpenses) {
		return true
	}

	return false
}

// SetTotalMonthlyExpenses gets a reference to the given float32 and assigns it to the TotalMonthlyExpenses field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetTotalMonthlyExpenses(v float32) {
	o.TotalMonthlyExpenses = &v
}

// GetTotalRecurringExpenses returns the TotalRecurringExpenses field value if set, zero value otherwise.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetTotalRecurringExpenses() float32 {
	if o == nil || isNil(o.TotalRecurringExpenses) {
		var ret float32
		return ret
	}
	return *o.TotalRecurringExpenses
}

// GetTotalRecurringExpensesOk returns a tuple with the TotalRecurringExpenses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) GetTotalRecurringExpensesOk() (*float32, bool) {
	if o == nil || isNil(o.TotalRecurringExpenses) {
    return nil, false
	}
	return o.TotalRecurringExpenses, true
}

// HasTotalRecurringExpenses returns a boolean if a field has been set.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) HasTotalRecurringExpenses() bool {
	if o != nil && !isNil(o.TotalRecurringExpenses) {
		return true
	}

	return false
}

// SetTotalRecurringExpenses gets a reference to the given float32 and assigns it to the TotalRecurringExpenses field.
func (o *GetAccountAnalysisResponseEntityExpenseBreakdown) SetTotalRecurringExpenses(v float32) {
	o.TotalRecurringExpenses = &v
}

func (o GetAccountAnalysisResponseEntityExpenseBreakdown) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.MaximumExpense) {
		toSerialize["MaximumExpense"] = o.MaximumExpense
	}
	if !isNil(o.AtmLocations) {
		toSerialize["atmLocations"] = o.AtmLocations
	}
	if !isNil(o.AverageMonthlyExpenseOnAirtimeandData) {
		toSerialize["averageMonthlyExpenseOnAirtimeandData"] = o.AverageMonthlyExpenseOnAirtimeandData
	}
	if !isNil(o.AverageMonthlyExpenseOnAtmAndPOS) {
		toSerialize["averageMonthlyExpenseOnAtmAndPOS"] = o.AverageMonthlyExpenseOnAtmAndPOS
	}
	if !isNil(o.AverageMonthlyExpenseOnChargesAndStampDuty) {
		toSerialize["averageMonthlyExpenseOnChargesAndStampDuty"] = o.AverageMonthlyExpenseOnChargesAndStampDuty
	}
	if !isNil(o.AverageMonthlyExpenseOnEntertainment) {
		toSerialize["averageMonthlyExpenseOnEntertainment"] = o.AverageMonthlyExpenseOnEntertainment
	}
	if !isNil(o.AverageMonthlyExpenseOnGambling) {
		toSerialize["averageMonthlyExpenseOnGambling"] = o.AverageMonthlyExpenseOnGambling
	}
	if !isNil(o.AverageMonthlyExpenseOnHealth) {
		toSerialize["averageMonthlyExpenseOnHealth"] = o.AverageMonthlyExpenseOnHealth
	}
	if !isNil(o.AverageMonthlyExpenseOnHospitalityandFood) {
		toSerialize["averageMonthlyExpenseOnHospitalityandFood"] = o.AverageMonthlyExpenseOnHospitalityandFood
	}
	if !isNil(o.AverageMonthlyExpenseOnInsurance) {
		toSerialize["averageMonthlyExpenseOnInsurance"] = o.AverageMonthlyExpenseOnInsurance
	}
	if !isNil(o.AverageMonthlyExpenseOnInternationalTransactions) {
		toSerialize["averageMonthlyExpenseOnInternationalTransactions"] = o.AverageMonthlyExpenseOnInternationalTransactions
	}
	if !isNil(o.AverageMonthlyExpenseOnOnlineandWeb) {
		toSerialize["averageMonthlyExpenseOnOnlineandWeb"] = o.AverageMonthlyExpenseOnOnlineandWeb
	}
	if !isNil(o.AverageMonthlyExpenseOnRent) {
		toSerialize["averageMonthlyExpenseOnRent"] = o.AverageMonthlyExpenseOnRent
	}
	if !isNil(o.AverageMonthlyExpenseOnSavingsAndInvestments) {
		toSerialize["averageMonthlyExpenseOnSavingsAndInvestments"] = o.AverageMonthlyExpenseOnSavingsAndInvestments
	}
	if !isNil(o.AverageMonthlyExpenseOnTransfer) {
		toSerialize["averageMonthlyExpenseOnTransfer"] = o.AverageMonthlyExpenseOnTransfer
	}
	if !isNil(o.AverageMonthlyExpenseOnTransportation) {
		toSerialize["averageMonthlyExpenseOnTransportation"] = o.AverageMonthlyExpenseOnTransportation
	}
	if !isNil(o.AverageMonthlyExpenseOnUSSD) {
		toSerialize["averageMonthlyExpenseOnUSSD"] = o.AverageMonthlyExpenseOnUSSD
	}
	if !isNil(o.AverageMonthlyExpenseOnUtilities) {
		toSerialize["averageMonthlyExpenseOnUtilities"] = o.AverageMonthlyExpenseOnUtilities
	}
	if !isNil(o.AverageMonthlyExpenseonTravel) {
		toSerialize["averageMonthlyExpenseonTravel"] = o.AverageMonthlyExpenseonTravel
	}
	if !isNil(o.AverageMonthlyRecurringExpenses) {
		toSerialize["averageMonthlyRecurringExpenses"] = o.AverageMonthlyRecurringExpenses
	}
	if !isNil(o.AverageMonthlyTotalExpenses) {
		toSerialize["averageMonthlyTotalExpenses"] = o.AverageMonthlyTotalExpenses
	}
	if !isNil(o.MinimumSalary) {
		toSerialize["minimumSalary"] = o.MinimumSalary
	}
	if !isNil(o.MonthWithmaximumExpense) {
		toSerialize["monthWithmaximumExpense"] = o.MonthWithmaximumExpense
	}
	if !isNil(o.MostFrequentExpense) {
		toSerialize["mostFrequentExpense"] = o.MostFrequentExpense
	}
	if !isNil(o.MostFrequentExpenseCategory) {
		toSerialize["mostFrequentExpenseCategory"] = o.MostFrequentExpenseCategory
	}
	if !isNil(o.TotalExpenseOnAirtimeAndData) {
		toSerialize["totalExpenseOnAirtimeAndData"] = o.TotalExpenseOnAirtimeAndData
	}
	if !isNil(o.TotalExpenseOnInternationalTransactions) {
		toSerialize["totalExpenseOnInternationalTransactions"] = o.TotalExpenseOnInternationalTransactions
	}
	if !isNil(o.TotalExpenseOnSavingsAndInvestments) {
		toSerialize["totalExpenseOnSavingsAndInvestments"] = o.TotalExpenseOnSavingsAndInvestments
	}
	if !isNil(o.TotalExpenseOnTransfer) {
		toSerialize["totalExpenseOnTransfer"] = o.TotalExpenseOnTransfer
	}
	if !isNil(o.TotalExpenseOnTransportation) {
		toSerialize["totalExpenseOnTransportation"] = o.TotalExpenseOnTransportation
	}
	if !isNil(o.TotalExpenseOnTravel) {
		toSerialize["totalExpenseOnTravel"] = o.TotalExpenseOnTravel
	}
	if !isNil(o.TotalExpenseOnUSSD) {
		toSerialize["totalExpenseOnUSSD"] = o.TotalExpenseOnUSSD
	}
	if !isNil(o.TotalExpenseOnUtilities) {
		toSerialize["totalExpenseOnUtilities"] = o.TotalExpenseOnUtilities
	}
	if !isNil(o.TotalExpenseonChargesAndStampDuty) {
		toSerialize["totalExpenseonChargesAndStampDuty"] = o.TotalExpenseonChargesAndStampDuty
	}
	if !isNil(o.TotalExpenseonEntertainment) {
		toSerialize["totalExpenseonEntertainment"] = o.TotalExpenseonEntertainment
	}
	if !isNil(o.TotalExpenseonGambling) {
		toSerialize["totalExpenseonGambling"] = o.TotalExpenseonGambling
	}
	if !isNil(o.TotalExpenseonHealth) {
		toSerialize["totalExpenseonHealth"] = o.TotalExpenseonHealth
	}
	if !isNil(o.TotalExpenseonHospitalityandFood) {
		toSerialize["totalExpenseonHospitalityandFood"] = o.TotalExpenseonHospitalityandFood
	}
	if !isNil(o.TotalExpenseonInsurance) {
		toSerialize["totalExpenseonInsurance"] = o.TotalExpenseonInsurance
	}
	if !isNil(o.TotalExpenseonOnlineandWeb) {
		toSerialize["totalExpenseonOnlineandWeb"] = o.TotalExpenseonOnlineandWeb
	}
	if !isNil(o.TotalMonthlyExpenses) {
		toSerialize["totalMonthlyExpenses"] = o.TotalMonthlyExpenses
	}
	if !isNil(o.TotalRecurringExpenses) {
		toSerialize["totalRecurringExpenses"] = o.TotalRecurringExpenses
	}
	return json.Marshal(toSerialize)
}

type NullableGetAccountAnalysisResponseEntityExpenseBreakdown struct {
	value *GetAccountAnalysisResponseEntityExpenseBreakdown
	isSet bool
}

func (v NullableGetAccountAnalysisResponseEntityExpenseBreakdown) Get() *GetAccountAnalysisResponseEntityExpenseBreakdown {
	return v.value
}

func (v *NullableGetAccountAnalysisResponseEntityExpenseBreakdown) Set(val *GetAccountAnalysisResponseEntityExpenseBreakdown) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAccountAnalysisResponseEntityExpenseBreakdown) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAccountAnalysisResponseEntityExpenseBreakdown) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAccountAnalysisResponseEntityExpenseBreakdown(val *GetAccountAnalysisResponseEntityExpenseBreakdown) *NullableGetAccountAnalysisResponseEntityExpenseBreakdown {
	return &NullableGetAccountAnalysisResponseEntityExpenseBreakdown{value: val, isSet: true}
}

func (v NullableGetAccountAnalysisResponseEntityExpenseBreakdown) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAccountAnalysisResponseEntityExpenseBreakdown) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


