/*
DOJAH APIs

Use Dojah to verify, onboard and manage user identity across Africa!

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package dojah

import (
	"encoding/json"
)

// GetScreeningInfoResponseEntityResult struct for GetScreeningInfoResponseEntityResult
type GetScreeningInfoResponseEntityResult struct {
	Addresses []string `json:"addresses,omitempty"`
	Aka *string `json:"aka,omitempty"`
	Aliases []string `json:"aliases,omitempty"`
	CountryName *string `json:"countryName,omitempty"`
	Dob *string `json:"dob,omitempty"`
	Dob2 *string `json:"dob2,omitempty"`
	EffectiveDate *string `json:"effectiveDate,omitempty"`
	EntryCategory *string `json:"entryCategory,omitempty"`
	EntryDesc *string `json:"entryDesc,omitempty"`
	FirstName *string `json:"firstName,omitempty"`
	GovDesignation *string `json:"govDesignation,omitempty"`
	LastName *string `json:"lastName,omitempty"`
	LevelDesc *string `json:"levelDesc,omitempty"`
	MasterId *float32 `json:"masterId,omitempty"`
	Name *string `json:"name,omitempty"`
	NationalId *string `json:"nationalId,omitempty"`
	OtherId *string `json:"otherId,omitempty"`
	PassportId *string `json:"passportId,omitempty"`
	Pob *string `json:"pob,omitempty"`
	Positions *string `json:"positions,omitempty"`
	Prefix *string `json:"prefix,omitempty"`
	PrimaryName *string `json:"primaryName,omitempty"`
	RelatedId *float32 `json:"relatedId,omitempty"`
	Relationships []string `json:"relationships,omitempty"`
	Remarks *string `json:"remarks,omitempty"`
	SourceName *string `json:"sourceName,omitempty"`
	SourceWebLinks *string `json:"sourceWebLinks,omitempty"`
	SubCatDesc *string `json:"subCatDesc,omitempty"`
	Suffix *string `json:"suffix,omitempty"`
	TouchDate *string `json:"touchDate,omitempty"`
	Watch *bool `json:"watch,omitempty"`
}

// NewGetScreeningInfoResponseEntityResult instantiates a new GetScreeningInfoResponseEntityResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetScreeningInfoResponseEntityResult() *GetScreeningInfoResponseEntityResult {
	this := GetScreeningInfoResponseEntityResult{}
	return &this
}

// NewGetScreeningInfoResponseEntityResultWithDefaults instantiates a new GetScreeningInfoResponseEntityResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetScreeningInfoResponseEntityResultWithDefaults() *GetScreeningInfoResponseEntityResult {
	this := GetScreeningInfoResponseEntityResult{}
	return &this
}

// GetAddresses returns the Addresses field value if set, zero value otherwise.
func (o *GetScreeningInfoResponseEntityResult) GetAddresses() []string {
	if o == nil || isNil(o.Addresses) {
		var ret []string
		return ret
	}
	return o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetScreeningInfoResponseEntityResult) GetAddressesOk() ([]string, bool) {
	if o == nil || isNil(o.Addresses) {
    return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *GetScreeningInfoResponseEntityResult) HasAddresses() bool {
	if o != nil && !isNil(o.Addresses) {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given []string and assigns it to the Addresses field.
func (o *GetScreeningInfoResponseEntityResult) SetAddresses(v []string) {
	o.Addresses = v
}

// GetAka returns the Aka field value if set, zero value otherwise.
func (o *GetScreeningInfoResponseEntityResult) GetAka() string {
	if o == nil || isNil(o.Aka) {
		var ret string
		return ret
	}
	return *o.Aka
}

// GetAkaOk returns a tuple with the Aka field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetScreeningInfoResponseEntityResult) GetAkaOk() (*string, bool) {
	if o == nil || isNil(o.Aka) {
    return nil, false
	}
	return o.Aka, true
}

// HasAka returns a boolean if a field has been set.
func (o *GetScreeningInfoResponseEntityResult) HasAka() bool {
	if o != nil && !isNil(o.Aka) {
		return true
	}

	return false
}

// SetAka gets a reference to the given string and assigns it to the Aka field.
func (o *GetScreeningInfoResponseEntityResult) SetAka(v string) {
	o.Aka = &v
}

// GetAliases returns the Aliases field value if set, zero value otherwise.
func (o *GetScreeningInfoResponseEntityResult) GetAliases() []string {
	if o == nil || isNil(o.Aliases) {
		var ret []string
		return ret
	}
	return o.Aliases
}

// GetAliasesOk returns a tuple with the Aliases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetScreeningInfoResponseEntityResult) GetAliasesOk() ([]string, bool) {
	if o == nil || isNil(o.Aliases) {
    return nil, false
	}
	return o.Aliases, true
}

// HasAliases returns a boolean if a field has been set.
func (o *GetScreeningInfoResponseEntityResult) HasAliases() bool {
	if o != nil && !isNil(o.Aliases) {
		return true
	}

	return false
}

// SetAliases gets a reference to the given []string and assigns it to the Aliases field.
func (o *GetScreeningInfoResponseEntityResult) SetAliases(v []string) {
	o.Aliases = v
}

// GetCountryName returns the CountryName field value if set, zero value otherwise.
func (o *GetScreeningInfoResponseEntityResult) GetCountryName() string {
	if o == nil || isNil(o.CountryName) {
		var ret string
		return ret
	}
	return *o.CountryName
}

// GetCountryNameOk returns a tuple with the CountryName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetScreeningInfoResponseEntityResult) GetCountryNameOk() (*string, bool) {
	if o == nil || isNil(o.CountryName) {
    return nil, false
	}
	return o.CountryName, true
}

// HasCountryName returns a boolean if a field has been set.
func (o *GetScreeningInfoResponseEntityResult) HasCountryName() bool {
	if o != nil && !isNil(o.CountryName) {
		return true
	}

	return false
}

// SetCountryName gets a reference to the given string and assigns it to the CountryName field.
func (o *GetScreeningInfoResponseEntityResult) SetCountryName(v string) {
	o.CountryName = &v
}

// GetDob returns the Dob field value if set, zero value otherwise.
func (o *GetScreeningInfoResponseEntityResult) GetDob() string {
	if o == nil || isNil(o.Dob) {
		var ret string
		return ret
	}
	return *o.Dob
}

// GetDobOk returns a tuple with the Dob field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetScreeningInfoResponseEntityResult) GetDobOk() (*string, bool) {
	if o == nil || isNil(o.Dob) {
    return nil, false
	}
	return o.Dob, true
}

// HasDob returns a boolean if a field has been set.
func (o *GetScreeningInfoResponseEntityResult) HasDob() bool {
	if o != nil && !isNil(o.Dob) {
		return true
	}

	return false
}

// SetDob gets a reference to the given string and assigns it to the Dob field.
func (o *GetScreeningInfoResponseEntityResult) SetDob(v string) {
	o.Dob = &v
}

// GetDob2 returns the Dob2 field value if set, zero value otherwise.
func (o *GetScreeningInfoResponseEntityResult) GetDob2() string {
	if o == nil || isNil(o.Dob2) {
		var ret string
		return ret
	}
	return *o.Dob2
}

// GetDob2Ok returns a tuple with the Dob2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetScreeningInfoResponseEntityResult) GetDob2Ok() (*string, bool) {
	if o == nil || isNil(o.Dob2) {
    return nil, false
	}
	return o.Dob2, true
}

// HasDob2 returns a boolean if a field has been set.
func (o *GetScreeningInfoResponseEntityResult) HasDob2() bool {
	if o != nil && !isNil(o.Dob2) {
		return true
	}

	return false
}

// SetDob2 gets a reference to the given string and assigns it to the Dob2 field.
func (o *GetScreeningInfoResponseEntityResult) SetDob2(v string) {
	o.Dob2 = &v
}

// GetEffectiveDate returns the EffectiveDate field value if set, zero value otherwise.
func (o *GetScreeningInfoResponseEntityResult) GetEffectiveDate() string {
	if o == nil || isNil(o.EffectiveDate) {
		var ret string
		return ret
	}
	return *o.EffectiveDate
}

// GetEffectiveDateOk returns a tuple with the EffectiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetScreeningInfoResponseEntityResult) GetEffectiveDateOk() (*string, bool) {
	if o == nil || isNil(o.EffectiveDate) {
    return nil, false
	}
	return o.EffectiveDate, true
}

// HasEffectiveDate returns a boolean if a field has been set.
func (o *GetScreeningInfoResponseEntityResult) HasEffectiveDate() bool {
	if o != nil && !isNil(o.EffectiveDate) {
		return true
	}

	return false
}

// SetEffectiveDate gets a reference to the given string and assigns it to the EffectiveDate field.
func (o *GetScreeningInfoResponseEntityResult) SetEffectiveDate(v string) {
	o.EffectiveDate = &v
}

// GetEntryCategory returns the EntryCategory field value if set, zero value otherwise.
func (o *GetScreeningInfoResponseEntityResult) GetEntryCategory() string {
	if o == nil || isNil(o.EntryCategory) {
		var ret string
		return ret
	}
	return *o.EntryCategory
}

// GetEntryCategoryOk returns a tuple with the EntryCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetScreeningInfoResponseEntityResult) GetEntryCategoryOk() (*string, bool) {
	if o == nil || isNil(o.EntryCategory) {
    return nil, false
	}
	return o.EntryCategory, true
}

// HasEntryCategory returns a boolean if a field has been set.
func (o *GetScreeningInfoResponseEntityResult) HasEntryCategory() bool {
	if o != nil && !isNil(o.EntryCategory) {
		return true
	}

	return false
}

// SetEntryCategory gets a reference to the given string and assigns it to the EntryCategory field.
func (o *GetScreeningInfoResponseEntityResult) SetEntryCategory(v string) {
	o.EntryCategory = &v
}

// GetEntryDesc returns the EntryDesc field value if set, zero value otherwise.
func (o *GetScreeningInfoResponseEntityResult) GetEntryDesc() string {
	if o == nil || isNil(o.EntryDesc) {
		var ret string
		return ret
	}
	return *o.EntryDesc
}

// GetEntryDescOk returns a tuple with the EntryDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetScreeningInfoResponseEntityResult) GetEntryDescOk() (*string, bool) {
	if o == nil || isNil(o.EntryDesc) {
    return nil, false
	}
	return o.EntryDesc, true
}

// HasEntryDesc returns a boolean if a field has been set.
func (o *GetScreeningInfoResponseEntityResult) HasEntryDesc() bool {
	if o != nil && !isNil(o.EntryDesc) {
		return true
	}

	return false
}

// SetEntryDesc gets a reference to the given string and assigns it to the EntryDesc field.
func (o *GetScreeningInfoResponseEntityResult) SetEntryDesc(v string) {
	o.EntryDesc = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *GetScreeningInfoResponseEntityResult) GetFirstName() string {
	if o == nil || isNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetScreeningInfoResponseEntityResult) GetFirstNameOk() (*string, bool) {
	if o == nil || isNil(o.FirstName) {
    return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *GetScreeningInfoResponseEntityResult) HasFirstName() bool {
	if o != nil && !isNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *GetScreeningInfoResponseEntityResult) SetFirstName(v string) {
	o.FirstName = &v
}

// GetGovDesignation returns the GovDesignation field value if set, zero value otherwise.
func (o *GetScreeningInfoResponseEntityResult) GetGovDesignation() string {
	if o == nil || isNil(o.GovDesignation) {
		var ret string
		return ret
	}
	return *o.GovDesignation
}

// GetGovDesignationOk returns a tuple with the GovDesignation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetScreeningInfoResponseEntityResult) GetGovDesignationOk() (*string, bool) {
	if o == nil || isNil(o.GovDesignation) {
    return nil, false
	}
	return o.GovDesignation, true
}

// HasGovDesignation returns a boolean if a field has been set.
func (o *GetScreeningInfoResponseEntityResult) HasGovDesignation() bool {
	if o != nil && !isNil(o.GovDesignation) {
		return true
	}

	return false
}

// SetGovDesignation gets a reference to the given string and assigns it to the GovDesignation field.
func (o *GetScreeningInfoResponseEntityResult) SetGovDesignation(v string) {
	o.GovDesignation = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *GetScreeningInfoResponseEntityResult) GetLastName() string {
	if o == nil || isNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetScreeningInfoResponseEntityResult) GetLastNameOk() (*string, bool) {
	if o == nil || isNil(o.LastName) {
    return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *GetScreeningInfoResponseEntityResult) HasLastName() bool {
	if o != nil && !isNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *GetScreeningInfoResponseEntityResult) SetLastName(v string) {
	o.LastName = &v
}

// GetLevelDesc returns the LevelDesc field value if set, zero value otherwise.
func (o *GetScreeningInfoResponseEntityResult) GetLevelDesc() string {
	if o == nil || isNil(o.LevelDesc) {
		var ret string
		return ret
	}
	return *o.LevelDesc
}

// GetLevelDescOk returns a tuple with the LevelDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetScreeningInfoResponseEntityResult) GetLevelDescOk() (*string, bool) {
	if o == nil || isNil(o.LevelDesc) {
    return nil, false
	}
	return o.LevelDesc, true
}

// HasLevelDesc returns a boolean if a field has been set.
func (o *GetScreeningInfoResponseEntityResult) HasLevelDesc() bool {
	if o != nil && !isNil(o.LevelDesc) {
		return true
	}

	return false
}

// SetLevelDesc gets a reference to the given string and assigns it to the LevelDesc field.
func (o *GetScreeningInfoResponseEntityResult) SetLevelDesc(v string) {
	o.LevelDesc = &v
}

// GetMasterId returns the MasterId field value if set, zero value otherwise.
func (o *GetScreeningInfoResponseEntityResult) GetMasterId() float32 {
	if o == nil || isNil(o.MasterId) {
		var ret float32
		return ret
	}
	return *o.MasterId
}

// GetMasterIdOk returns a tuple with the MasterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetScreeningInfoResponseEntityResult) GetMasterIdOk() (*float32, bool) {
	if o == nil || isNil(o.MasterId) {
    return nil, false
	}
	return o.MasterId, true
}

// HasMasterId returns a boolean if a field has been set.
func (o *GetScreeningInfoResponseEntityResult) HasMasterId() bool {
	if o != nil && !isNil(o.MasterId) {
		return true
	}

	return false
}

// SetMasterId gets a reference to the given float32 and assigns it to the MasterId field.
func (o *GetScreeningInfoResponseEntityResult) SetMasterId(v float32) {
	o.MasterId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetScreeningInfoResponseEntityResult) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetScreeningInfoResponseEntityResult) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetScreeningInfoResponseEntityResult) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetScreeningInfoResponseEntityResult) SetName(v string) {
	o.Name = &v
}

// GetNationalId returns the NationalId field value if set, zero value otherwise.
func (o *GetScreeningInfoResponseEntityResult) GetNationalId() string {
	if o == nil || isNil(o.NationalId) {
		var ret string
		return ret
	}
	return *o.NationalId
}

// GetNationalIdOk returns a tuple with the NationalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetScreeningInfoResponseEntityResult) GetNationalIdOk() (*string, bool) {
	if o == nil || isNil(o.NationalId) {
    return nil, false
	}
	return o.NationalId, true
}

// HasNationalId returns a boolean if a field has been set.
func (o *GetScreeningInfoResponseEntityResult) HasNationalId() bool {
	if o != nil && !isNil(o.NationalId) {
		return true
	}

	return false
}

// SetNationalId gets a reference to the given string and assigns it to the NationalId field.
func (o *GetScreeningInfoResponseEntityResult) SetNationalId(v string) {
	o.NationalId = &v
}

// GetOtherId returns the OtherId field value if set, zero value otherwise.
func (o *GetScreeningInfoResponseEntityResult) GetOtherId() string {
	if o == nil || isNil(o.OtherId) {
		var ret string
		return ret
	}
	return *o.OtherId
}

// GetOtherIdOk returns a tuple with the OtherId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetScreeningInfoResponseEntityResult) GetOtherIdOk() (*string, bool) {
	if o == nil || isNil(o.OtherId) {
    return nil, false
	}
	return o.OtherId, true
}

// HasOtherId returns a boolean if a field has been set.
func (o *GetScreeningInfoResponseEntityResult) HasOtherId() bool {
	if o != nil && !isNil(o.OtherId) {
		return true
	}

	return false
}

// SetOtherId gets a reference to the given string and assigns it to the OtherId field.
func (o *GetScreeningInfoResponseEntityResult) SetOtherId(v string) {
	o.OtherId = &v
}

// GetPassportId returns the PassportId field value if set, zero value otherwise.
func (o *GetScreeningInfoResponseEntityResult) GetPassportId() string {
	if o == nil || isNil(o.PassportId) {
		var ret string
		return ret
	}
	return *o.PassportId
}

// GetPassportIdOk returns a tuple with the PassportId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetScreeningInfoResponseEntityResult) GetPassportIdOk() (*string, bool) {
	if o == nil || isNil(o.PassportId) {
    return nil, false
	}
	return o.PassportId, true
}

// HasPassportId returns a boolean if a field has been set.
func (o *GetScreeningInfoResponseEntityResult) HasPassportId() bool {
	if o != nil && !isNil(o.PassportId) {
		return true
	}

	return false
}

// SetPassportId gets a reference to the given string and assigns it to the PassportId field.
func (o *GetScreeningInfoResponseEntityResult) SetPassportId(v string) {
	o.PassportId = &v
}

// GetPob returns the Pob field value if set, zero value otherwise.
func (o *GetScreeningInfoResponseEntityResult) GetPob() string {
	if o == nil || isNil(o.Pob) {
		var ret string
		return ret
	}
	return *o.Pob
}

// GetPobOk returns a tuple with the Pob field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetScreeningInfoResponseEntityResult) GetPobOk() (*string, bool) {
	if o == nil || isNil(o.Pob) {
    return nil, false
	}
	return o.Pob, true
}

// HasPob returns a boolean if a field has been set.
func (o *GetScreeningInfoResponseEntityResult) HasPob() bool {
	if o != nil && !isNil(o.Pob) {
		return true
	}

	return false
}

// SetPob gets a reference to the given string and assigns it to the Pob field.
func (o *GetScreeningInfoResponseEntityResult) SetPob(v string) {
	o.Pob = &v
}

// GetPositions returns the Positions field value if set, zero value otherwise.
func (o *GetScreeningInfoResponseEntityResult) GetPositions() string {
	if o == nil || isNil(o.Positions) {
		var ret string
		return ret
	}
	return *o.Positions
}

// GetPositionsOk returns a tuple with the Positions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetScreeningInfoResponseEntityResult) GetPositionsOk() (*string, bool) {
	if o == nil || isNil(o.Positions) {
    return nil, false
	}
	return o.Positions, true
}

// HasPositions returns a boolean if a field has been set.
func (o *GetScreeningInfoResponseEntityResult) HasPositions() bool {
	if o != nil && !isNil(o.Positions) {
		return true
	}

	return false
}

// SetPositions gets a reference to the given string and assigns it to the Positions field.
func (o *GetScreeningInfoResponseEntityResult) SetPositions(v string) {
	o.Positions = &v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *GetScreeningInfoResponseEntityResult) GetPrefix() string {
	if o == nil || isNil(o.Prefix) {
		var ret string
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetScreeningInfoResponseEntityResult) GetPrefixOk() (*string, bool) {
	if o == nil || isNil(o.Prefix) {
    return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *GetScreeningInfoResponseEntityResult) HasPrefix() bool {
	if o != nil && !isNil(o.Prefix) {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given string and assigns it to the Prefix field.
func (o *GetScreeningInfoResponseEntityResult) SetPrefix(v string) {
	o.Prefix = &v
}

// GetPrimaryName returns the PrimaryName field value if set, zero value otherwise.
func (o *GetScreeningInfoResponseEntityResult) GetPrimaryName() string {
	if o == nil || isNil(o.PrimaryName) {
		var ret string
		return ret
	}
	return *o.PrimaryName
}

// GetPrimaryNameOk returns a tuple with the PrimaryName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetScreeningInfoResponseEntityResult) GetPrimaryNameOk() (*string, bool) {
	if o == nil || isNil(o.PrimaryName) {
    return nil, false
	}
	return o.PrimaryName, true
}

// HasPrimaryName returns a boolean if a field has been set.
func (o *GetScreeningInfoResponseEntityResult) HasPrimaryName() bool {
	if o != nil && !isNil(o.PrimaryName) {
		return true
	}

	return false
}

// SetPrimaryName gets a reference to the given string and assigns it to the PrimaryName field.
func (o *GetScreeningInfoResponseEntityResult) SetPrimaryName(v string) {
	o.PrimaryName = &v
}

// GetRelatedId returns the RelatedId field value if set, zero value otherwise.
func (o *GetScreeningInfoResponseEntityResult) GetRelatedId() float32 {
	if o == nil || isNil(o.RelatedId) {
		var ret float32
		return ret
	}
	return *o.RelatedId
}

// GetRelatedIdOk returns a tuple with the RelatedId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetScreeningInfoResponseEntityResult) GetRelatedIdOk() (*float32, bool) {
	if o == nil || isNil(o.RelatedId) {
    return nil, false
	}
	return o.RelatedId, true
}

// HasRelatedId returns a boolean if a field has been set.
func (o *GetScreeningInfoResponseEntityResult) HasRelatedId() bool {
	if o != nil && !isNil(o.RelatedId) {
		return true
	}

	return false
}

// SetRelatedId gets a reference to the given float32 and assigns it to the RelatedId field.
func (o *GetScreeningInfoResponseEntityResult) SetRelatedId(v float32) {
	o.RelatedId = &v
}

// GetRelationships returns the Relationships field value if set, zero value otherwise.
func (o *GetScreeningInfoResponseEntityResult) GetRelationships() []string {
	if o == nil || isNil(o.Relationships) {
		var ret []string
		return ret
	}
	return o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetScreeningInfoResponseEntityResult) GetRelationshipsOk() ([]string, bool) {
	if o == nil || isNil(o.Relationships) {
    return nil, false
	}
	return o.Relationships, true
}

// HasRelationships returns a boolean if a field has been set.
func (o *GetScreeningInfoResponseEntityResult) HasRelationships() bool {
	if o != nil && !isNil(o.Relationships) {
		return true
	}

	return false
}

// SetRelationships gets a reference to the given []string and assigns it to the Relationships field.
func (o *GetScreeningInfoResponseEntityResult) SetRelationships(v []string) {
	o.Relationships = v
}

// GetRemarks returns the Remarks field value if set, zero value otherwise.
func (o *GetScreeningInfoResponseEntityResult) GetRemarks() string {
	if o == nil || isNil(o.Remarks) {
		var ret string
		return ret
	}
	return *o.Remarks
}

// GetRemarksOk returns a tuple with the Remarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetScreeningInfoResponseEntityResult) GetRemarksOk() (*string, bool) {
	if o == nil || isNil(o.Remarks) {
    return nil, false
	}
	return o.Remarks, true
}

// HasRemarks returns a boolean if a field has been set.
func (o *GetScreeningInfoResponseEntityResult) HasRemarks() bool {
	if o != nil && !isNil(o.Remarks) {
		return true
	}

	return false
}

// SetRemarks gets a reference to the given string and assigns it to the Remarks field.
func (o *GetScreeningInfoResponseEntityResult) SetRemarks(v string) {
	o.Remarks = &v
}

// GetSourceName returns the SourceName field value if set, zero value otherwise.
func (o *GetScreeningInfoResponseEntityResult) GetSourceName() string {
	if o == nil || isNil(o.SourceName) {
		var ret string
		return ret
	}
	return *o.SourceName
}

// GetSourceNameOk returns a tuple with the SourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetScreeningInfoResponseEntityResult) GetSourceNameOk() (*string, bool) {
	if o == nil || isNil(o.SourceName) {
    return nil, false
	}
	return o.SourceName, true
}

// HasSourceName returns a boolean if a field has been set.
func (o *GetScreeningInfoResponseEntityResult) HasSourceName() bool {
	if o != nil && !isNil(o.SourceName) {
		return true
	}

	return false
}

// SetSourceName gets a reference to the given string and assigns it to the SourceName field.
func (o *GetScreeningInfoResponseEntityResult) SetSourceName(v string) {
	o.SourceName = &v
}

// GetSourceWebLinks returns the SourceWebLinks field value if set, zero value otherwise.
func (o *GetScreeningInfoResponseEntityResult) GetSourceWebLinks() string {
	if o == nil || isNil(o.SourceWebLinks) {
		var ret string
		return ret
	}
	return *o.SourceWebLinks
}

// GetSourceWebLinksOk returns a tuple with the SourceWebLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetScreeningInfoResponseEntityResult) GetSourceWebLinksOk() (*string, bool) {
	if o == nil || isNil(o.SourceWebLinks) {
    return nil, false
	}
	return o.SourceWebLinks, true
}

// HasSourceWebLinks returns a boolean if a field has been set.
func (o *GetScreeningInfoResponseEntityResult) HasSourceWebLinks() bool {
	if o != nil && !isNil(o.SourceWebLinks) {
		return true
	}

	return false
}

// SetSourceWebLinks gets a reference to the given string and assigns it to the SourceWebLinks field.
func (o *GetScreeningInfoResponseEntityResult) SetSourceWebLinks(v string) {
	o.SourceWebLinks = &v
}

// GetSubCatDesc returns the SubCatDesc field value if set, zero value otherwise.
func (o *GetScreeningInfoResponseEntityResult) GetSubCatDesc() string {
	if o == nil || isNil(o.SubCatDesc) {
		var ret string
		return ret
	}
	return *o.SubCatDesc
}

// GetSubCatDescOk returns a tuple with the SubCatDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetScreeningInfoResponseEntityResult) GetSubCatDescOk() (*string, bool) {
	if o == nil || isNil(o.SubCatDesc) {
    return nil, false
	}
	return o.SubCatDesc, true
}

// HasSubCatDesc returns a boolean if a field has been set.
func (o *GetScreeningInfoResponseEntityResult) HasSubCatDesc() bool {
	if o != nil && !isNil(o.SubCatDesc) {
		return true
	}

	return false
}

// SetSubCatDesc gets a reference to the given string and assigns it to the SubCatDesc field.
func (o *GetScreeningInfoResponseEntityResult) SetSubCatDesc(v string) {
	o.SubCatDesc = &v
}

// GetSuffix returns the Suffix field value if set, zero value otherwise.
func (o *GetScreeningInfoResponseEntityResult) GetSuffix() string {
	if o == nil || isNil(o.Suffix) {
		var ret string
		return ret
	}
	return *o.Suffix
}

// GetSuffixOk returns a tuple with the Suffix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetScreeningInfoResponseEntityResult) GetSuffixOk() (*string, bool) {
	if o == nil || isNil(o.Suffix) {
    return nil, false
	}
	return o.Suffix, true
}

// HasSuffix returns a boolean if a field has been set.
func (o *GetScreeningInfoResponseEntityResult) HasSuffix() bool {
	if o != nil && !isNil(o.Suffix) {
		return true
	}

	return false
}

// SetSuffix gets a reference to the given string and assigns it to the Suffix field.
func (o *GetScreeningInfoResponseEntityResult) SetSuffix(v string) {
	o.Suffix = &v
}

// GetTouchDate returns the TouchDate field value if set, zero value otherwise.
func (o *GetScreeningInfoResponseEntityResult) GetTouchDate() string {
	if o == nil || isNil(o.TouchDate) {
		var ret string
		return ret
	}
	return *o.TouchDate
}

// GetTouchDateOk returns a tuple with the TouchDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetScreeningInfoResponseEntityResult) GetTouchDateOk() (*string, bool) {
	if o == nil || isNil(o.TouchDate) {
    return nil, false
	}
	return o.TouchDate, true
}

// HasTouchDate returns a boolean if a field has been set.
func (o *GetScreeningInfoResponseEntityResult) HasTouchDate() bool {
	if o != nil && !isNil(o.TouchDate) {
		return true
	}

	return false
}

// SetTouchDate gets a reference to the given string and assigns it to the TouchDate field.
func (o *GetScreeningInfoResponseEntityResult) SetTouchDate(v string) {
	o.TouchDate = &v
}

// GetWatch returns the Watch field value if set, zero value otherwise.
func (o *GetScreeningInfoResponseEntityResult) GetWatch() bool {
	if o == nil || isNil(o.Watch) {
		var ret bool
		return ret
	}
	return *o.Watch
}

// GetWatchOk returns a tuple with the Watch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetScreeningInfoResponseEntityResult) GetWatchOk() (*bool, bool) {
	if o == nil || isNil(o.Watch) {
    return nil, false
	}
	return o.Watch, true
}

// HasWatch returns a boolean if a field has been set.
func (o *GetScreeningInfoResponseEntityResult) HasWatch() bool {
	if o != nil && !isNil(o.Watch) {
		return true
	}

	return false
}

// SetWatch gets a reference to the given bool and assigns it to the Watch field.
func (o *GetScreeningInfoResponseEntityResult) SetWatch(v bool) {
	o.Watch = &v
}

func (o GetScreeningInfoResponseEntityResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Addresses) {
		toSerialize["addresses"] = o.Addresses
	}
	if !isNil(o.Aka) {
		toSerialize["aka"] = o.Aka
	}
	if !isNil(o.Aliases) {
		toSerialize["aliases"] = o.Aliases
	}
	if !isNil(o.CountryName) {
		toSerialize["countryName"] = o.CountryName
	}
	if !isNil(o.Dob) {
		toSerialize["dob"] = o.Dob
	}
	if !isNil(o.Dob2) {
		toSerialize["dob2"] = o.Dob2
	}
	if !isNil(o.EffectiveDate) {
		toSerialize["effectiveDate"] = o.EffectiveDate
	}
	if !isNil(o.EntryCategory) {
		toSerialize["entryCategory"] = o.EntryCategory
	}
	if !isNil(o.EntryDesc) {
		toSerialize["entryDesc"] = o.EntryDesc
	}
	if !isNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	if !isNil(o.GovDesignation) {
		toSerialize["govDesignation"] = o.GovDesignation
	}
	if !isNil(o.LastName) {
		toSerialize["lastName"] = o.LastName
	}
	if !isNil(o.LevelDesc) {
		toSerialize["levelDesc"] = o.LevelDesc
	}
	if !isNil(o.MasterId) {
		toSerialize["masterId"] = o.MasterId
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.NationalId) {
		toSerialize["nationalId"] = o.NationalId
	}
	if !isNil(o.OtherId) {
		toSerialize["otherId"] = o.OtherId
	}
	if !isNil(o.PassportId) {
		toSerialize["passportId"] = o.PassportId
	}
	if !isNil(o.Pob) {
		toSerialize["pob"] = o.Pob
	}
	if !isNil(o.Positions) {
		toSerialize["positions"] = o.Positions
	}
	if !isNil(o.Prefix) {
		toSerialize["prefix"] = o.Prefix
	}
	if !isNil(o.PrimaryName) {
		toSerialize["primaryName"] = o.PrimaryName
	}
	if !isNil(o.RelatedId) {
		toSerialize["relatedId"] = o.RelatedId
	}
	if !isNil(o.Relationships) {
		toSerialize["relationships"] = o.Relationships
	}
	if !isNil(o.Remarks) {
		toSerialize["remarks"] = o.Remarks
	}
	if !isNil(o.SourceName) {
		toSerialize["sourceName"] = o.SourceName
	}
	if !isNil(o.SourceWebLinks) {
		toSerialize["sourceWebLinks"] = o.SourceWebLinks
	}
	if !isNil(o.SubCatDesc) {
		toSerialize["subCatDesc"] = o.SubCatDesc
	}
	if !isNil(o.Suffix) {
		toSerialize["suffix"] = o.Suffix
	}
	if !isNil(o.TouchDate) {
		toSerialize["touchDate"] = o.TouchDate
	}
	if !isNil(o.Watch) {
		toSerialize["watch"] = o.Watch
	}
	return json.Marshal(toSerialize)
}

type NullableGetScreeningInfoResponseEntityResult struct {
	value *GetScreeningInfoResponseEntityResult
	isSet bool
}

func (v NullableGetScreeningInfoResponseEntityResult) Get() *GetScreeningInfoResponseEntityResult {
	return v.value
}

func (v *NullableGetScreeningInfoResponseEntityResult) Set(val *GetScreeningInfoResponseEntityResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGetScreeningInfoResponseEntityResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGetScreeningInfoResponseEntityResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetScreeningInfoResponseEntityResult(val *GetScreeningInfoResponseEntityResult) *NullableGetScreeningInfoResponseEntityResult {
	return &NullableGetScreeningInfoResponseEntityResult{value: val, isSet: true}
}

func (v NullableGetScreeningInfoResponseEntityResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetScreeningInfoResponseEntityResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


