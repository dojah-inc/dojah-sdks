/*
DOJAH APIs

Use Dojah to verify, onboard and manage user identity across Africa!

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package dojah

import (
	"encoding/json"
)

// GetWalletsResponseEntity struct for GetWalletsResponseEntity
type GetWalletsResponseEntity struct {
	AppId *string `json:"app_id,omitempty"`
	TotalAmount *float32 `json:"total_amount,omitempty"`
	ClientWallets []GetWalletResponseEntity `json:"client_wallets,omitempty"`
}

// NewGetWalletsResponseEntity instantiates a new GetWalletsResponseEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetWalletsResponseEntity() *GetWalletsResponseEntity {
	this := GetWalletsResponseEntity{}
	return &this
}

// NewGetWalletsResponseEntityWithDefaults instantiates a new GetWalletsResponseEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetWalletsResponseEntityWithDefaults() *GetWalletsResponseEntity {
	this := GetWalletsResponseEntity{}
	return &this
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *GetWalletsResponseEntity) GetAppId() string {
	if o == nil || isNil(o.AppId) {
		var ret string
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetWalletsResponseEntity) GetAppIdOk() (*string, bool) {
	if o == nil || isNil(o.AppId) {
    return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *GetWalletsResponseEntity) HasAppId() bool {
	if o != nil && !isNil(o.AppId) {
		return true
	}

	return false
}

// SetAppId gets a reference to the given string and assigns it to the AppId field.
func (o *GetWalletsResponseEntity) SetAppId(v string) {
	o.AppId = &v
}

// GetTotalAmount returns the TotalAmount field value if set, zero value otherwise.
func (o *GetWalletsResponseEntity) GetTotalAmount() float32 {
	if o == nil || isNil(o.TotalAmount) {
		var ret float32
		return ret
	}
	return *o.TotalAmount
}

// GetTotalAmountOk returns a tuple with the TotalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetWalletsResponseEntity) GetTotalAmountOk() (*float32, bool) {
	if o == nil || isNil(o.TotalAmount) {
    return nil, false
	}
	return o.TotalAmount, true
}

// HasTotalAmount returns a boolean if a field has been set.
func (o *GetWalletsResponseEntity) HasTotalAmount() bool {
	if o != nil && !isNil(o.TotalAmount) {
		return true
	}

	return false
}

// SetTotalAmount gets a reference to the given float32 and assigns it to the TotalAmount field.
func (o *GetWalletsResponseEntity) SetTotalAmount(v float32) {
	o.TotalAmount = &v
}

// GetClientWallets returns the ClientWallets field value if set, zero value otherwise.
func (o *GetWalletsResponseEntity) GetClientWallets() []GetWalletResponseEntity {
	if o == nil || isNil(o.ClientWallets) {
		var ret []GetWalletResponseEntity
		return ret
	}
	return o.ClientWallets
}

// GetClientWalletsOk returns a tuple with the ClientWallets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetWalletsResponseEntity) GetClientWalletsOk() ([]GetWalletResponseEntity, bool) {
	if o == nil || isNil(o.ClientWallets) {
    return nil, false
	}
	return o.ClientWallets, true
}

// HasClientWallets returns a boolean if a field has been set.
func (o *GetWalletsResponseEntity) HasClientWallets() bool {
	if o != nil && !isNil(o.ClientWallets) {
		return true
	}

	return false
}

// SetClientWallets gets a reference to the given []GetWalletResponseEntity and assigns it to the ClientWallets field.
func (o *GetWalletsResponseEntity) SetClientWallets(v []GetWalletResponseEntity) {
	o.ClientWallets = v
}

func (o GetWalletsResponseEntity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AppId) {
		toSerialize["app_id"] = o.AppId
	}
	if !isNil(o.TotalAmount) {
		toSerialize["total_amount"] = o.TotalAmount
	}
	if !isNil(o.ClientWallets) {
		toSerialize["client_wallets"] = o.ClientWallets
	}
	return json.Marshal(toSerialize)
}

type NullableGetWalletsResponseEntity struct {
	value *GetWalletsResponseEntity
	isSet bool
}

func (v NullableGetWalletsResponseEntity) Get() *GetWalletsResponseEntity {
	return v.value
}

func (v *NullableGetWalletsResponseEntity) Set(val *GetWalletsResponseEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableGetWalletsResponseEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableGetWalletsResponseEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetWalletsResponseEntity(val *GetWalletsResponseEntity) *NullableGetWalletsResponseEntity {
	return &NullableGetWalletsResponseEntity{value: val, isSet: true}
}

func (v NullableGetWalletsResponseEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetWalletsResponseEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


