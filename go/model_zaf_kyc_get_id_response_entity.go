/*
DOJAH Publilc APIs

Use Dojah to verify, onboard and manage user identity across Africa!

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package dojah

import (
	"encoding/json"
)

// ZafKycGetIdResponseEntity struct for ZafKycGetIdResponseEntity
type ZafKycGetIdResponseEntity struct {
	BirthPlaceCountry *string `json:"birth_place_country,omitempty"`
	BirthPlaceCountryCode *string `json:"birth_place_country_code,omitempty"`
	BookedDate *string `json:"booked_date,omitempty"`
	CardDate *string `json:"card_date,omitempty"`
	DateOfBirth *string `json:"date_of_birth,omitempty"`
	FullName *string `json:"full_name,omitempty"`
	Gender *string `json:"gender,omitempty"`
	IdBlocked *string `json:"id_blocked,omitempty"`
	IdNumber *string `json:"id_number,omitempty"`
	IssuedDate *string `json:"issued_date,omitempty"`
	LastName *string `json:"last_name,omitempty"`
	MaidenName *string `json:"maiden_name,omitempty"`
	MaritalStatus *string `json:"marital_status,omitempty"`
	OnHANIS *string `json:"on_HANIS,omitempty"`
	OnNPR *string `json:"on_NPR,omitempty"`
	Photo *string `json:"photo,omitempty"`
	SmartCardIssued *string `json:"smart_card_issued,omitempty"`
	Status *float32 `json:"status,omitempty"`
}

// NewZafKycGetIdResponseEntity instantiates a new ZafKycGetIdResponseEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewZafKycGetIdResponseEntity() *ZafKycGetIdResponseEntity {
	this := ZafKycGetIdResponseEntity{}
	return &this
}

// NewZafKycGetIdResponseEntityWithDefaults instantiates a new ZafKycGetIdResponseEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewZafKycGetIdResponseEntityWithDefaults() *ZafKycGetIdResponseEntity {
	this := ZafKycGetIdResponseEntity{}
	return &this
}

// GetBirthPlaceCountry returns the BirthPlaceCountry field value if set, zero value otherwise.
func (o *ZafKycGetIdResponseEntity) GetBirthPlaceCountry() string {
	if o == nil || isNil(o.BirthPlaceCountry) {
		var ret string
		return ret
	}
	return *o.BirthPlaceCountry
}

// GetBirthPlaceCountryOk returns a tuple with the BirthPlaceCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZafKycGetIdResponseEntity) GetBirthPlaceCountryOk() (*string, bool) {
	if o == nil || isNil(o.BirthPlaceCountry) {
    return nil, false
	}
	return o.BirthPlaceCountry, true
}

// HasBirthPlaceCountry returns a boolean if a field has been set.
func (o *ZafKycGetIdResponseEntity) HasBirthPlaceCountry() bool {
	if o != nil && !isNil(o.BirthPlaceCountry) {
		return true
	}

	return false
}

// SetBirthPlaceCountry gets a reference to the given string and assigns it to the BirthPlaceCountry field.
func (o *ZafKycGetIdResponseEntity) SetBirthPlaceCountry(v string) {
	o.BirthPlaceCountry = &v
}

// GetBirthPlaceCountryCode returns the BirthPlaceCountryCode field value if set, zero value otherwise.
func (o *ZafKycGetIdResponseEntity) GetBirthPlaceCountryCode() string {
	if o == nil || isNil(o.BirthPlaceCountryCode) {
		var ret string
		return ret
	}
	return *o.BirthPlaceCountryCode
}

// GetBirthPlaceCountryCodeOk returns a tuple with the BirthPlaceCountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZafKycGetIdResponseEntity) GetBirthPlaceCountryCodeOk() (*string, bool) {
	if o == nil || isNil(o.BirthPlaceCountryCode) {
    return nil, false
	}
	return o.BirthPlaceCountryCode, true
}

// HasBirthPlaceCountryCode returns a boolean if a field has been set.
func (o *ZafKycGetIdResponseEntity) HasBirthPlaceCountryCode() bool {
	if o != nil && !isNil(o.BirthPlaceCountryCode) {
		return true
	}

	return false
}

// SetBirthPlaceCountryCode gets a reference to the given string and assigns it to the BirthPlaceCountryCode field.
func (o *ZafKycGetIdResponseEntity) SetBirthPlaceCountryCode(v string) {
	o.BirthPlaceCountryCode = &v
}

// GetBookedDate returns the BookedDate field value if set, zero value otherwise.
func (o *ZafKycGetIdResponseEntity) GetBookedDate() string {
	if o == nil || isNil(o.BookedDate) {
		var ret string
		return ret
	}
	return *o.BookedDate
}

// GetBookedDateOk returns a tuple with the BookedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZafKycGetIdResponseEntity) GetBookedDateOk() (*string, bool) {
	if o == nil || isNil(o.BookedDate) {
    return nil, false
	}
	return o.BookedDate, true
}

// HasBookedDate returns a boolean if a field has been set.
func (o *ZafKycGetIdResponseEntity) HasBookedDate() bool {
	if o != nil && !isNil(o.BookedDate) {
		return true
	}

	return false
}

// SetBookedDate gets a reference to the given string and assigns it to the BookedDate field.
func (o *ZafKycGetIdResponseEntity) SetBookedDate(v string) {
	o.BookedDate = &v
}

// GetCardDate returns the CardDate field value if set, zero value otherwise.
func (o *ZafKycGetIdResponseEntity) GetCardDate() string {
	if o == nil || isNil(o.CardDate) {
		var ret string
		return ret
	}
	return *o.CardDate
}

// GetCardDateOk returns a tuple with the CardDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZafKycGetIdResponseEntity) GetCardDateOk() (*string, bool) {
	if o == nil || isNil(o.CardDate) {
    return nil, false
	}
	return o.CardDate, true
}

// HasCardDate returns a boolean if a field has been set.
func (o *ZafKycGetIdResponseEntity) HasCardDate() bool {
	if o != nil && !isNil(o.CardDate) {
		return true
	}

	return false
}

// SetCardDate gets a reference to the given string and assigns it to the CardDate field.
func (o *ZafKycGetIdResponseEntity) SetCardDate(v string) {
	o.CardDate = &v
}

// GetDateOfBirth returns the DateOfBirth field value if set, zero value otherwise.
func (o *ZafKycGetIdResponseEntity) GetDateOfBirth() string {
	if o == nil || isNil(o.DateOfBirth) {
		var ret string
		return ret
	}
	return *o.DateOfBirth
}

// GetDateOfBirthOk returns a tuple with the DateOfBirth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZafKycGetIdResponseEntity) GetDateOfBirthOk() (*string, bool) {
	if o == nil || isNil(o.DateOfBirth) {
    return nil, false
	}
	return o.DateOfBirth, true
}

// HasDateOfBirth returns a boolean if a field has been set.
func (o *ZafKycGetIdResponseEntity) HasDateOfBirth() bool {
	if o != nil && !isNil(o.DateOfBirth) {
		return true
	}

	return false
}

// SetDateOfBirth gets a reference to the given string and assigns it to the DateOfBirth field.
func (o *ZafKycGetIdResponseEntity) SetDateOfBirth(v string) {
	o.DateOfBirth = &v
}

// GetFullName returns the FullName field value if set, zero value otherwise.
func (o *ZafKycGetIdResponseEntity) GetFullName() string {
	if o == nil || isNil(o.FullName) {
		var ret string
		return ret
	}
	return *o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZafKycGetIdResponseEntity) GetFullNameOk() (*string, bool) {
	if o == nil || isNil(o.FullName) {
    return nil, false
	}
	return o.FullName, true
}

// HasFullName returns a boolean if a field has been set.
func (o *ZafKycGetIdResponseEntity) HasFullName() bool {
	if o != nil && !isNil(o.FullName) {
		return true
	}

	return false
}

// SetFullName gets a reference to the given string and assigns it to the FullName field.
func (o *ZafKycGetIdResponseEntity) SetFullName(v string) {
	o.FullName = &v
}

// GetGender returns the Gender field value if set, zero value otherwise.
func (o *ZafKycGetIdResponseEntity) GetGender() string {
	if o == nil || isNil(o.Gender) {
		var ret string
		return ret
	}
	return *o.Gender
}

// GetGenderOk returns a tuple with the Gender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZafKycGetIdResponseEntity) GetGenderOk() (*string, bool) {
	if o == nil || isNil(o.Gender) {
    return nil, false
	}
	return o.Gender, true
}

// HasGender returns a boolean if a field has been set.
func (o *ZafKycGetIdResponseEntity) HasGender() bool {
	if o != nil && !isNil(o.Gender) {
		return true
	}

	return false
}

// SetGender gets a reference to the given string and assigns it to the Gender field.
func (o *ZafKycGetIdResponseEntity) SetGender(v string) {
	o.Gender = &v
}

// GetIdBlocked returns the IdBlocked field value if set, zero value otherwise.
func (o *ZafKycGetIdResponseEntity) GetIdBlocked() string {
	if o == nil || isNil(o.IdBlocked) {
		var ret string
		return ret
	}
	return *o.IdBlocked
}

// GetIdBlockedOk returns a tuple with the IdBlocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZafKycGetIdResponseEntity) GetIdBlockedOk() (*string, bool) {
	if o == nil || isNil(o.IdBlocked) {
    return nil, false
	}
	return o.IdBlocked, true
}

// HasIdBlocked returns a boolean if a field has been set.
func (o *ZafKycGetIdResponseEntity) HasIdBlocked() bool {
	if o != nil && !isNil(o.IdBlocked) {
		return true
	}

	return false
}

// SetIdBlocked gets a reference to the given string and assigns it to the IdBlocked field.
func (o *ZafKycGetIdResponseEntity) SetIdBlocked(v string) {
	o.IdBlocked = &v
}

// GetIdNumber returns the IdNumber field value if set, zero value otherwise.
func (o *ZafKycGetIdResponseEntity) GetIdNumber() string {
	if o == nil || isNil(o.IdNumber) {
		var ret string
		return ret
	}
	return *o.IdNumber
}

// GetIdNumberOk returns a tuple with the IdNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZafKycGetIdResponseEntity) GetIdNumberOk() (*string, bool) {
	if o == nil || isNil(o.IdNumber) {
    return nil, false
	}
	return o.IdNumber, true
}

// HasIdNumber returns a boolean if a field has been set.
func (o *ZafKycGetIdResponseEntity) HasIdNumber() bool {
	if o != nil && !isNil(o.IdNumber) {
		return true
	}

	return false
}

// SetIdNumber gets a reference to the given string and assigns it to the IdNumber field.
func (o *ZafKycGetIdResponseEntity) SetIdNumber(v string) {
	o.IdNumber = &v
}

// GetIssuedDate returns the IssuedDate field value if set, zero value otherwise.
func (o *ZafKycGetIdResponseEntity) GetIssuedDate() string {
	if o == nil || isNil(o.IssuedDate) {
		var ret string
		return ret
	}
	return *o.IssuedDate
}

// GetIssuedDateOk returns a tuple with the IssuedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZafKycGetIdResponseEntity) GetIssuedDateOk() (*string, bool) {
	if o == nil || isNil(o.IssuedDate) {
    return nil, false
	}
	return o.IssuedDate, true
}

// HasIssuedDate returns a boolean if a field has been set.
func (o *ZafKycGetIdResponseEntity) HasIssuedDate() bool {
	if o != nil && !isNil(o.IssuedDate) {
		return true
	}

	return false
}

// SetIssuedDate gets a reference to the given string and assigns it to the IssuedDate field.
func (o *ZafKycGetIdResponseEntity) SetIssuedDate(v string) {
	o.IssuedDate = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *ZafKycGetIdResponseEntity) GetLastName() string {
	if o == nil || isNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZafKycGetIdResponseEntity) GetLastNameOk() (*string, bool) {
	if o == nil || isNil(o.LastName) {
    return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *ZafKycGetIdResponseEntity) HasLastName() bool {
	if o != nil && !isNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *ZafKycGetIdResponseEntity) SetLastName(v string) {
	o.LastName = &v
}

// GetMaidenName returns the MaidenName field value if set, zero value otherwise.
func (o *ZafKycGetIdResponseEntity) GetMaidenName() string {
	if o == nil || isNil(o.MaidenName) {
		var ret string
		return ret
	}
	return *o.MaidenName
}

// GetMaidenNameOk returns a tuple with the MaidenName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZafKycGetIdResponseEntity) GetMaidenNameOk() (*string, bool) {
	if o == nil || isNil(o.MaidenName) {
    return nil, false
	}
	return o.MaidenName, true
}

// HasMaidenName returns a boolean if a field has been set.
func (o *ZafKycGetIdResponseEntity) HasMaidenName() bool {
	if o != nil && !isNil(o.MaidenName) {
		return true
	}

	return false
}

// SetMaidenName gets a reference to the given string and assigns it to the MaidenName field.
func (o *ZafKycGetIdResponseEntity) SetMaidenName(v string) {
	o.MaidenName = &v
}

// GetMaritalStatus returns the MaritalStatus field value if set, zero value otherwise.
func (o *ZafKycGetIdResponseEntity) GetMaritalStatus() string {
	if o == nil || isNil(o.MaritalStatus) {
		var ret string
		return ret
	}
	return *o.MaritalStatus
}

// GetMaritalStatusOk returns a tuple with the MaritalStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZafKycGetIdResponseEntity) GetMaritalStatusOk() (*string, bool) {
	if o == nil || isNil(o.MaritalStatus) {
    return nil, false
	}
	return o.MaritalStatus, true
}

// HasMaritalStatus returns a boolean if a field has been set.
func (o *ZafKycGetIdResponseEntity) HasMaritalStatus() bool {
	if o != nil && !isNil(o.MaritalStatus) {
		return true
	}

	return false
}

// SetMaritalStatus gets a reference to the given string and assigns it to the MaritalStatus field.
func (o *ZafKycGetIdResponseEntity) SetMaritalStatus(v string) {
	o.MaritalStatus = &v
}

// GetOnHANIS returns the OnHANIS field value if set, zero value otherwise.
func (o *ZafKycGetIdResponseEntity) GetOnHANIS() string {
	if o == nil || isNil(o.OnHANIS) {
		var ret string
		return ret
	}
	return *o.OnHANIS
}

// GetOnHANISOk returns a tuple with the OnHANIS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZafKycGetIdResponseEntity) GetOnHANISOk() (*string, bool) {
	if o == nil || isNil(o.OnHANIS) {
    return nil, false
	}
	return o.OnHANIS, true
}

// HasOnHANIS returns a boolean if a field has been set.
func (o *ZafKycGetIdResponseEntity) HasOnHANIS() bool {
	if o != nil && !isNil(o.OnHANIS) {
		return true
	}

	return false
}

// SetOnHANIS gets a reference to the given string and assigns it to the OnHANIS field.
func (o *ZafKycGetIdResponseEntity) SetOnHANIS(v string) {
	o.OnHANIS = &v
}

// GetOnNPR returns the OnNPR field value if set, zero value otherwise.
func (o *ZafKycGetIdResponseEntity) GetOnNPR() string {
	if o == nil || isNil(o.OnNPR) {
		var ret string
		return ret
	}
	return *o.OnNPR
}

// GetOnNPROk returns a tuple with the OnNPR field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZafKycGetIdResponseEntity) GetOnNPROk() (*string, bool) {
	if o == nil || isNil(o.OnNPR) {
    return nil, false
	}
	return o.OnNPR, true
}

// HasOnNPR returns a boolean if a field has been set.
func (o *ZafKycGetIdResponseEntity) HasOnNPR() bool {
	if o != nil && !isNil(o.OnNPR) {
		return true
	}

	return false
}

// SetOnNPR gets a reference to the given string and assigns it to the OnNPR field.
func (o *ZafKycGetIdResponseEntity) SetOnNPR(v string) {
	o.OnNPR = &v
}

// GetPhoto returns the Photo field value if set, zero value otherwise.
func (o *ZafKycGetIdResponseEntity) GetPhoto() string {
	if o == nil || isNil(o.Photo) {
		var ret string
		return ret
	}
	return *o.Photo
}

// GetPhotoOk returns a tuple with the Photo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZafKycGetIdResponseEntity) GetPhotoOk() (*string, bool) {
	if o == nil || isNil(o.Photo) {
    return nil, false
	}
	return o.Photo, true
}

// HasPhoto returns a boolean if a field has been set.
func (o *ZafKycGetIdResponseEntity) HasPhoto() bool {
	if o != nil && !isNil(o.Photo) {
		return true
	}

	return false
}

// SetPhoto gets a reference to the given string and assigns it to the Photo field.
func (o *ZafKycGetIdResponseEntity) SetPhoto(v string) {
	o.Photo = &v
}

// GetSmartCardIssued returns the SmartCardIssued field value if set, zero value otherwise.
func (o *ZafKycGetIdResponseEntity) GetSmartCardIssued() string {
	if o == nil || isNil(o.SmartCardIssued) {
		var ret string
		return ret
	}
	return *o.SmartCardIssued
}

// GetSmartCardIssuedOk returns a tuple with the SmartCardIssued field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZafKycGetIdResponseEntity) GetSmartCardIssuedOk() (*string, bool) {
	if o == nil || isNil(o.SmartCardIssued) {
    return nil, false
	}
	return o.SmartCardIssued, true
}

// HasSmartCardIssued returns a boolean if a field has been set.
func (o *ZafKycGetIdResponseEntity) HasSmartCardIssued() bool {
	if o != nil && !isNil(o.SmartCardIssued) {
		return true
	}

	return false
}

// SetSmartCardIssued gets a reference to the given string and assigns it to the SmartCardIssued field.
func (o *ZafKycGetIdResponseEntity) SetSmartCardIssued(v string) {
	o.SmartCardIssued = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ZafKycGetIdResponseEntity) GetStatus() float32 {
	if o == nil || isNil(o.Status) {
		var ret float32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZafKycGetIdResponseEntity) GetStatusOk() (*float32, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ZafKycGetIdResponseEntity) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given float32 and assigns it to the Status field.
func (o *ZafKycGetIdResponseEntity) SetStatus(v float32) {
	o.Status = &v
}

func (o ZafKycGetIdResponseEntity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.BirthPlaceCountry) {
		toSerialize["birth_place_country"] = o.BirthPlaceCountry
	}
	if !isNil(o.BirthPlaceCountryCode) {
		toSerialize["birth_place_country_code"] = o.BirthPlaceCountryCode
	}
	if !isNil(o.BookedDate) {
		toSerialize["booked_date"] = o.BookedDate
	}
	if !isNil(o.CardDate) {
		toSerialize["card_date"] = o.CardDate
	}
	if !isNil(o.DateOfBirth) {
		toSerialize["date_of_birth"] = o.DateOfBirth
	}
	if !isNil(o.FullName) {
		toSerialize["full_name"] = o.FullName
	}
	if !isNil(o.Gender) {
		toSerialize["gender"] = o.Gender
	}
	if !isNil(o.IdBlocked) {
		toSerialize["id_blocked"] = o.IdBlocked
	}
	if !isNil(o.IdNumber) {
		toSerialize["id_number"] = o.IdNumber
	}
	if !isNil(o.IssuedDate) {
		toSerialize["issued_date"] = o.IssuedDate
	}
	if !isNil(o.LastName) {
		toSerialize["last_name"] = o.LastName
	}
	if !isNil(o.MaidenName) {
		toSerialize["maiden_name"] = o.MaidenName
	}
	if !isNil(o.MaritalStatus) {
		toSerialize["marital_status"] = o.MaritalStatus
	}
	if !isNil(o.OnHANIS) {
		toSerialize["on_HANIS"] = o.OnHANIS
	}
	if !isNil(o.OnNPR) {
		toSerialize["on_NPR"] = o.OnNPR
	}
	if !isNil(o.Photo) {
		toSerialize["photo"] = o.Photo
	}
	if !isNil(o.SmartCardIssued) {
		toSerialize["smart_card_issued"] = o.SmartCardIssued
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableZafKycGetIdResponseEntity struct {
	value *ZafKycGetIdResponseEntity
	isSet bool
}

func (v NullableZafKycGetIdResponseEntity) Get() *ZafKycGetIdResponseEntity {
	return v.value
}

func (v *NullableZafKycGetIdResponseEntity) Set(val *ZafKycGetIdResponseEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableZafKycGetIdResponseEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableZafKycGetIdResponseEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableZafKycGetIdResponseEntity(val *ZafKycGetIdResponseEntity) *NullableZafKycGetIdResponseEntity {
	return &NullableZafKycGetIdResponseEntity{value: val, isSet: true}
}

func (v NullableZafKycGetIdResponseEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableZafKycGetIdResponseEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


