/*
DOJAH Publilc APIs

Use Dojah to verify, onboard and manage user identity across Africa!

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package dojah

import (
	"encoding/json"
)

// GetFullBvnResponse struct for GetFullBvnResponse
type GetFullBvnResponse struct {
	Entity *GetFullBvnResponseEntity `json:"entity,omitempty"`
}

// NewGetFullBvnResponse instantiates a new GetFullBvnResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetFullBvnResponse() *GetFullBvnResponse {
	this := GetFullBvnResponse{}
	return &this
}

// NewGetFullBvnResponseWithDefaults instantiates a new GetFullBvnResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetFullBvnResponseWithDefaults() *GetFullBvnResponse {
	this := GetFullBvnResponse{}
	return &this
}

// GetEntity returns the Entity field value if set, zero value otherwise.
func (o *GetFullBvnResponse) GetEntity() GetFullBvnResponseEntity {
	if o == nil || isNil(o.Entity) {
		var ret GetFullBvnResponseEntity
		return ret
	}
	return *o.Entity
}

// GetEntityOk returns a tuple with the Entity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFullBvnResponse) GetEntityOk() (*GetFullBvnResponseEntity, bool) {
	if o == nil || isNil(o.Entity) {
    return nil, false
	}
	return o.Entity, true
}

// HasEntity returns a boolean if a field has been set.
func (o *GetFullBvnResponse) HasEntity() bool {
	if o != nil && !isNil(o.Entity) {
		return true
	}

	return false
}

// SetEntity gets a reference to the given GetFullBvnResponseEntity and assigns it to the Entity field.
func (o *GetFullBvnResponse) SetEntity(v GetFullBvnResponseEntity) {
	o.Entity = &v
}

func (o GetFullBvnResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Entity) {
		toSerialize["entity"] = o.Entity
	}
	return json.Marshal(toSerialize)
}

type NullableGetFullBvnResponse struct {
	value *GetFullBvnResponse
	isSet bool
}

func (v NullableGetFullBvnResponse) Get() *GetFullBvnResponse {
	return v.value
}

func (v *NullableGetFullBvnResponse) Set(val *GetFullBvnResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetFullBvnResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetFullBvnResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetFullBvnResponse(val *GetFullBvnResponse) *NullableGetFullBvnResponse {
	return &NullableGetFullBvnResponse{value: val, isSet: true}
}

func (v NullableGetFullBvnResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetFullBvnResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


