/*
DOJAH APIs

Use Dojah to verify, onboard and manage user identity across Africa!

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package dojah

import (
	"encoding/json"
)

// GetSpendingPatternResponseEntity struct for GetSpendingPatternResponseEntity
type GetSpendingPatternResponseEntity struct {
	Pattern *GetSpendingPatternResponseEntityPattern `json:"pattern,omitempty"`
}

// NewGetSpendingPatternResponseEntity instantiates a new GetSpendingPatternResponseEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSpendingPatternResponseEntity() *GetSpendingPatternResponseEntity {
	this := GetSpendingPatternResponseEntity{}
	return &this
}

// NewGetSpendingPatternResponseEntityWithDefaults instantiates a new GetSpendingPatternResponseEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSpendingPatternResponseEntityWithDefaults() *GetSpendingPatternResponseEntity {
	this := GetSpendingPatternResponseEntity{}
	return &this
}

// GetPattern returns the Pattern field value if set, zero value otherwise.
func (o *GetSpendingPatternResponseEntity) GetPattern() GetSpendingPatternResponseEntityPattern {
	if o == nil || isNil(o.Pattern) {
		var ret GetSpendingPatternResponseEntityPattern
		return ret
	}
	return *o.Pattern
}

// GetPatternOk returns a tuple with the Pattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSpendingPatternResponseEntity) GetPatternOk() (*GetSpendingPatternResponseEntityPattern, bool) {
	if o == nil || isNil(o.Pattern) {
    return nil, false
	}
	return o.Pattern, true
}

// HasPattern returns a boolean if a field has been set.
func (o *GetSpendingPatternResponseEntity) HasPattern() bool {
	if o != nil && !isNil(o.Pattern) {
		return true
	}

	return false
}

// SetPattern gets a reference to the given GetSpendingPatternResponseEntityPattern and assigns it to the Pattern field.
func (o *GetSpendingPatternResponseEntity) SetPattern(v GetSpendingPatternResponseEntityPattern) {
	o.Pattern = &v
}

func (o GetSpendingPatternResponseEntity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Pattern) {
		toSerialize["pattern"] = o.Pattern
	}
	return json.Marshal(toSerialize)
}

type NullableGetSpendingPatternResponseEntity struct {
	value *GetSpendingPatternResponseEntity
	isSet bool
}

func (v NullableGetSpendingPatternResponseEntity) Get() *GetSpendingPatternResponseEntity {
	return v.value
}

func (v *NullableGetSpendingPatternResponseEntity) Set(val *GetSpendingPatternResponseEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSpendingPatternResponseEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSpendingPatternResponseEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSpendingPatternResponseEntity(val *GetSpendingPatternResponseEntity) *NullableGetSpendingPatternResponseEntity {
	return &NullableGetSpendingPatternResponseEntity{value: val, isSet: true}
}

func (v NullableGetSpendingPatternResponseEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSpendingPatternResponseEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


