/*
DOJAH Publilc APIs

Use Dojah to verify, onboard and manage user identity across Africa!

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package dojah

import (
	"encoding/json"
)

// AmlScreenAmlRequest struct for AmlScreenAmlRequest
type AmlScreenAmlRequest struct {
	FirstName *string `json:"first_name,omitempty"`
	LastName *string `json:"last_name,omitempty"`
	DateOfBirth *string `json:"date_of_birth,omitempty"`
	NameQueryMatchThreshold *string `json:"name_query_match_threshold,omitempty"`
}

// NewAmlScreenAmlRequest instantiates a new AmlScreenAmlRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAmlScreenAmlRequest() *AmlScreenAmlRequest {
	this := AmlScreenAmlRequest{}
	return &this
}

// NewAmlScreenAmlRequestWithDefaults instantiates a new AmlScreenAmlRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAmlScreenAmlRequestWithDefaults() *AmlScreenAmlRequest {
	this := AmlScreenAmlRequest{}
	return &this
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *AmlScreenAmlRequest) GetFirstName() string {
	if o == nil || isNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmlScreenAmlRequest) GetFirstNameOk() (*string, bool) {
	if o == nil || isNil(o.FirstName) {
    return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *AmlScreenAmlRequest) HasFirstName() bool {
	if o != nil && !isNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *AmlScreenAmlRequest) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *AmlScreenAmlRequest) GetLastName() string {
	if o == nil || isNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmlScreenAmlRequest) GetLastNameOk() (*string, bool) {
	if o == nil || isNil(o.LastName) {
    return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *AmlScreenAmlRequest) HasLastName() bool {
	if o != nil && !isNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *AmlScreenAmlRequest) SetLastName(v string) {
	o.LastName = &v
}

// GetDateOfBirth returns the DateOfBirth field value if set, zero value otherwise.
func (o *AmlScreenAmlRequest) GetDateOfBirth() string {
	if o == nil || isNil(o.DateOfBirth) {
		var ret string
		return ret
	}
	return *o.DateOfBirth
}

// GetDateOfBirthOk returns a tuple with the DateOfBirth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmlScreenAmlRequest) GetDateOfBirthOk() (*string, bool) {
	if o == nil || isNil(o.DateOfBirth) {
    return nil, false
	}
	return o.DateOfBirth, true
}

// HasDateOfBirth returns a boolean if a field has been set.
func (o *AmlScreenAmlRequest) HasDateOfBirth() bool {
	if o != nil && !isNil(o.DateOfBirth) {
		return true
	}

	return false
}

// SetDateOfBirth gets a reference to the given string and assigns it to the DateOfBirth field.
func (o *AmlScreenAmlRequest) SetDateOfBirth(v string) {
	o.DateOfBirth = &v
}

// GetNameQueryMatchThreshold returns the NameQueryMatchThreshold field value if set, zero value otherwise.
func (o *AmlScreenAmlRequest) GetNameQueryMatchThreshold() string {
	if o == nil || isNil(o.NameQueryMatchThreshold) {
		var ret string
		return ret
	}
	return *o.NameQueryMatchThreshold
}

// GetNameQueryMatchThresholdOk returns a tuple with the NameQueryMatchThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmlScreenAmlRequest) GetNameQueryMatchThresholdOk() (*string, bool) {
	if o == nil || isNil(o.NameQueryMatchThreshold) {
    return nil, false
	}
	return o.NameQueryMatchThreshold, true
}

// HasNameQueryMatchThreshold returns a boolean if a field has been set.
func (o *AmlScreenAmlRequest) HasNameQueryMatchThreshold() bool {
	if o != nil && !isNil(o.NameQueryMatchThreshold) {
		return true
	}

	return false
}

// SetNameQueryMatchThreshold gets a reference to the given string and assigns it to the NameQueryMatchThreshold field.
func (o *AmlScreenAmlRequest) SetNameQueryMatchThreshold(v string) {
	o.NameQueryMatchThreshold = &v
}

func (o AmlScreenAmlRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.FirstName) {
		toSerialize["first_name"] = o.FirstName
	}
	if !isNil(o.LastName) {
		toSerialize["last_name"] = o.LastName
	}
	if !isNil(o.DateOfBirth) {
		toSerialize["date_of_birth"] = o.DateOfBirth
	}
	if !isNil(o.NameQueryMatchThreshold) {
		toSerialize["name_query_match_threshold"] = o.NameQueryMatchThreshold
	}
	return json.Marshal(toSerialize)
}

type NullableAmlScreenAmlRequest struct {
	value *AmlScreenAmlRequest
	isSet bool
}

func (v NullableAmlScreenAmlRequest) Get() *AmlScreenAmlRequest {
	return v.value
}

func (v *NullableAmlScreenAmlRequest) Set(val *AmlScreenAmlRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAmlScreenAmlRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAmlScreenAmlRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAmlScreenAmlRequest(val *AmlScreenAmlRequest) *NullableAmlScreenAmlRequest {
	return &NullableAmlScreenAmlRequest{value: val, isSet: true}
}

func (v NullableAmlScreenAmlRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAmlScreenAmlRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


