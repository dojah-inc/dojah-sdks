/*
DOJAH APIs

Use Dojah to verify, onboard and manage user identity across Africa!

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package dojah

import (
	"encoding/json"
)

// AnalyzeDocumentResponseEntityDocumentImages struct for AnalyzeDocumentResponseEntityDocumentImages
type AnalyzeDocumentResponseEntityDocumentImages struct {
	Portrait *string `json:"Portrait,omitempty"`
	Fingerprint *string `json:"Fingerprint,omitempty"`
	DocumentFrontSide *string `json:"Document front side,omitempty"`
}

// NewAnalyzeDocumentResponseEntityDocumentImages instantiates a new AnalyzeDocumentResponseEntityDocumentImages object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnalyzeDocumentResponseEntityDocumentImages() *AnalyzeDocumentResponseEntityDocumentImages {
	this := AnalyzeDocumentResponseEntityDocumentImages{}
	return &this
}

// NewAnalyzeDocumentResponseEntityDocumentImagesWithDefaults instantiates a new AnalyzeDocumentResponseEntityDocumentImages object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnalyzeDocumentResponseEntityDocumentImagesWithDefaults() *AnalyzeDocumentResponseEntityDocumentImages {
	this := AnalyzeDocumentResponseEntityDocumentImages{}
	return &this
}

// GetPortrait returns the Portrait field value if set, zero value otherwise.
func (o *AnalyzeDocumentResponseEntityDocumentImages) GetPortrait() string {
	if o == nil || isNil(o.Portrait) {
		var ret string
		return ret
	}
	return *o.Portrait
}

// GetPortraitOk returns a tuple with the Portrait field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyzeDocumentResponseEntityDocumentImages) GetPortraitOk() (*string, bool) {
	if o == nil || isNil(o.Portrait) {
    return nil, false
	}
	return o.Portrait, true
}

// HasPortrait returns a boolean if a field has been set.
func (o *AnalyzeDocumentResponseEntityDocumentImages) HasPortrait() bool {
	if o != nil && !isNil(o.Portrait) {
		return true
	}

	return false
}

// SetPortrait gets a reference to the given string and assigns it to the Portrait field.
func (o *AnalyzeDocumentResponseEntityDocumentImages) SetPortrait(v string) {
	o.Portrait = &v
}

// GetFingerprint returns the Fingerprint field value if set, zero value otherwise.
func (o *AnalyzeDocumentResponseEntityDocumentImages) GetFingerprint() string {
	if o == nil || isNil(o.Fingerprint) {
		var ret string
		return ret
	}
	return *o.Fingerprint
}

// GetFingerprintOk returns a tuple with the Fingerprint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyzeDocumentResponseEntityDocumentImages) GetFingerprintOk() (*string, bool) {
	if o == nil || isNil(o.Fingerprint) {
    return nil, false
	}
	return o.Fingerprint, true
}

// HasFingerprint returns a boolean if a field has been set.
func (o *AnalyzeDocumentResponseEntityDocumentImages) HasFingerprint() bool {
	if o != nil && !isNil(o.Fingerprint) {
		return true
	}

	return false
}

// SetFingerprint gets a reference to the given string and assigns it to the Fingerprint field.
func (o *AnalyzeDocumentResponseEntityDocumentImages) SetFingerprint(v string) {
	o.Fingerprint = &v
}

// GetDocumentFrontSide returns the DocumentFrontSide field value if set, zero value otherwise.
func (o *AnalyzeDocumentResponseEntityDocumentImages) GetDocumentFrontSide() string {
	if o == nil || isNil(o.DocumentFrontSide) {
		var ret string
		return ret
	}
	return *o.DocumentFrontSide
}

// GetDocumentFrontSideOk returns a tuple with the DocumentFrontSide field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyzeDocumentResponseEntityDocumentImages) GetDocumentFrontSideOk() (*string, bool) {
	if o == nil || isNil(o.DocumentFrontSide) {
    return nil, false
	}
	return o.DocumentFrontSide, true
}

// HasDocumentFrontSide returns a boolean if a field has been set.
func (o *AnalyzeDocumentResponseEntityDocumentImages) HasDocumentFrontSide() bool {
	if o != nil && !isNil(o.DocumentFrontSide) {
		return true
	}

	return false
}

// SetDocumentFrontSide gets a reference to the given string and assigns it to the DocumentFrontSide field.
func (o *AnalyzeDocumentResponseEntityDocumentImages) SetDocumentFrontSide(v string) {
	o.DocumentFrontSide = &v
}

func (o AnalyzeDocumentResponseEntityDocumentImages) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Portrait) {
		toSerialize["Portrait"] = o.Portrait
	}
	if !isNil(o.Fingerprint) {
		toSerialize["Fingerprint"] = o.Fingerprint
	}
	if !isNil(o.DocumentFrontSide) {
		toSerialize["Document front side"] = o.DocumentFrontSide
	}
	return json.Marshal(toSerialize)
}

type NullableAnalyzeDocumentResponseEntityDocumentImages struct {
	value *AnalyzeDocumentResponseEntityDocumentImages
	isSet bool
}

func (v NullableAnalyzeDocumentResponseEntityDocumentImages) Get() *AnalyzeDocumentResponseEntityDocumentImages {
	return v.value
}

func (v *NullableAnalyzeDocumentResponseEntityDocumentImages) Set(val *AnalyzeDocumentResponseEntityDocumentImages) {
	v.value = val
	v.isSet = true
}

func (v NullableAnalyzeDocumentResponseEntityDocumentImages) IsSet() bool {
	return v.isSet
}

func (v *NullableAnalyzeDocumentResponseEntityDocumentImages) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnalyzeDocumentResponseEntityDocumentImages(val *AnalyzeDocumentResponseEntityDocumentImages) *NullableAnalyzeDocumentResponseEntityDocumentImages {
	return &NullableAnalyzeDocumentResponseEntityDocumentImages{value: val, isSet: true}
}

func (v NullableAnalyzeDocumentResponseEntityDocumentImages) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAnalyzeDocumentResponseEntityDocumentImages) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


