/*
DOJAH APIs

Use Dojah to verify, onboard and manage user identity across Africa!

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package dojah

import (
	"encoding/json"
)

// CollectTransactionsRequestTransactionsInner struct for CollectTransactionsRequestTransactionsInner
type CollectTransactionsRequestTransactionsInner struct {
	TransactionDate *string `json:"transaction_date,omitempty"`
	TransactionAmount *string `json:"transaction_amount,omitempty"`
	TransactionDescription *string `json:"transaction_description,omitempty"`
	TransactionType *string `json:"transaction_type,omitempty"`
	ReferenceNumber *string `json:"reference_number,omitempty"`
}

// NewCollectTransactionsRequestTransactionsInner instantiates a new CollectTransactionsRequestTransactionsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCollectTransactionsRequestTransactionsInner() *CollectTransactionsRequestTransactionsInner {
	this := CollectTransactionsRequestTransactionsInner{}
	return &this
}

// NewCollectTransactionsRequestTransactionsInnerWithDefaults instantiates a new CollectTransactionsRequestTransactionsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCollectTransactionsRequestTransactionsInnerWithDefaults() *CollectTransactionsRequestTransactionsInner {
	this := CollectTransactionsRequestTransactionsInner{}
	return &this
}

// GetTransactionDate returns the TransactionDate field value if set, zero value otherwise.
func (o *CollectTransactionsRequestTransactionsInner) GetTransactionDate() string {
	if o == nil || isNil(o.TransactionDate) {
		var ret string
		return ret
	}
	return *o.TransactionDate
}

// GetTransactionDateOk returns a tuple with the TransactionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectTransactionsRequestTransactionsInner) GetTransactionDateOk() (*string, bool) {
	if o == nil || isNil(o.TransactionDate) {
    return nil, false
	}
	return o.TransactionDate, true
}

// HasTransactionDate returns a boolean if a field has been set.
func (o *CollectTransactionsRequestTransactionsInner) HasTransactionDate() bool {
	if o != nil && !isNil(o.TransactionDate) {
		return true
	}

	return false
}

// SetTransactionDate gets a reference to the given string and assigns it to the TransactionDate field.
func (o *CollectTransactionsRequestTransactionsInner) SetTransactionDate(v string) {
	o.TransactionDate = &v
}

// GetTransactionAmount returns the TransactionAmount field value if set, zero value otherwise.
func (o *CollectTransactionsRequestTransactionsInner) GetTransactionAmount() string {
	if o == nil || isNil(o.TransactionAmount) {
		var ret string
		return ret
	}
	return *o.TransactionAmount
}

// GetTransactionAmountOk returns a tuple with the TransactionAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectTransactionsRequestTransactionsInner) GetTransactionAmountOk() (*string, bool) {
	if o == nil || isNil(o.TransactionAmount) {
    return nil, false
	}
	return o.TransactionAmount, true
}

// HasTransactionAmount returns a boolean if a field has been set.
func (o *CollectTransactionsRequestTransactionsInner) HasTransactionAmount() bool {
	if o != nil && !isNil(o.TransactionAmount) {
		return true
	}

	return false
}

// SetTransactionAmount gets a reference to the given string and assigns it to the TransactionAmount field.
func (o *CollectTransactionsRequestTransactionsInner) SetTransactionAmount(v string) {
	o.TransactionAmount = &v
}

// GetTransactionDescription returns the TransactionDescription field value if set, zero value otherwise.
func (o *CollectTransactionsRequestTransactionsInner) GetTransactionDescription() string {
	if o == nil || isNil(o.TransactionDescription) {
		var ret string
		return ret
	}
	return *o.TransactionDescription
}

// GetTransactionDescriptionOk returns a tuple with the TransactionDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectTransactionsRequestTransactionsInner) GetTransactionDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.TransactionDescription) {
    return nil, false
	}
	return o.TransactionDescription, true
}

// HasTransactionDescription returns a boolean if a field has been set.
func (o *CollectTransactionsRequestTransactionsInner) HasTransactionDescription() bool {
	if o != nil && !isNil(o.TransactionDescription) {
		return true
	}

	return false
}

// SetTransactionDescription gets a reference to the given string and assigns it to the TransactionDescription field.
func (o *CollectTransactionsRequestTransactionsInner) SetTransactionDescription(v string) {
	o.TransactionDescription = &v
}

// GetTransactionType returns the TransactionType field value if set, zero value otherwise.
func (o *CollectTransactionsRequestTransactionsInner) GetTransactionType() string {
	if o == nil || isNil(o.TransactionType) {
		var ret string
		return ret
	}
	return *o.TransactionType
}

// GetTransactionTypeOk returns a tuple with the TransactionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectTransactionsRequestTransactionsInner) GetTransactionTypeOk() (*string, bool) {
	if o == nil || isNil(o.TransactionType) {
    return nil, false
	}
	return o.TransactionType, true
}

// HasTransactionType returns a boolean if a field has been set.
func (o *CollectTransactionsRequestTransactionsInner) HasTransactionType() bool {
	if o != nil && !isNil(o.TransactionType) {
		return true
	}

	return false
}

// SetTransactionType gets a reference to the given string and assigns it to the TransactionType field.
func (o *CollectTransactionsRequestTransactionsInner) SetTransactionType(v string) {
	o.TransactionType = &v
}

// GetReferenceNumber returns the ReferenceNumber field value if set, zero value otherwise.
func (o *CollectTransactionsRequestTransactionsInner) GetReferenceNumber() string {
	if o == nil || isNil(o.ReferenceNumber) {
		var ret string
		return ret
	}
	return *o.ReferenceNumber
}

// GetReferenceNumberOk returns a tuple with the ReferenceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectTransactionsRequestTransactionsInner) GetReferenceNumberOk() (*string, bool) {
	if o == nil || isNil(o.ReferenceNumber) {
    return nil, false
	}
	return o.ReferenceNumber, true
}

// HasReferenceNumber returns a boolean if a field has been set.
func (o *CollectTransactionsRequestTransactionsInner) HasReferenceNumber() bool {
	if o != nil && !isNil(o.ReferenceNumber) {
		return true
	}

	return false
}

// SetReferenceNumber gets a reference to the given string and assigns it to the ReferenceNumber field.
func (o *CollectTransactionsRequestTransactionsInner) SetReferenceNumber(v string) {
	o.ReferenceNumber = &v
}

func (o CollectTransactionsRequestTransactionsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.TransactionDate) {
		toSerialize["transaction_date"] = o.TransactionDate
	}
	if !isNil(o.TransactionAmount) {
		toSerialize["transaction_amount"] = o.TransactionAmount
	}
	if !isNil(o.TransactionDescription) {
		toSerialize["transaction_description"] = o.TransactionDescription
	}
	if !isNil(o.TransactionType) {
		toSerialize["transaction_type"] = o.TransactionType
	}
	if !isNil(o.ReferenceNumber) {
		toSerialize["reference_number"] = o.ReferenceNumber
	}
	return json.Marshal(toSerialize)
}

type NullableCollectTransactionsRequestTransactionsInner struct {
	value *CollectTransactionsRequestTransactionsInner
	isSet bool
}

func (v NullableCollectTransactionsRequestTransactionsInner) Get() *CollectTransactionsRequestTransactionsInner {
	return v.value
}

func (v *NullableCollectTransactionsRequestTransactionsInner) Set(val *CollectTransactionsRequestTransactionsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCollectTransactionsRequestTransactionsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCollectTransactionsRequestTransactionsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCollectTransactionsRequestTransactionsInner(val *CollectTransactionsRequestTransactionsInner) *NullableCollectTransactionsRequestTransactionsInner {
	return &NullableCollectTransactionsRequestTransactionsInner{value: val, isSet: true}
}

func (v NullableCollectTransactionsRequestTransactionsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCollectTransactionsRequestTransactionsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


