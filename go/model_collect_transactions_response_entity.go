/*
DOJAH APIs

Use Dojah to verify, onboard and manage user identity across Africa!

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package dojah

import (
	"encoding/json"
)

// CollectTransactionsResponseEntity struct for CollectTransactionsResponseEntity
type CollectTransactionsResponseEntity struct {
	AccountId *string `json:"account_id,omitempty"`
}

// NewCollectTransactionsResponseEntity instantiates a new CollectTransactionsResponseEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCollectTransactionsResponseEntity() *CollectTransactionsResponseEntity {
	this := CollectTransactionsResponseEntity{}
	return &this
}

// NewCollectTransactionsResponseEntityWithDefaults instantiates a new CollectTransactionsResponseEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCollectTransactionsResponseEntityWithDefaults() *CollectTransactionsResponseEntity {
	this := CollectTransactionsResponseEntity{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *CollectTransactionsResponseEntity) GetAccountId() string {
	if o == nil || isNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectTransactionsResponseEntity) GetAccountIdOk() (*string, bool) {
	if o == nil || isNil(o.AccountId) {
    return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *CollectTransactionsResponseEntity) HasAccountId() bool {
	if o != nil && !isNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *CollectTransactionsResponseEntity) SetAccountId(v string) {
	o.AccountId = &v
}

func (o CollectTransactionsResponseEntity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	return json.Marshal(toSerialize)
}

type NullableCollectTransactionsResponseEntity struct {
	value *CollectTransactionsResponseEntity
	isSet bool
}

func (v NullableCollectTransactionsResponseEntity) Get() *CollectTransactionsResponseEntity {
	return v.value
}

func (v *NullableCollectTransactionsResponseEntity) Set(val *CollectTransactionsResponseEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableCollectTransactionsResponseEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableCollectTransactionsResponseEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCollectTransactionsResponseEntity(val *CollectTransactionsResponseEntity) *NullableCollectTransactionsResponseEntity {
	return &NullableCollectTransactionsResponseEntity{value: val, isSet: true}
}

func (v NullableCollectTransactionsResponseEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCollectTransactionsResponseEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


