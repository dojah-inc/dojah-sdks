/*
DOJAH APIs

Use Dojah to verify, onboard and manage user identity across Africa!

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package dojah

import (
	"encoding/json"
)

// CategorizeTransactionsRequest struct for CategorizeTransactionsRequest
type CategorizeTransactionsRequest struct {
	Description *string `json:"description,omitempty"`
	TransType *string `json:"trans_type,omitempty"`
}

// NewCategorizeTransactionsRequest instantiates a new CategorizeTransactionsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCategorizeTransactionsRequest() *CategorizeTransactionsRequest {
	this := CategorizeTransactionsRequest{}
	return &this
}

// NewCategorizeTransactionsRequestWithDefaults instantiates a new CategorizeTransactionsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCategorizeTransactionsRequestWithDefaults() *CategorizeTransactionsRequest {
	this := CategorizeTransactionsRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CategorizeTransactionsRequest) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategorizeTransactionsRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CategorizeTransactionsRequest) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CategorizeTransactionsRequest) SetDescription(v string) {
	o.Description = &v
}

// GetTransType returns the TransType field value if set, zero value otherwise.
func (o *CategorizeTransactionsRequest) GetTransType() string {
	if o == nil || isNil(o.TransType) {
		var ret string
		return ret
	}
	return *o.TransType
}

// GetTransTypeOk returns a tuple with the TransType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategorizeTransactionsRequest) GetTransTypeOk() (*string, bool) {
	if o == nil || isNil(o.TransType) {
    return nil, false
	}
	return o.TransType, true
}

// HasTransType returns a boolean if a field has been set.
func (o *CategorizeTransactionsRequest) HasTransType() bool {
	if o != nil && !isNil(o.TransType) {
		return true
	}

	return false
}

// SetTransType gets a reference to the given string and assigns it to the TransType field.
func (o *CategorizeTransactionsRequest) SetTransType(v string) {
	o.TransType = &v
}

func (o CategorizeTransactionsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.TransType) {
		toSerialize["trans_type"] = o.TransType
	}
	return json.Marshal(toSerialize)
}

type NullableCategorizeTransactionsRequest struct {
	value *CategorizeTransactionsRequest
	isSet bool
}

func (v NullableCategorizeTransactionsRequest) Get() *CategorizeTransactionsRequest {
	return v.value
}

func (v *NullableCategorizeTransactionsRequest) Set(val *CategorizeTransactionsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCategorizeTransactionsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCategorizeTransactionsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCategorizeTransactionsRequest(val *CategorizeTransactionsRequest) *NullableCategorizeTransactionsRequest {
	return &NullableCategorizeTransactionsRequest{value: val, isSet: true}
}

func (v NullableCategorizeTransactionsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCategorizeTransactionsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


