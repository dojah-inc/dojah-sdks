/*
 * DOJAH APIs
 * Use Dojah to verify, onboard and manage user identity across Africa!
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.dojah.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.dojah.client.JSON;

/**
 * GetAccountAnalysisResponseEntityExpenseBreakdown
 */
@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class GetAccountAnalysisResponseEntityExpenseBreakdown {
  public static final String SERIALIZED_NAME_MAXIMUM_EXPENSE = "MaximumExpense";
  @SerializedName(SERIALIZED_NAME_MAXIMUM_EXPENSE)
  private String maximumExpense;

  public static final String SERIALIZED_NAME_ATM_LOCATIONS = "atmLocations";
  @SerializedName(SERIALIZED_NAME_ATM_LOCATIONS)
  private List<String> atmLocations = null;

  public static final String SERIALIZED_NAME_AVERAGE_MONTHLY_EXPENSE_ON_AIRTIMEAND_DATA = "averageMonthlyExpenseOnAirtimeandData";
  @SerializedName(SERIALIZED_NAME_AVERAGE_MONTHLY_EXPENSE_ON_AIRTIMEAND_DATA)
  private Double averageMonthlyExpenseOnAirtimeandData;

  public static final String SERIALIZED_NAME_AVERAGE_MONTHLY_EXPENSE_ON_ATM_AND_P_O_S = "averageMonthlyExpenseOnAtmAndPOS";
  @SerializedName(SERIALIZED_NAME_AVERAGE_MONTHLY_EXPENSE_ON_ATM_AND_P_O_S)
  private Double averageMonthlyExpenseOnAtmAndPOS;

  public static final String SERIALIZED_NAME_AVERAGE_MONTHLY_EXPENSE_ON_CHARGES_AND_STAMP_DUTY = "averageMonthlyExpenseOnChargesAndStampDuty";
  @SerializedName(SERIALIZED_NAME_AVERAGE_MONTHLY_EXPENSE_ON_CHARGES_AND_STAMP_DUTY)
  private Double averageMonthlyExpenseOnChargesAndStampDuty;

  public static final String SERIALIZED_NAME_AVERAGE_MONTHLY_EXPENSE_ON_ENTERTAINMENT = "averageMonthlyExpenseOnEntertainment";
  @SerializedName(SERIALIZED_NAME_AVERAGE_MONTHLY_EXPENSE_ON_ENTERTAINMENT)
  private Double averageMonthlyExpenseOnEntertainment;

  public static final String SERIALIZED_NAME_AVERAGE_MONTHLY_EXPENSE_ON_GAMBLING = "averageMonthlyExpenseOnGambling";
  @SerializedName(SERIALIZED_NAME_AVERAGE_MONTHLY_EXPENSE_ON_GAMBLING)
  private Double averageMonthlyExpenseOnGambling;

  public static final String SERIALIZED_NAME_AVERAGE_MONTHLY_EXPENSE_ON_HEALTH = "averageMonthlyExpenseOnHealth";
  @SerializedName(SERIALIZED_NAME_AVERAGE_MONTHLY_EXPENSE_ON_HEALTH)
  private Double averageMonthlyExpenseOnHealth;

  public static final String SERIALIZED_NAME_AVERAGE_MONTHLY_EXPENSE_ON_HOSPITALITYAND_FOOD = "averageMonthlyExpenseOnHospitalityandFood";
  @SerializedName(SERIALIZED_NAME_AVERAGE_MONTHLY_EXPENSE_ON_HOSPITALITYAND_FOOD)
  private Double averageMonthlyExpenseOnHospitalityandFood;

  public static final String SERIALIZED_NAME_AVERAGE_MONTHLY_EXPENSE_ON_INSURANCE = "averageMonthlyExpenseOnInsurance";
  @SerializedName(SERIALIZED_NAME_AVERAGE_MONTHLY_EXPENSE_ON_INSURANCE)
  private Double averageMonthlyExpenseOnInsurance;

  public static final String SERIALIZED_NAME_AVERAGE_MONTHLY_EXPENSE_ON_INTERNATIONAL_TRANSACTIONS = "averageMonthlyExpenseOnInternationalTransactions";
  @SerializedName(SERIALIZED_NAME_AVERAGE_MONTHLY_EXPENSE_ON_INTERNATIONAL_TRANSACTIONS)
  private Double averageMonthlyExpenseOnInternationalTransactions;

  public static final String SERIALIZED_NAME_AVERAGE_MONTHLY_EXPENSE_ON_ONLINEAND_WEB = "averageMonthlyExpenseOnOnlineandWeb";
  @SerializedName(SERIALIZED_NAME_AVERAGE_MONTHLY_EXPENSE_ON_ONLINEAND_WEB)
  private Double averageMonthlyExpenseOnOnlineandWeb;

  public static final String SERIALIZED_NAME_AVERAGE_MONTHLY_EXPENSE_ON_RENT = "averageMonthlyExpenseOnRent";
  @SerializedName(SERIALIZED_NAME_AVERAGE_MONTHLY_EXPENSE_ON_RENT)
  private Double averageMonthlyExpenseOnRent;

  public static final String SERIALIZED_NAME_AVERAGE_MONTHLY_EXPENSE_ON_SAVINGS_AND_INVESTMENTS = "averageMonthlyExpenseOnSavingsAndInvestments";
  @SerializedName(SERIALIZED_NAME_AVERAGE_MONTHLY_EXPENSE_ON_SAVINGS_AND_INVESTMENTS)
  private Double averageMonthlyExpenseOnSavingsAndInvestments;

  public static final String SERIALIZED_NAME_AVERAGE_MONTHLY_EXPENSE_ON_TRANSFER = "averageMonthlyExpenseOnTransfer";
  @SerializedName(SERIALIZED_NAME_AVERAGE_MONTHLY_EXPENSE_ON_TRANSFER)
  private Double averageMonthlyExpenseOnTransfer;

  public static final String SERIALIZED_NAME_AVERAGE_MONTHLY_EXPENSE_ON_TRANSPORTATION = "averageMonthlyExpenseOnTransportation";
  @SerializedName(SERIALIZED_NAME_AVERAGE_MONTHLY_EXPENSE_ON_TRANSPORTATION)
  private Double averageMonthlyExpenseOnTransportation;

  public static final String SERIALIZED_NAME_AVERAGE_MONTHLY_EXPENSE_ON_U_S_S_D = "averageMonthlyExpenseOnUSSD";
  @SerializedName(SERIALIZED_NAME_AVERAGE_MONTHLY_EXPENSE_ON_U_S_S_D)
  private Double averageMonthlyExpenseOnUSSD;

  public static final String SERIALIZED_NAME_AVERAGE_MONTHLY_EXPENSE_ON_UTILITIES = "averageMonthlyExpenseOnUtilities";
  @SerializedName(SERIALIZED_NAME_AVERAGE_MONTHLY_EXPENSE_ON_UTILITIES)
  private Double averageMonthlyExpenseOnUtilities;

  public static final String SERIALIZED_NAME_AVERAGE_MONTHLY_EXPENSEON_TRAVEL = "averageMonthlyExpenseonTravel";
  @SerializedName(SERIALIZED_NAME_AVERAGE_MONTHLY_EXPENSEON_TRAVEL)
  private Double averageMonthlyExpenseonTravel;

  public static final String SERIALIZED_NAME_AVERAGE_MONTHLY_RECURRING_EXPENSES = "averageMonthlyRecurringExpenses";
  @SerializedName(SERIALIZED_NAME_AVERAGE_MONTHLY_RECURRING_EXPENSES)
  private Double averageMonthlyRecurringExpenses;

  public static final String SERIALIZED_NAME_AVERAGE_MONTHLY_TOTAL_EXPENSES = "averageMonthlyTotalExpenses";
  @SerializedName(SERIALIZED_NAME_AVERAGE_MONTHLY_TOTAL_EXPENSES)
  private Double averageMonthlyTotalExpenses;

  public static final String SERIALIZED_NAME_MINIMUM_SALARY = "minimumSalary";
  @SerializedName(SERIALIZED_NAME_MINIMUM_SALARY)
  private Double minimumSalary;

  public static final String SERIALIZED_NAME_MONTH_WITHMAXIMUM_EXPENSE = "monthWithmaximumExpense";
  @SerializedName(SERIALIZED_NAME_MONTH_WITHMAXIMUM_EXPENSE)
  private String monthWithmaximumExpense;

  public static final String SERIALIZED_NAME_MOST_FREQUENT_EXPENSE = "mostFrequentExpense";
  @SerializedName(SERIALIZED_NAME_MOST_FREQUENT_EXPENSE)
  private String mostFrequentExpense;

  public static final String SERIALIZED_NAME_MOST_FREQUENT_EXPENSE_CATEGORY = "mostFrequentExpenseCategory";
  @SerializedName(SERIALIZED_NAME_MOST_FREQUENT_EXPENSE_CATEGORY)
  private String mostFrequentExpenseCategory;

  public static final String SERIALIZED_NAME_TOTAL_EXPENSE_ON_AIRTIME_AND_DATA = "totalExpenseOnAirtimeAndData";
  @SerializedName(SERIALIZED_NAME_TOTAL_EXPENSE_ON_AIRTIME_AND_DATA)
  private Double totalExpenseOnAirtimeAndData;

  public static final String SERIALIZED_NAME_TOTAL_EXPENSE_ON_INTERNATIONAL_TRANSACTIONS = "totalExpenseOnInternationalTransactions";
  @SerializedName(SERIALIZED_NAME_TOTAL_EXPENSE_ON_INTERNATIONAL_TRANSACTIONS)
  private Double totalExpenseOnInternationalTransactions;

  public static final String SERIALIZED_NAME_TOTAL_EXPENSE_ON_SAVINGS_AND_INVESTMENTS = "totalExpenseOnSavingsAndInvestments";
  @SerializedName(SERIALIZED_NAME_TOTAL_EXPENSE_ON_SAVINGS_AND_INVESTMENTS)
  private Double totalExpenseOnSavingsAndInvestments;

  public static final String SERIALIZED_NAME_TOTAL_EXPENSE_ON_TRANSFER = "totalExpenseOnTransfer";
  @SerializedName(SERIALIZED_NAME_TOTAL_EXPENSE_ON_TRANSFER)
  private Double totalExpenseOnTransfer;

  public static final String SERIALIZED_NAME_TOTAL_EXPENSE_ON_TRANSPORTATION = "totalExpenseOnTransportation";
  @SerializedName(SERIALIZED_NAME_TOTAL_EXPENSE_ON_TRANSPORTATION)
  private Double totalExpenseOnTransportation;

  public static final String SERIALIZED_NAME_TOTAL_EXPENSE_ON_TRAVEL = "totalExpenseOnTravel";
  @SerializedName(SERIALIZED_NAME_TOTAL_EXPENSE_ON_TRAVEL)
  private Double totalExpenseOnTravel;

  public static final String SERIALIZED_NAME_TOTAL_EXPENSE_ON_U_S_S_D = "totalExpenseOnUSSD";
  @SerializedName(SERIALIZED_NAME_TOTAL_EXPENSE_ON_U_S_S_D)
  private Double totalExpenseOnUSSD;

  public static final String SERIALIZED_NAME_TOTAL_EXPENSE_ON_UTILITIES = "totalExpenseOnUtilities";
  @SerializedName(SERIALIZED_NAME_TOTAL_EXPENSE_ON_UTILITIES)
  private Double totalExpenseOnUtilities;

  public static final String SERIALIZED_NAME_TOTAL_EXPENSEON_CHARGES_AND_STAMP_DUTY = "totalExpenseonChargesAndStampDuty";
  @SerializedName(SERIALIZED_NAME_TOTAL_EXPENSEON_CHARGES_AND_STAMP_DUTY)
  private Double totalExpenseonChargesAndStampDuty;

  public static final String SERIALIZED_NAME_TOTAL_EXPENSEON_ENTERTAINMENT = "totalExpenseonEntertainment";
  @SerializedName(SERIALIZED_NAME_TOTAL_EXPENSEON_ENTERTAINMENT)
  private Double totalExpenseonEntertainment;

  public static final String SERIALIZED_NAME_TOTAL_EXPENSEON_GAMBLING = "totalExpenseonGambling";
  @SerializedName(SERIALIZED_NAME_TOTAL_EXPENSEON_GAMBLING)
  private Double totalExpenseonGambling;

  public static final String SERIALIZED_NAME_TOTAL_EXPENSEON_HEALTH = "totalExpenseonHealth";
  @SerializedName(SERIALIZED_NAME_TOTAL_EXPENSEON_HEALTH)
  private Double totalExpenseonHealth;

  public static final String SERIALIZED_NAME_TOTAL_EXPENSEON_HOSPITALITYAND_FOOD = "totalExpenseonHospitalityandFood";
  @SerializedName(SERIALIZED_NAME_TOTAL_EXPENSEON_HOSPITALITYAND_FOOD)
  private Double totalExpenseonHospitalityandFood;

  public static final String SERIALIZED_NAME_TOTAL_EXPENSEON_INSURANCE = "totalExpenseonInsurance";
  @SerializedName(SERIALIZED_NAME_TOTAL_EXPENSEON_INSURANCE)
  private Double totalExpenseonInsurance;

  public static final String SERIALIZED_NAME_TOTAL_EXPENSEON_ONLINEAND_WEB = "totalExpenseonOnlineandWeb";
  @SerializedName(SERIALIZED_NAME_TOTAL_EXPENSEON_ONLINEAND_WEB)
  private Double totalExpenseonOnlineandWeb;

  public static final String SERIALIZED_NAME_TOTAL_MONTHLY_EXPENSES = "totalMonthlyExpenses";
  @SerializedName(SERIALIZED_NAME_TOTAL_MONTHLY_EXPENSES)
  private Double totalMonthlyExpenses;

  public static final String SERIALIZED_NAME_TOTAL_RECURRING_EXPENSES = "totalRecurringExpenses";
  @SerializedName(SERIALIZED_NAME_TOTAL_RECURRING_EXPENSES)
  private Double totalRecurringExpenses;

  public GetAccountAnalysisResponseEntityExpenseBreakdown() {
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown maximumExpense(String maximumExpense) {

    
    
    
    
    this.maximumExpense = maximumExpense;
    return this;
  }

   /**
   * Get maximumExpense
   * @return maximumExpense
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "pos web pmt oluwafunmilola b aso l00ng", value = "")

  public String getMaximumExpense() {
    return maximumExpense;
  }


  public void setMaximumExpense(String maximumExpense) {

    
    
    
    this.maximumExpense = maximumExpense;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown atmLocations(List<String> atmLocations) {

    
    
    
    
    this.atmLocations = atmLocations;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown addAtmLocationsItem(String atmLocationsItem) {
    if (this.atmLocations == null) {
      this.atmLocations = new ArrayList<>();
    }
    this.atmLocations.add(atmLocationsItem);
    return this;
  }

   /**
   * Get atmLocations
   * @return atmLocations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getAtmLocations() {
    return atmLocations;
  }


  public void setAtmLocations(List<String> atmLocations) {

    
    
    
    this.atmLocations = atmLocations;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyExpenseOnAirtimeandData(Double averageMonthlyExpenseOnAirtimeandData) {

    
    
    
    
    this.averageMonthlyExpenseOnAirtimeandData = averageMonthlyExpenseOnAirtimeandData;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyExpenseOnAirtimeandData(Integer averageMonthlyExpenseOnAirtimeandData) {

    
    
    
    
    this.averageMonthlyExpenseOnAirtimeandData = averageMonthlyExpenseOnAirtimeandData.doubleValue();
    return this;
  }

   /**
   * Get averageMonthlyExpenseOnAirtimeandData
   * @return averageMonthlyExpenseOnAirtimeandData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2200", value = "")

  public Double getAverageMonthlyExpenseOnAirtimeandData() {
    return averageMonthlyExpenseOnAirtimeandData;
  }


  public void setAverageMonthlyExpenseOnAirtimeandData(Double averageMonthlyExpenseOnAirtimeandData) {

    
    
    
    this.averageMonthlyExpenseOnAirtimeandData = averageMonthlyExpenseOnAirtimeandData;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyExpenseOnAtmAndPOS(Double averageMonthlyExpenseOnAtmAndPOS) {

    
    
    
    
    this.averageMonthlyExpenseOnAtmAndPOS = averageMonthlyExpenseOnAtmAndPOS;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyExpenseOnAtmAndPOS(Integer averageMonthlyExpenseOnAtmAndPOS) {

    
    
    
    
    this.averageMonthlyExpenseOnAtmAndPOS = averageMonthlyExpenseOnAtmAndPOS.doubleValue();
    return this;
  }

   /**
   * Get averageMonthlyExpenseOnAtmAndPOS
   * @return averageMonthlyExpenseOnAtmAndPOS
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "39663.05", value = "")

  public Double getAverageMonthlyExpenseOnAtmAndPOS() {
    return averageMonthlyExpenseOnAtmAndPOS;
  }


  public void setAverageMonthlyExpenseOnAtmAndPOS(Double averageMonthlyExpenseOnAtmAndPOS) {

    
    
    
    this.averageMonthlyExpenseOnAtmAndPOS = averageMonthlyExpenseOnAtmAndPOS;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyExpenseOnChargesAndStampDuty(Double averageMonthlyExpenseOnChargesAndStampDuty) {

    
    
    
    
    this.averageMonthlyExpenseOnChargesAndStampDuty = averageMonthlyExpenseOnChargesAndStampDuty;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyExpenseOnChargesAndStampDuty(Integer averageMonthlyExpenseOnChargesAndStampDuty) {

    
    
    
    
    this.averageMonthlyExpenseOnChargesAndStampDuty = averageMonthlyExpenseOnChargesAndStampDuty.doubleValue();
    return this;
  }

   /**
   * Get averageMonthlyExpenseOnChargesAndStampDuty
   * @return averageMonthlyExpenseOnChargesAndStampDuty
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "108.88", value = "")

  public Double getAverageMonthlyExpenseOnChargesAndStampDuty() {
    return averageMonthlyExpenseOnChargesAndStampDuty;
  }


  public void setAverageMonthlyExpenseOnChargesAndStampDuty(Double averageMonthlyExpenseOnChargesAndStampDuty) {

    
    
    
    this.averageMonthlyExpenseOnChargesAndStampDuty = averageMonthlyExpenseOnChargesAndStampDuty;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyExpenseOnEntertainment(Double averageMonthlyExpenseOnEntertainment) {

    
    
    
    
    this.averageMonthlyExpenseOnEntertainment = averageMonthlyExpenseOnEntertainment;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyExpenseOnEntertainment(Integer averageMonthlyExpenseOnEntertainment) {

    
    
    
    
    this.averageMonthlyExpenseOnEntertainment = averageMonthlyExpenseOnEntertainment.doubleValue();
    return this;
  }

   /**
   * Get averageMonthlyExpenseOnEntertainment
   * @return averageMonthlyExpenseOnEntertainment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "168.46", value = "")

  public Double getAverageMonthlyExpenseOnEntertainment() {
    return averageMonthlyExpenseOnEntertainment;
  }


  public void setAverageMonthlyExpenseOnEntertainment(Double averageMonthlyExpenseOnEntertainment) {

    
    
    
    this.averageMonthlyExpenseOnEntertainment = averageMonthlyExpenseOnEntertainment;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyExpenseOnGambling(Double averageMonthlyExpenseOnGambling) {

    
    
    
    
    this.averageMonthlyExpenseOnGambling = averageMonthlyExpenseOnGambling;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyExpenseOnGambling(Integer averageMonthlyExpenseOnGambling) {

    
    
    
    
    this.averageMonthlyExpenseOnGambling = averageMonthlyExpenseOnGambling.doubleValue();
    return this;
  }

   /**
   * Get averageMonthlyExpenseOnGambling
   * @return averageMonthlyExpenseOnGambling
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Double getAverageMonthlyExpenseOnGambling() {
    return averageMonthlyExpenseOnGambling;
  }


  public void setAverageMonthlyExpenseOnGambling(Double averageMonthlyExpenseOnGambling) {

    
    
    
    this.averageMonthlyExpenseOnGambling = averageMonthlyExpenseOnGambling;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyExpenseOnHealth(Double averageMonthlyExpenseOnHealth) {

    
    
    
    
    this.averageMonthlyExpenseOnHealth = averageMonthlyExpenseOnHealth;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyExpenseOnHealth(Integer averageMonthlyExpenseOnHealth) {

    
    
    
    
    this.averageMonthlyExpenseOnHealth = averageMonthlyExpenseOnHealth.doubleValue();
    return this;
  }

   /**
   * Get averageMonthlyExpenseOnHealth
   * @return averageMonthlyExpenseOnHealth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "91.67", value = "")

  public Double getAverageMonthlyExpenseOnHealth() {
    return averageMonthlyExpenseOnHealth;
  }


  public void setAverageMonthlyExpenseOnHealth(Double averageMonthlyExpenseOnHealth) {

    
    
    
    this.averageMonthlyExpenseOnHealth = averageMonthlyExpenseOnHealth;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyExpenseOnHospitalityandFood(Double averageMonthlyExpenseOnHospitalityandFood) {

    
    
    
    
    this.averageMonthlyExpenseOnHospitalityandFood = averageMonthlyExpenseOnHospitalityandFood;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyExpenseOnHospitalityandFood(Integer averageMonthlyExpenseOnHospitalityandFood) {

    
    
    
    
    this.averageMonthlyExpenseOnHospitalityandFood = averageMonthlyExpenseOnHospitalityandFood.doubleValue();
    return this;
  }

   /**
   * Get averageMonthlyExpenseOnHospitalityandFood
   * @return averageMonthlyExpenseOnHospitalityandFood
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Double getAverageMonthlyExpenseOnHospitalityandFood() {
    return averageMonthlyExpenseOnHospitalityandFood;
  }


  public void setAverageMonthlyExpenseOnHospitalityandFood(Double averageMonthlyExpenseOnHospitalityandFood) {

    
    
    
    this.averageMonthlyExpenseOnHospitalityandFood = averageMonthlyExpenseOnHospitalityandFood;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyExpenseOnInsurance(Double averageMonthlyExpenseOnInsurance) {

    
    
    
    
    this.averageMonthlyExpenseOnInsurance = averageMonthlyExpenseOnInsurance;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyExpenseOnInsurance(Integer averageMonthlyExpenseOnInsurance) {

    
    
    
    
    this.averageMonthlyExpenseOnInsurance = averageMonthlyExpenseOnInsurance.doubleValue();
    return this;
  }

   /**
   * Get averageMonthlyExpenseOnInsurance
   * @return averageMonthlyExpenseOnInsurance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Double getAverageMonthlyExpenseOnInsurance() {
    return averageMonthlyExpenseOnInsurance;
  }


  public void setAverageMonthlyExpenseOnInsurance(Double averageMonthlyExpenseOnInsurance) {

    
    
    
    this.averageMonthlyExpenseOnInsurance = averageMonthlyExpenseOnInsurance;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyExpenseOnInternationalTransactions(Double averageMonthlyExpenseOnInternationalTransactions) {

    
    
    
    
    this.averageMonthlyExpenseOnInternationalTransactions = averageMonthlyExpenseOnInternationalTransactions;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyExpenseOnInternationalTransactions(Integer averageMonthlyExpenseOnInternationalTransactions) {

    
    
    
    
    this.averageMonthlyExpenseOnInternationalTransactions = averageMonthlyExpenseOnInternationalTransactions.doubleValue();
    return this;
  }

   /**
   * Get averageMonthlyExpenseOnInternationalTransactions
   * @return averageMonthlyExpenseOnInternationalTransactions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Double getAverageMonthlyExpenseOnInternationalTransactions() {
    return averageMonthlyExpenseOnInternationalTransactions;
  }


  public void setAverageMonthlyExpenseOnInternationalTransactions(Double averageMonthlyExpenseOnInternationalTransactions) {

    
    
    
    this.averageMonthlyExpenseOnInternationalTransactions = averageMonthlyExpenseOnInternationalTransactions;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyExpenseOnOnlineandWeb(Double averageMonthlyExpenseOnOnlineandWeb) {

    
    
    
    
    this.averageMonthlyExpenseOnOnlineandWeb = averageMonthlyExpenseOnOnlineandWeb;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyExpenseOnOnlineandWeb(Integer averageMonthlyExpenseOnOnlineandWeb) {

    
    
    
    
    this.averageMonthlyExpenseOnOnlineandWeb = averageMonthlyExpenseOnOnlineandWeb.doubleValue();
    return this;
  }

   /**
   * Get averageMonthlyExpenseOnOnlineandWeb
   * @return averageMonthlyExpenseOnOnlineandWeb
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "24955.55", value = "")

  public Double getAverageMonthlyExpenseOnOnlineandWeb() {
    return averageMonthlyExpenseOnOnlineandWeb;
  }


  public void setAverageMonthlyExpenseOnOnlineandWeb(Double averageMonthlyExpenseOnOnlineandWeb) {

    
    
    
    this.averageMonthlyExpenseOnOnlineandWeb = averageMonthlyExpenseOnOnlineandWeb;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyExpenseOnRent(Double averageMonthlyExpenseOnRent) {

    
    
    
    
    this.averageMonthlyExpenseOnRent = averageMonthlyExpenseOnRent;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyExpenseOnRent(Integer averageMonthlyExpenseOnRent) {

    
    
    
    
    this.averageMonthlyExpenseOnRent = averageMonthlyExpenseOnRent.doubleValue();
    return this;
  }

   /**
   * Get averageMonthlyExpenseOnRent
   * @return averageMonthlyExpenseOnRent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Double getAverageMonthlyExpenseOnRent() {
    return averageMonthlyExpenseOnRent;
  }


  public void setAverageMonthlyExpenseOnRent(Double averageMonthlyExpenseOnRent) {

    
    
    
    this.averageMonthlyExpenseOnRent = averageMonthlyExpenseOnRent;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyExpenseOnSavingsAndInvestments(Double averageMonthlyExpenseOnSavingsAndInvestments) {

    
    
    
    
    this.averageMonthlyExpenseOnSavingsAndInvestments = averageMonthlyExpenseOnSavingsAndInvestments;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyExpenseOnSavingsAndInvestments(Integer averageMonthlyExpenseOnSavingsAndInvestments) {

    
    
    
    
    this.averageMonthlyExpenseOnSavingsAndInvestments = averageMonthlyExpenseOnSavingsAndInvestments.doubleValue();
    return this;
  }

   /**
   * Get averageMonthlyExpenseOnSavingsAndInvestments
   * @return averageMonthlyExpenseOnSavingsAndInvestments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Double getAverageMonthlyExpenseOnSavingsAndInvestments() {
    return averageMonthlyExpenseOnSavingsAndInvestments;
  }


  public void setAverageMonthlyExpenseOnSavingsAndInvestments(Double averageMonthlyExpenseOnSavingsAndInvestments) {

    
    
    
    this.averageMonthlyExpenseOnSavingsAndInvestments = averageMonthlyExpenseOnSavingsAndInvestments;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyExpenseOnTransfer(Double averageMonthlyExpenseOnTransfer) {

    
    
    
    
    this.averageMonthlyExpenseOnTransfer = averageMonthlyExpenseOnTransfer;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyExpenseOnTransfer(Integer averageMonthlyExpenseOnTransfer) {

    
    
    
    
    this.averageMonthlyExpenseOnTransfer = averageMonthlyExpenseOnTransfer.doubleValue();
    return this;
  }

   /**
   * Get averageMonthlyExpenseOnTransfer
   * @return averageMonthlyExpenseOnTransfer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "11692.5", value = "")

  public Double getAverageMonthlyExpenseOnTransfer() {
    return averageMonthlyExpenseOnTransfer;
  }


  public void setAverageMonthlyExpenseOnTransfer(Double averageMonthlyExpenseOnTransfer) {

    
    
    
    this.averageMonthlyExpenseOnTransfer = averageMonthlyExpenseOnTransfer;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyExpenseOnTransportation(Double averageMonthlyExpenseOnTransportation) {

    
    
    
    
    this.averageMonthlyExpenseOnTransportation = averageMonthlyExpenseOnTransportation;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyExpenseOnTransportation(Integer averageMonthlyExpenseOnTransportation) {

    
    
    
    
    this.averageMonthlyExpenseOnTransportation = averageMonthlyExpenseOnTransportation.doubleValue();
    return this;
  }

   /**
   * Get averageMonthlyExpenseOnTransportation
   * @return averageMonthlyExpenseOnTransportation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Double getAverageMonthlyExpenseOnTransportation() {
    return averageMonthlyExpenseOnTransportation;
  }


  public void setAverageMonthlyExpenseOnTransportation(Double averageMonthlyExpenseOnTransportation) {

    
    
    
    this.averageMonthlyExpenseOnTransportation = averageMonthlyExpenseOnTransportation;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyExpenseOnUSSD(Double averageMonthlyExpenseOnUSSD) {

    
    
    
    
    this.averageMonthlyExpenseOnUSSD = averageMonthlyExpenseOnUSSD;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyExpenseOnUSSD(Integer averageMonthlyExpenseOnUSSD) {

    
    
    
    
    this.averageMonthlyExpenseOnUSSD = averageMonthlyExpenseOnUSSD.doubleValue();
    return this;
  }

   /**
   * Get averageMonthlyExpenseOnUSSD
   * @return averageMonthlyExpenseOnUSSD
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "333.33", value = "")

  public Double getAverageMonthlyExpenseOnUSSD() {
    return averageMonthlyExpenseOnUSSD;
  }


  public void setAverageMonthlyExpenseOnUSSD(Double averageMonthlyExpenseOnUSSD) {

    
    
    
    this.averageMonthlyExpenseOnUSSD = averageMonthlyExpenseOnUSSD;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyExpenseOnUtilities(Double averageMonthlyExpenseOnUtilities) {

    
    
    
    
    this.averageMonthlyExpenseOnUtilities = averageMonthlyExpenseOnUtilities;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyExpenseOnUtilities(Integer averageMonthlyExpenseOnUtilities) {

    
    
    
    
    this.averageMonthlyExpenseOnUtilities = averageMonthlyExpenseOnUtilities.doubleValue();
    return this;
  }

   /**
   * Get averageMonthlyExpenseOnUtilities
   * @return averageMonthlyExpenseOnUtilities
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Double getAverageMonthlyExpenseOnUtilities() {
    return averageMonthlyExpenseOnUtilities;
  }


  public void setAverageMonthlyExpenseOnUtilities(Double averageMonthlyExpenseOnUtilities) {

    
    
    
    this.averageMonthlyExpenseOnUtilities = averageMonthlyExpenseOnUtilities;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyExpenseonTravel(Double averageMonthlyExpenseonTravel) {

    
    
    
    
    this.averageMonthlyExpenseonTravel = averageMonthlyExpenseonTravel;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyExpenseonTravel(Integer averageMonthlyExpenseonTravel) {

    
    
    
    
    this.averageMonthlyExpenseonTravel = averageMonthlyExpenseonTravel.doubleValue();
    return this;
  }

   /**
   * Get averageMonthlyExpenseonTravel
   * @return averageMonthlyExpenseonTravel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Double getAverageMonthlyExpenseonTravel() {
    return averageMonthlyExpenseonTravel;
  }


  public void setAverageMonthlyExpenseonTravel(Double averageMonthlyExpenseonTravel) {

    
    
    
    this.averageMonthlyExpenseonTravel = averageMonthlyExpenseonTravel;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyRecurringExpenses(Double averageMonthlyRecurringExpenses) {

    
    
    
    
    this.averageMonthlyRecurringExpenses = averageMonthlyRecurringExpenses;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyRecurringExpenses(Integer averageMonthlyRecurringExpenses) {

    
    
    
    
    this.averageMonthlyRecurringExpenses = averageMonthlyRecurringExpenses.doubleValue();
    return this;
  }

   /**
   * Get averageMonthlyRecurringExpenses
   * @return averageMonthlyRecurringExpenses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Double getAverageMonthlyRecurringExpenses() {
    return averageMonthlyRecurringExpenses;
  }


  public void setAverageMonthlyRecurringExpenses(Double averageMonthlyRecurringExpenses) {

    
    
    
    this.averageMonthlyRecurringExpenses = averageMonthlyRecurringExpenses;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyTotalExpenses(Double averageMonthlyTotalExpenses) {

    
    
    
    
    this.averageMonthlyTotalExpenses = averageMonthlyTotalExpenses;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown averageMonthlyTotalExpenses(Integer averageMonthlyTotalExpenses) {

    
    
    
    
    this.averageMonthlyTotalExpenses = averageMonthlyTotalExpenses.doubleValue();
    return this;
  }

   /**
   * Get averageMonthlyTotalExpenses
   * @return averageMonthlyTotalExpenses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "53555.55", value = "")

  public Double getAverageMonthlyTotalExpenses() {
    return averageMonthlyTotalExpenses;
  }


  public void setAverageMonthlyTotalExpenses(Double averageMonthlyTotalExpenses) {

    
    
    
    this.averageMonthlyTotalExpenses = averageMonthlyTotalExpenses;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown minimumSalary(Double minimumSalary) {

    
    
    
    
    this.minimumSalary = minimumSalary;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown minimumSalary(Integer minimumSalary) {

    
    
    
    
    this.minimumSalary = minimumSalary.doubleValue();
    return this;
  }

   /**
   * Get minimumSalary
   * @return minimumSalary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "653.25", value = "")

  public Double getMinimumSalary() {
    return minimumSalary;
  }


  public void setMinimumSalary(Double minimumSalary) {

    
    
    
    this.minimumSalary = minimumSalary;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown monthWithmaximumExpense(String monthWithmaximumExpense) {

    
    
    
    
    this.monthWithmaximumExpense = monthWithmaximumExpense;
    return this;
  }

   /**
   * Get monthWithmaximumExpense
   * @return monthWithmaximumExpense
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2/2022", value = "")

  public String getMonthWithmaximumExpense() {
    return monthWithmaximumExpense;
  }


  public void setMonthWithmaximumExpense(String monthWithmaximumExpense) {

    
    
    
    this.monthWithmaximumExpense = monthWithmaximumExpense;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown mostFrequentExpense(String mostFrequentExpense) {

    
    
    
    
    this.mostFrequentExpense = mostFrequentExpense;
    return this;
  }

   /**
   * Get mostFrequentExpense
   * @return mostFrequentExpense
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "atm_and_pos_transactions", value = "")

  public String getMostFrequentExpense() {
    return mostFrequentExpense;
  }


  public void setMostFrequentExpense(String mostFrequentExpense) {

    
    
    
    this.mostFrequentExpense = mostFrequentExpense;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown mostFrequentExpenseCategory(String mostFrequentExpenseCategory) {

    
    
    
    
    this.mostFrequentExpenseCategory = mostFrequentExpenseCategory;
    return this;
  }

   /**
   * Get mostFrequentExpenseCategory
   * @return mostFrequentExpenseCategory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "atm_and_pos_transactions", value = "")

  public String getMostFrequentExpenseCategory() {
    return mostFrequentExpenseCategory;
  }


  public void setMostFrequentExpenseCategory(String mostFrequentExpenseCategory) {

    
    
    
    this.mostFrequentExpenseCategory = mostFrequentExpenseCategory;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown totalExpenseOnAirtimeAndData(Double totalExpenseOnAirtimeAndData) {

    
    
    
    
    this.totalExpenseOnAirtimeAndData = totalExpenseOnAirtimeAndData;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown totalExpenseOnAirtimeAndData(Integer totalExpenseOnAirtimeAndData) {

    
    
    
    
    this.totalExpenseOnAirtimeAndData = totalExpenseOnAirtimeAndData.doubleValue();
    return this;
  }

   /**
   * Get totalExpenseOnAirtimeAndData
   * @return totalExpenseOnAirtimeAndData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "13200", value = "")

  public Double getTotalExpenseOnAirtimeAndData() {
    return totalExpenseOnAirtimeAndData;
  }


  public void setTotalExpenseOnAirtimeAndData(Double totalExpenseOnAirtimeAndData) {

    
    
    
    this.totalExpenseOnAirtimeAndData = totalExpenseOnAirtimeAndData;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown totalExpenseOnInternationalTransactions(Double totalExpenseOnInternationalTransactions) {

    
    
    
    
    this.totalExpenseOnInternationalTransactions = totalExpenseOnInternationalTransactions;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown totalExpenseOnInternationalTransactions(Integer totalExpenseOnInternationalTransactions) {

    
    
    
    
    this.totalExpenseOnInternationalTransactions = totalExpenseOnInternationalTransactions.doubleValue();
    return this;
  }

   /**
   * Get totalExpenseOnInternationalTransactions
   * @return totalExpenseOnInternationalTransactions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Double getTotalExpenseOnInternationalTransactions() {
    return totalExpenseOnInternationalTransactions;
  }


  public void setTotalExpenseOnInternationalTransactions(Double totalExpenseOnInternationalTransactions) {

    
    
    
    this.totalExpenseOnInternationalTransactions = totalExpenseOnInternationalTransactions;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown totalExpenseOnSavingsAndInvestments(Double totalExpenseOnSavingsAndInvestments) {

    
    
    
    
    this.totalExpenseOnSavingsAndInvestments = totalExpenseOnSavingsAndInvestments;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown totalExpenseOnSavingsAndInvestments(Integer totalExpenseOnSavingsAndInvestments) {

    
    
    
    
    this.totalExpenseOnSavingsAndInvestments = totalExpenseOnSavingsAndInvestments.doubleValue();
    return this;
  }

   /**
   * Get totalExpenseOnSavingsAndInvestments
   * @return totalExpenseOnSavingsAndInvestments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Double getTotalExpenseOnSavingsAndInvestments() {
    return totalExpenseOnSavingsAndInvestments;
  }


  public void setTotalExpenseOnSavingsAndInvestments(Double totalExpenseOnSavingsAndInvestments) {

    
    
    
    this.totalExpenseOnSavingsAndInvestments = totalExpenseOnSavingsAndInvestments;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown totalExpenseOnTransfer(Double totalExpenseOnTransfer) {

    
    
    
    
    this.totalExpenseOnTransfer = totalExpenseOnTransfer;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown totalExpenseOnTransfer(Integer totalExpenseOnTransfer) {

    
    
    
    
    this.totalExpenseOnTransfer = totalExpenseOnTransfer.doubleValue();
    return this;
  }

   /**
   * Get totalExpenseOnTransfer
   * @return totalExpenseOnTransfer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "70155.02", value = "")

  public Double getTotalExpenseOnTransfer() {
    return totalExpenseOnTransfer;
  }


  public void setTotalExpenseOnTransfer(Double totalExpenseOnTransfer) {

    
    
    
    this.totalExpenseOnTransfer = totalExpenseOnTransfer;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown totalExpenseOnTransportation(Double totalExpenseOnTransportation) {

    
    
    
    
    this.totalExpenseOnTransportation = totalExpenseOnTransportation;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown totalExpenseOnTransportation(Integer totalExpenseOnTransportation) {

    
    
    
    
    this.totalExpenseOnTransportation = totalExpenseOnTransportation.doubleValue();
    return this;
  }

   /**
   * Get totalExpenseOnTransportation
   * @return totalExpenseOnTransportation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Double getTotalExpenseOnTransportation() {
    return totalExpenseOnTransportation;
  }


  public void setTotalExpenseOnTransportation(Double totalExpenseOnTransportation) {

    
    
    
    this.totalExpenseOnTransportation = totalExpenseOnTransportation;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown totalExpenseOnTravel(Double totalExpenseOnTravel) {

    
    
    
    
    this.totalExpenseOnTravel = totalExpenseOnTravel;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown totalExpenseOnTravel(Integer totalExpenseOnTravel) {

    
    
    
    
    this.totalExpenseOnTravel = totalExpenseOnTravel.doubleValue();
    return this;
  }

   /**
   * Get totalExpenseOnTravel
   * @return totalExpenseOnTravel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Double getTotalExpenseOnTravel() {
    return totalExpenseOnTravel;
  }


  public void setTotalExpenseOnTravel(Double totalExpenseOnTravel) {

    
    
    
    this.totalExpenseOnTravel = totalExpenseOnTravel;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown totalExpenseOnUSSD(Double totalExpenseOnUSSD) {

    
    
    
    
    this.totalExpenseOnUSSD = totalExpenseOnUSSD;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown totalExpenseOnUSSD(Integer totalExpenseOnUSSD) {

    
    
    
    
    this.totalExpenseOnUSSD = totalExpenseOnUSSD.doubleValue();
    return this;
  }

   /**
   * Get totalExpenseOnUSSD
   * @return totalExpenseOnUSSD
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2000", value = "")

  public Double getTotalExpenseOnUSSD() {
    return totalExpenseOnUSSD;
  }


  public void setTotalExpenseOnUSSD(Double totalExpenseOnUSSD) {

    
    
    
    this.totalExpenseOnUSSD = totalExpenseOnUSSD;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown totalExpenseOnUtilities(Double totalExpenseOnUtilities) {

    
    
    
    
    this.totalExpenseOnUtilities = totalExpenseOnUtilities;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown totalExpenseOnUtilities(Integer totalExpenseOnUtilities) {

    
    
    
    
    this.totalExpenseOnUtilities = totalExpenseOnUtilities.doubleValue();
    return this;
  }

   /**
   * Get totalExpenseOnUtilities
   * @return totalExpenseOnUtilities
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Double getTotalExpenseOnUtilities() {
    return totalExpenseOnUtilities;
  }


  public void setTotalExpenseOnUtilities(Double totalExpenseOnUtilities) {

    
    
    
    this.totalExpenseOnUtilities = totalExpenseOnUtilities;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown totalExpenseonChargesAndStampDuty(Double totalExpenseonChargesAndStampDuty) {

    
    
    
    
    this.totalExpenseonChargesAndStampDuty = totalExpenseonChargesAndStampDuty;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown totalExpenseonChargesAndStampDuty(Integer totalExpenseonChargesAndStampDuty) {

    
    
    
    
    this.totalExpenseonChargesAndStampDuty = totalExpenseonChargesAndStampDuty.doubleValue();
    return this;
  }

   /**
   * Get totalExpenseonChargesAndStampDuty
   * @return totalExpenseonChargesAndStampDuty
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "237978.3", value = "")

  public Double getTotalExpenseonChargesAndStampDuty() {
    return totalExpenseonChargesAndStampDuty;
  }


  public void setTotalExpenseonChargesAndStampDuty(Double totalExpenseonChargesAndStampDuty) {

    
    
    
    this.totalExpenseonChargesAndStampDuty = totalExpenseonChargesAndStampDuty;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown totalExpenseonEntertainment(Double totalExpenseonEntertainment) {

    
    
    
    
    this.totalExpenseonEntertainment = totalExpenseonEntertainment;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown totalExpenseonEntertainment(Integer totalExpenseonEntertainment) {

    
    
    
    
    this.totalExpenseonEntertainment = totalExpenseonEntertainment.doubleValue();
    return this;
  }

   /**
   * Get totalExpenseonEntertainment
   * @return totalExpenseonEntertainment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1010.75", value = "")

  public Double getTotalExpenseonEntertainment() {
    return totalExpenseonEntertainment;
  }


  public void setTotalExpenseonEntertainment(Double totalExpenseonEntertainment) {

    
    
    
    this.totalExpenseonEntertainment = totalExpenseonEntertainment;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown totalExpenseonGambling(Double totalExpenseonGambling) {

    
    
    
    
    this.totalExpenseonGambling = totalExpenseonGambling;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown totalExpenseonGambling(Integer totalExpenseonGambling) {

    
    
    
    
    this.totalExpenseonGambling = totalExpenseonGambling.doubleValue();
    return this;
  }

   /**
   * Get totalExpenseonGambling
   * @return totalExpenseonGambling
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Double getTotalExpenseonGambling() {
    return totalExpenseonGambling;
  }


  public void setTotalExpenseonGambling(Double totalExpenseonGambling) {

    
    
    
    this.totalExpenseonGambling = totalExpenseonGambling;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown totalExpenseonHealth(Double totalExpenseonHealth) {

    
    
    
    
    this.totalExpenseonHealth = totalExpenseonHealth;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown totalExpenseonHealth(Integer totalExpenseonHealth) {

    
    
    
    
    this.totalExpenseonHealth = totalExpenseonHealth.doubleValue();
    return this;
  }

   /**
   * Get totalExpenseonHealth
   * @return totalExpenseonHealth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "550", value = "")

  public Double getTotalExpenseonHealth() {
    return totalExpenseonHealth;
  }


  public void setTotalExpenseonHealth(Double totalExpenseonHealth) {

    
    
    
    this.totalExpenseonHealth = totalExpenseonHealth;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown totalExpenseonHospitalityandFood(Double totalExpenseonHospitalityandFood) {

    
    
    
    
    this.totalExpenseonHospitalityandFood = totalExpenseonHospitalityandFood;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown totalExpenseonHospitalityandFood(Integer totalExpenseonHospitalityandFood) {

    
    
    
    
    this.totalExpenseonHospitalityandFood = totalExpenseonHospitalityandFood.doubleValue();
    return this;
  }

   /**
   * Get totalExpenseonHospitalityandFood
   * @return totalExpenseonHospitalityandFood
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Double getTotalExpenseonHospitalityandFood() {
    return totalExpenseonHospitalityandFood;
  }


  public void setTotalExpenseonHospitalityandFood(Double totalExpenseonHospitalityandFood) {

    
    
    
    this.totalExpenseonHospitalityandFood = totalExpenseonHospitalityandFood;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown totalExpenseonInsurance(Double totalExpenseonInsurance) {

    
    
    
    
    this.totalExpenseonInsurance = totalExpenseonInsurance;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown totalExpenseonInsurance(Integer totalExpenseonInsurance) {

    
    
    
    
    this.totalExpenseonInsurance = totalExpenseonInsurance.doubleValue();
    return this;
  }

   /**
   * Get totalExpenseonInsurance
   * @return totalExpenseonInsurance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Double getTotalExpenseonInsurance() {
    return totalExpenseonInsurance;
  }


  public void setTotalExpenseonInsurance(Double totalExpenseonInsurance) {

    
    
    
    this.totalExpenseonInsurance = totalExpenseonInsurance;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown totalExpenseonOnlineandWeb(Double totalExpenseonOnlineandWeb) {

    
    
    
    
    this.totalExpenseonOnlineandWeb = totalExpenseonOnlineandWeb;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown totalExpenseonOnlineandWeb(Integer totalExpenseonOnlineandWeb) {

    
    
    
    
    this.totalExpenseonOnlineandWeb = totalExpenseonOnlineandWeb.doubleValue();
    return this;
  }

   /**
   * Get totalExpenseonOnlineandWeb
   * @return totalExpenseonOnlineandWeb
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "149733.3", value = "")

  public Double getTotalExpenseonOnlineandWeb() {
    return totalExpenseonOnlineandWeb;
  }


  public void setTotalExpenseonOnlineandWeb(Double totalExpenseonOnlineandWeb) {

    
    
    
    this.totalExpenseonOnlineandWeb = totalExpenseonOnlineandWeb;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown totalMonthlyExpenses(Double totalMonthlyExpenses) {

    
    
    
    
    this.totalMonthlyExpenses = totalMonthlyExpenses;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown totalMonthlyExpenses(Integer totalMonthlyExpenses) {

    
    
    
    
    this.totalMonthlyExpenses = totalMonthlyExpenses.doubleValue();
    return this;
  }

   /**
   * Get totalMonthlyExpenses
   * @return totalMonthlyExpenses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "321333.32", value = "")

  public Double getTotalMonthlyExpenses() {
    return totalMonthlyExpenses;
  }


  public void setTotalMonthlyExpenses(Double totalMonthlyExpenses) {

    
    
    
    this.totalMonthlyExpenses = totalMonthlyExpenses;
  }


  public GetAccountAnalysisResponseEntityExpenseBreakdown totalRecurringExpenses(Double totalRecurringExpenses) {

    
    
    
    
    this.totalRecurringExpenses = totalRecurringExpenses;
    return this;
  }

  public GetAccountAnalysisResponseEntityExpenseBreakdown totalRecurringExpenses(Integer totalRecurringExpenses) {

    
    
    
    
    this.totalRecurringExpenses = totalRecurringExpenses.doubleValue();
    return this;
  }

   /**
   * Get totalRecurringExpenses
   * @return totalRecurringExpenses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Double getTotalRecurringExpenses() {
    return totalRecurringExpenses;
  }


  public void setTotalRecurringExpenses(Double totalRecurringExpenses) {

    
    
    
    this.totalRecurringExpenses = totalRecurringExpenses;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the GetAccountAnalysisResponseEntityExpenseBreakdown instance itself
   */
  public GetAccountAnalysisResponseEntityExpenseBreakdown putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetAccountAnalysisResponseEntityExpenseBreakdown getAccountAnalysisResponseEntityExpenseBreakdown = (GetAccountAnalysisResponseEntityExpenseBreakdown) o;
    return Objects.equals(this.maximumExpense, getAccountAnalysisResponseEntityExpenseBreakdown.maximumExpense) &&
        Objects.equals(this.atmLocations, getAccountAnalysisResponseEntityExpenseBreakdown.atmLocations) &&
        Objects.equals(this.averageMonthlyExpenseOnAirtimeandData, getAccountAnalysisResponseEntityExpenseBreakdown.averageMonthlyExpenseOnAirtimeandData) &&
        Objects.equals(this.averageMonthlyExpenseOnAtmAndPOS, getAccountAnalysisResponseEntityExpenseBreakdown.averageMonthlyExpenseOnAtmAndPOS) &&
        Objects.equals(this.averageMonthlyExpenseOnChargesAndStampDuty, getAccountAnalysisResponseEntityExpenseBreakdown.averageMonthlyExpenseOnChargesAndStampDuty) &&
        Objects.equals(this.averageMonthlyExpenseOnEntertainment, getAccountAnalysisResponseEntityExpenseBreakdown.averageMonthlyExpenseOnEntertainment) &&
        Objects.equals(this.averageMonthlyExpenseOnGambling, getAccountAnalysisResponseEntityExpenseBreakdown.averageMonthlyExpenseOnGambling) &&
        Objects.equals(this.averageMonthlyExpenseOnHealth, getAccountAnalysisResponseEntityExpenseBreakdown.averageMonthlyExpenseOnHealth) &&
        Objects.equals(this.averageMonthlyExpenseOnHospitalityandFood, getAccountAnalysisResponseEntityExpenseBreakdown.averageMonthlyExpenseOnHospitalityandFood) &&
        Objects.equals(this.averageMonthlyExpenseOnInsurance, getAccountAnalysisResponseEntityExpenseBreakdown.averageMonthlyExpenseOnInsurance) &&
        Objects.equals(this.averageMonthlyExpenseOnInternationalTransactions, getAccountAnalysisResponseEntityExpenseBreakdown.averageMonthlyExpenseOnInternationalTransactions) &&
        Objects.equals(this.averageMonthlyExpenseOnOnlineandWeb, getAccountAnalysisResponseEntityExpenseBreakdown.averageMonthlyExpenseOnOnlineandWeb) &&
        Objects.equals(this.averageMonthlyExpenseOnRent, getAccountAnalysisResponseEntityExpenseBreakdown.averageMonthlyExpenseOnRent) &&
        Objects.equals(this.averageMonthlyExpenseOnSavingsAndInvestments, getAccountAnalysisResponseEntityExpenseBreakdown.averageMonthlyExpenseOnSavingsAndInvestments) &&
        Objects.equals(this.averageMonthlyExpenseOnTransfer, getAccountAnalysisResponseEntityExpenseBreakdown.averageMonthlyExpenseOnTransfer) &&
        Objects.equals(this.averageMonthlyExpenseOnTransportation, getAccountAnalysisResponseEntityExpenseBreakdown.averageMonthlyExpenseOnTransportation) &&
        Objects.equals(this.averageMonthlyExpenseOnUSSD, getAccountAnalysisResponseEntityExpenseBreakdown.averageMonthlyExpenseOnUSSD) &&
        Objects.equals(this.averageMonthlyExpenseOnUtilities, getAccountAnalysisResponseEntityExpenseBreakdown.averageMonthlyExpenseOnUtilities) &&
        Objects.equals(this.averageMonthlyExpenseonTravel, getAccountAnalysisResponseEntityExpenseBreakdown.averageMonthlyExpenseonTravel) &&
        Objects.equals(this.averageMonthlyRecurringExpenses, getAccountAnalysisResponseEntityExpenseBreakdown.averageMonthlyRecurringExpenses) &&
        Objects.equals(this.averageMonthlyTotalExpenses, getAccountAnalysisResponseEntityExpenseBreakdown.averageMonthlyTotalExpenses) &&
        Objects.equals(this.minimumSalary, getAccountAnalysisResponseEntityExpenseBreakdown.minimumSalary) &&
        Objects.equals(this.monthWithmaximumExpense, getAccountAnalysisResponseEntityExpenseBreakdown.monthWithmaximumExpense) &&
        Objects.equals(this.mostFrequentExpense, getAccountAnalysisResponseEntityExpenseBreakdown.mostFrequentExpense) &&
        Objects.equals(this.mostFrequentExpenseCategory, getAccountAnalysisResponseEntityExpenseBreakdown.mostFrequentExpenseCategory) &&
        Objects.equals(this.totalExpenseOnAirtimeAndData, getAccountAnalysisResponseEntityExpenseBreakdown.totalExpenseOnAirtimeAndData) &&
        Objects.equals(this.totalExpenseOnInternationalTransactions, getAccountAnalysisResponseEntityExpenseBreakdown.totalExpenseOnInternationalTransactions) &&
        Objects.equals(this.totalExpenseOnSavingsAndInvestments, getAccountAnalysisResponseEntityExpenseBreakdown.totalExpenseOnSavingsAndInvestments) &&
        Objects.equals(this.totalExpenseOnTransfer, getAccountAnalysisResponseEntityExpenseBreakdown.totalExpenseOnTransfer) &&
        Objects.equals(this.totalExpenseOnTransportation, getAccountAnalysisResponseEntityExpenseBreakdown.totalExpenseOnTransportation) &&
        Objects.equals(this.totalExpenseOnTravel, getAccountAnalysisResponseEntityExpenseBreakdown.totalExpenseOnTravel) &&
        Objects.equals(this.totalExpenseOnUSSD, getAccountAnalysisResponseEntityExpenseBreakdown.totalExpenseOnUSSD) &&
        Objects.equals(this.totalExpenseOnUtilities, getAccountAnalysisResponseEntityExpenseBreakdown.totalExpenseOnUtilities) &&
        Objects.equals(this.totalExpenseonChargesAndStampDuty, getAccountAnalysisResponseEntityExpenseBreakdown.totalExpenseonChargesAndStampDuty) &&
        Objects.equals(this.totalExpenseonEntertainment, getAccountAnalysisResponseEntityExpenseBreakdown.totalExpenseonEntertainment) &&
        Objects.equals(this.totalExpenseonGambling, getAccountAnalysisResponseEntityExpenseBreakdown.totalExpenseonGambling) &&
        Objects.equals(this.totalExpenseonHealth, getAccountAnalysisResponseEntityExpenseBreakdown.totalExpenseonHealth) &&
        Objects.equals(this.totalExpenseonHospitalityandFood, getAccountAnalysisResponseEntityExpenseBreakdown.totalExpenseonHospitalityandFood) &&
        Objects.equals(this.totalExpenseonInsurance, getAccountAnalysisResponseEntityExpenseBreakdown.totalExpenseonInsurance) &&
        Objects.equals(this.totalExpenseonOnlineandWeb, getAccountAnalysisResponseEntityExpenseBreakdown.totalExpenseonOnlineandWeb) &&
        Objects.equals(this.totalMonthlyExpenses, getAccountAnalysisResponseEntityExpenseBreakdown.totalMonthlyExpenses) &&
        Objects.equals(this.totalRecurringExpenses, getAccountAnalysisResponseEntityExpenseBreakdown.totalRecurringExpenses)&&
        Objects.equals(this.additionalProperties, getAccountAnalysisResponseEntityExpenseBreakdown.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(maximumExpense, atmLocations, averageMonthlyExpenseOnAirtimeandData, averageMonthlyExpenseOnAtmAndPOS, averageMonthlyExpenseOnChargesAndStampDuty, averageMonthlyExpenseOnEntertainment, averageMonthlyExpenseOnGambling, averageMonthlyExpenseOnHealth, averageMonthlyExpenseOnHospitalityandFood, averageMonthlyExpenseOnInsurance, averageMonthlyExpenseOnInternationalTransactions, averageMonthlyExpenseOnOnlineandWeb, averageMonthlyExpenseOnRent, averageMonthlyExpenseOnSavingsAndInvestments, averageMonthlyExpenseOnTransfer, averageMonthlyExpenseOnTransportation, averageMonthlyExpenseOnUSSD, averageMonthlyExpenseOnUtilities, averageMonthlyExpenseonTravel, averageMonthlyRecurringExpenses, averageMonthlyTotalExpenses, minimumSalary, monthWithmaximumExpense, mostFrequentExpense, mostFrequentExpenseCategory, totalExpenseOnAirtimeAndData, totalExpenseOnInternationalTransactions, totalExpenseOnSavingsAndInvestments, totalExpenseOnTransfer, totalExpenseOnTransportation, totalExpenseOnTravel, totalExpenseOnUSSD, totalExpenseOnUtilities, totalExpenseonChargesAndStampDuty, totalExpenseonEntertainment, totalExpenseonGambling, totalExpenseonHealth, totalExpenseonHospitalityandFood, totalExpenseonInsurance, totalExpenseonOnlineandWeb, totalMonthlyExpenses, totalRecurringExpenses, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetAccountAnalysisResponseEntityExpenseBreakdown {\n");
    sb.append("    maximumExpense: ").append(toIndentedString(maximumExpense)).append("\n");
    sb.append("    atmLocations: ").append(toIndentedString(atmLocations)).append("\n");
    sb.append("    averageMonthlyExpenseOnAirtimeandData: ").append(toIndentedString(averageMonthlyExpenseOnAirtimeandData)).append("\n");
    sb.append("    averageMonthlyExpenseOnAtmAndPOS: ").append(toIndentedString(averageMonthlyExpenseOnAtmAndPOS)).append("\n");
    sb.append("    averageMonthlyExpenseOnChargesAndStampDuty: ").append(toIndentedString(averageMonthlyExpenseOnChargesAndStampDuty)).append("\n");
    sb.append("    averageMonthlyExpenseOnEntertainment: ").append(toIndentedString(averageMonthlyExpenseOnEntertainment)).append("\n");
    sb.append("    averageMonthlyExpenseOnGambling: ").append(toIndentedString(averageMonthlyExpenseOnGambling)).append("\n");
    sb.append("    averageMonthlyExpenseOnHealth: ").append(toIndentedString(averageMonthlyExpenseOnHealth)).append("\n");
    sb.append("    averageMonthlyExpenseOnHospitalityandFood: ").append(toIndentedString(averageMonthlyExpenseOnHospitalityandFood)).append("\n");
    sb.append("    averageMonthlyExpenseOnInsurance: ").append(toIndentedString(averageMonthlyExpenseOnInsurance)).append("\n");
    sb.append("    averageMonthlyExpenseOnInternationalTransactions: ").append(toIndentedString(averageMonthlyExpenseOnInternationalTransactions)).append("\n");
    sb.append("    averageMonthlyExpenseOnOnlineandWeb: ").append(toIndentedString(averageMonthlyExpenseOnOnlineandWeb)).append("\n");
    sb.append("    averageMonthlyExpenseOnRent: ").append(toIndentedString(averageMonthlyExpenseOnRent)).append("\n");
    sb.append("    averageMonthlyExpenseOnSavingsAndInvestments: ").append(toIndentedString(averageMonthlyExpenseOnSavingsAndInvestments)).append("\n");
    sb.append("    averageMonthlyExpenseOnTransfer: ").append(toIndentedString(averageMonthlyExpenseOnTransfer)).append("\n");
    sb.append("    averageMonthlyExpenseOnTransportation: ").append(toIndentedString(averageMonthlyExpenseOnTransportation)).append("\n");
    sb.append("    averageMonthlyExpenseOnUSSD: ").append(toIndentedString(averageMonthlyExpenseOnUSSD)).append("\n");
    sb.append("    averageMonthlyExpenseOnUtilities: ").append(toIndentedString(averageMonthlyExpenseOnUtilities)).append("\n");
    sb.append("    averageMonthlyExpenseonTravel: ").append(toIndentedString(averageMonthlyExpenseonTravel)).append("\n");
    sb.append("    averageMonthlyRecurringExpenses: ").append(toIndentedString(averageMonthlyRecurringExpenses)).append("\n");
    sb.append("    averageMonthlyTotalExpenses: ").append(toIndentedString(averageMonthlyTotalExpenses)).append("\n");
    sb.append("    minimumSalary: ").append(toIndentedString(minimumSalary)).append("\n");
    sb.append("    monthWithmaximumExpense: ").append(toIndentedString(monthWithmaximumExpense)).append("\n");
    sb.append("    mostFrequentExpense: ").append(toIndentedString(mostFrequentExpense)).append("\n");
    sb.append("    mostFrequentExpenseCategory: ").append(toIndentedString(mostFrequentExpenseCategory)).append("\n");
    sb.append("    totalExpenseOnAirtimeAndData: ").append(toIndentedString(totalExpenseOnAirtimeAndData)).append("\n");
    sb.append("    totalExpenseOnInternationalTransactions: ").append(toIndentedString(totalExpenseOnInternationalTransactions)).append("\n");
    sb.append("    totalExpenseOnSavingsAndInvestments: ").append(toIndentedString(totalExpenseOnSavingsAndInvestments)).append("\n");
    sb.append("    totalExpenseOnTransfer: ").append(toIndentedString(totalExpenseOnTransfer)).append("\n");
    sb.append("    totalExpenseOnTransportation: ").append(toIndentedString(totalExpenseOnTransportation)).append("\n");
    sb.append("    totalExpenseOnTravel: ").append(toIndentedString(totalExpenseOnTravel)).append("\n");
    sb.append("    totalExpenseOnUSSD: ").append(toIndentedString(totalExpenseOnUSSD)).append("\n");
    sb.append("    totalExpenseOnUtilities: ").append(toIndentedString(totalExpenseOnUtilities)).append("\n");
    sb.append("    totalExpenseonChargesAndStampDuty: ").append(toIndentedString(totalExpenseonChargesAndStampDuty)).append("\n");
    sb.append("    totalExpenseonEntertainment: ").append(toIndentedString(totalExpenseonEntertainment)).append("\n");
    sb.append("    totalExpenseonGambling: ").append(toIndentedString(totalExpenseonGambling)).append("\n");
    sb.append("    totalExpenseonHealth: ").append(toIndentedString(totalExpenseonHealth)).append("\n");
    sb.append("    totalExpenseonHospitalityandFood: ").append(toIndentedString(totalExpenseonHospitalityandFood)).append("\n");
    sb.append("    totalExpenseonInsurance: ").append(toIndentedString(totalExpenseonInsurance)).append("\n");
    sb.append("    totalExpenseonOnlineandWeb: ").append(toIndentedString(totalExpenseonOnlineandWeb)).append("\n");
    sb.append("    totalMonthlyExpenses: ").append(toIndentedString(totalMonthlyExpenses)).append("\n");
    sb.append("    totalRecurringExpenses: ").append(toIndentedString(totalRecurringExpenses)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("MaximumExpense");
    openapiFields.add("atmLocations");
    openapiFields.add("averageMonthlyExpenseOnAirtimeandData");
    openapiFields.add("averageMonthlyExpenseOnAtmAndPOS");
    openapiFields.add("averageMonthlyExpenseOnChargesAndStampDuty");
    openapiFields.add("averageMonthlyExpenseOnEntertainment");
    openapiFields.add("averageMonthlyExpenseOnGambling");
    openapiFields.add("averageMonthlyExpenseOnHealth");
    openapiFields.add("averageMonthlyExpenseOnHospitalityandFood");
    openapiFields.add("averageMonthlyExpenseOnInsurance");
    openapiFields.add("averageMonthlyExpenseOnInternationalTransactions");
    openapiFields.add("averageMonthlyExpenseOnOnlineandWeb");
    openapiFields.add("averageMonthlyExpenseOnRent");
    openapiFields.add("averageMonthlyExpenseOnSavingsAndInvestments");
    openapiFields.add("averageMonthlyExpenseOnTransfer");
    openapiFields.add("averageMonthlyExpenseOnTransportation");
    openapiFields.add("averageMonthlyExpenseOnUSSD");
    openapiFields.add("averageMonthlyExpenseOnUtilities");
    openapiFields.add("averageMonthlyExpenseonTravel");
    openapiFields.add("averageMonthlyRecurringExpenses");
    openapiFields.add("averageMonthlyTotalExpenses");
    openapiFields.add("minimumSalary");
    openapiFields.add("monthWithmaximumExpense");
    openapiFields.add("mostFrequentExpense");
    openapiFields.add("mostFrequentExpenseCategory");
    openapiFields.add("totalExpenseOnAirtimeAndData");
    openapiFields.add("totalExpenseOnInternationalTransactions");
    openapiFields.add("totalExpenseOnSavingsAndInvestments");
    openapiFields.add("totalExpenseOnTransfer");
    openapiFields.add("totalExpenseOnTransportation");
    openapiFields.add("totalExpenseOnTravel");
    openapiFields.add("totalExpenseOnUSSD");
    openapiFields.add("totalExpenseOnUtilities");
    openapiFields.add("totalExpenseonChargesAndStampDuty");
    openapiFields.add("totalExpenseonEntertainment");
    openapiFields.add("totalExpenseonGambling");
    openapiFields.add("totalExpenseonHealth");
    openapiFields.add("totalExpenseonHospitalityandFood");
    openapiFields.add("totalExpenseonInsurance");
    openapiFields.add("totalExpenseonOnlineandWeb");
    openapiFields.add("totalMonthlyExpenses");
    openapiFields.add("totalRecurringExpenses");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to GetAccountAnalysisResponseEntityExpenseBreakdown
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!GetAccountAnalysisResponseEntityExpenseBreakdown.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetAccountAnalysisResponseEntityExpenseBreakdown is not found in the empty JSON string", GetAccountAnalysisResponseEntityExpenseBreakdown.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("MaximumExpense") != null && !jsonObj.get("MaximumExpense").isJsonNull()) && !jsonObj.get("MaximumExpense").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MaximumExpense` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MaximumExpense").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("atmLocations") != null && !jsonObj.get("atmLocations").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `atmLocations` to be an array in the JSON string but got `%s`", jsonObj.get("atmLocations").toString()));
      }
      if ((jsonObj.get("monthWithmaximumExpense") != null && !jsonObj.get("monthWithmaximumExpense").isJsonNull()) && !jsonObj.get("monthWithmaximumExpense").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `monthWithmaximumExpense` to be a primitive type in the JSON string but got `%s`", jsonObj.get("monthWithmaximumExpense").toString()));
      }
      if ((jsonObj.get("mostFrequentExpense") != null && !jsonObj.get("mostFrequentExpense").isJsonNull()) && !jsonObj.get("mostFrequentExpense").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mostFrequentExpense` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mostFrequentExpense").toString()));
      }
      if ((jsonObj.get("mostFrequentExpenseCategory") != null && !jsonObj.get("mostFrequentExpenseCategory").isJsonNull()) && !jsonObj.get("mostFrequentExpenseCategory").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mostFrequentExpenseCategory` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mostFrequentExpenseCategory").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetAccountAnalysisResponseEntityExpenseBreakdown.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetAccountAnalysisResponseEntityExpenseBreakdown' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetAccountAnalysisResponseEntityExpenseBreakdown> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetAccountAnalysisResponseEntityExpenseBreakdown.class));

       return (TypeAdapter<T>) new TypeAdapter<GetAccountAnalysisResponseEntityExpenseBreakdown>() {
           @Override
           public void write(JsonWriter out, GetAccountAnalysisResponseEntityExpenseBreakdown value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public GetAccountAnalysisResponseEntityExpenseBreakdown read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             GetAccountAnalysisResponseEntityExpenseBreakdown instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of GetAccountAnalysisResponseEntityExpenseBreakdown given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of GetAccountAnalysisResponseEntityExpenseBreakdown
  * @throws IOException if the JSON string is invalid with respect to GetAccountAnalysisResponseEntityExpenseBreakdown
  */
  public static GetAccountAnalysisResponseEntityExpenseBreakdown fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetAccountAnalysisResponseEntityExpenseBreakdown.class);
  }

 /**
  * Convert an instance of GetAccountAnalysisResponseEntityExpenseBreakdown to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

