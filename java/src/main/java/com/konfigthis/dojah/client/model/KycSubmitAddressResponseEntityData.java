/*
 * DOJAH Publilc APIs
 * Use Dojah to verify, onboard and manage user identity across Africa!
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.dojah.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.dojah.client.model.KycSubmitAddressResponseEntityDataApplicant;
import com.konfigthis.dojah.client.model.KycSubmitAddressResponseEntityDataNeighbor;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.dojah.client.JSON;

/**
 * KycSubmitAddressResponseEntityData
 */
@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class KycSubmitAddressResponseEntityData {
  public static final String SERIALIZED_NAME_APPLICANT = "applicant";
  @SerializedName(SERIALIZED_NAME_APPLICANT)
  private KycSubmitAddressResponseEntityDataApplicant applicant;

  public static final String SERIALIZED_NAME_LATTITUDE = "lattitude";
  @SerializedName(SERIALIZED_NAME_LATTITUDE)
  private String lattitude;

  public static final String SERIALIZED_NAME_LONGITUDE = "longitude";
  @SerializedName(SERIALIZED_NAME_LONGITUDE)
  private String longitude;

  public static final String SERIALIZED_NAME_PHOTOS = "photos";
  @SerializedName(SERIALIZED_NAME_PHOTOS)
  private List<String> photos = null;

  public static final String SERIALIZED_NAME_NEIGHBOR = "neighbor";
  @SerializedName(SERIALIZED_NAME_NEIGHBOR)
  private KycSubmitAddressResponseEntityDataNeighbor neighbor;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_STREET = "street";
  @SerializedName(SERIALIZED_NAME_STREET)
  private String street;

  public static final String SERIALIZED_NAME_LGA = "lga";
  @SerializedName(SERIALIZED_NAME_LGA)
  private String lga;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public KycSubmitAddressResponseEntityData() {
  }

  public KycSubmitAddressResponseEntityData applicant(KycSubmitAddressResponseEntityDataApplicant applicant) {

    
    
    
    
    this.applicant = applicant;
    return this;
  }

   /**
   * Get applicant
   * @return applicant
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public KycSubmitAddressResponseEntityDataApplicant getApplicant() {
    return applicant;
  }


  public void setApplicant(KycSubmitAddressResponseEntityDataApplicant applicant) {

    
    
    
    this.applicant = applicant;
  }


  public KycSubmitAddressResponseEntityData lattitude(String lattitude) {

    
    
    
    
    this.lattitude = lattitude;
    return this;
  }

   /**
   * Get lattitude
   * @return lattitude
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "7.081273", value = "")

  public String getLattitude() {
    return lattitude;
  }


  public void setLattitude(String lattitude) {

    
    
    
    this.lattitude = lattitude;
  }


  public KycSubmitAddressResponseEntityData longitude(String longitude) {

    
    
    
    
    this.longitude = longitude;
    return this;
  }

   /**
   * Get longitude
   * @return longitude
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "8.232523", value = "")

  public String getLongitude() {
    return longitude;
  }


  public void setLongitude(String longitude) {

    
    
    
    this.longitude = longitude;
  }


  public KycSubmitAddressResponseEntityData photos(List<String> photos) {

    
    
    
    
    this.photos = photos;
    return this;
  }

  public KycSubmitAddressResponseEntityData addPhotosItem(String photosItem) {
    if (this.photos == null) {
      this.photos = new ArrayList<>();
    }
    this.photos.add(photosItem);
    return this;
  }

   /**
   * Get photos
   * @return photos
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getPhotos() {
    return photos;
  }


  public void setPhotos(List<String> photos) {

    
    
    
    this.photos = photos;
  }


  public KycSubmitAddressResponseEntityData neighbor(KycSubmitAddressResponseEntityDataNeighbor neighbor) {

    
    
    
    
    this.neighbor = neighbor;
    return this;
  }

   /**
   * Get neighbor
   * @return neighbor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public KycSubmitAddressResponseEntityDataNeighbor getNeighbor() {
    return neighbor;
  }


  public void setNeighbor(KycSubmitAddressResponseEntityDataNeighbor neighbor) {

    
    
    
    this.neighbor = neighbor;
  }


  public KycSubmitAddressResponseEntityData status(String status) {

    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "In Progress", value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {

    
    
    
    this.status = status;
  }


  public KycSubmitAddressResponseEntityData city(String city) {

    
    
    
    
    this.city = city;
    return this;
  }

   /**
   * Get city
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "oshodi", value = "")

  public String getCity() {
    return city;
  }


  public void setCity(String city) {

    
    
    
    this.city = city;
  }


  public KycSubmitAddressResponseEntityData street(String street) {

    
    
    
    
    this.street = street;
    return this;
  }

   /**
   * Get street
   * @return street
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "270 Murtala Muhammed Way, Alagomeji. Yaba", value = "")

  public String getStreet() {
    return street;
  }


  public void setStreet(String street) {

    
    
    
    this.street = street;
  }


  public KycSubmitAddressResponseEntityData lga(String lga) {

    
    
    
    
    this.lga = lga;
    return this;
  }

   /**
   * Get lga
   * @return lga
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "lagos mainland", value = "")

  public String getLga() {
    return lga;
  }


  public void setLga(String lga) {

    
    
    
    this.lga = lga;
  }


  public KycSubmitAddressResponseEntityData state(String state) {

    
    
    
    
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Lagos", value = "")

  public String getState() {
    return state;
  }


  public void setState(String state) {

    
    
    
    this.state = state;
  }


  public KycSubmitAddressResponseEntityData country(String country) {

    
    
    
    
    this.country = country;
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Nigeria", value = "")

  public String getCountry() {
    return country;
  }


  public void setCountry(String country) {

    
    
    
    this.country = country;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the KycSubmitAddressResponseEntityData instance itself
   */
  public KycSubmitAddressResponseEntityData putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KycSubmitAddressResponseEntityData kycSubmitAddressResponseEntityData = (KycSubmitAddressResponseEntityData) o;
    return Objects.equals(this.applicant, kycSubmitAddressResponseEntityData.applicant) &&
        Objects.equals(this.lattitude, kycSubmitAddressResponseEntityData.lattitude) &&
        Objects.equals(this.longitude, kycSubmitAddressResponseEntityData.longitude) &&
        Objects.equals(this.photos, kycSubmitAddressResponseEntityData.photos) &&
        Objects.equals(this.neighbor, kycSubmitAddressResponseEntityData.neighbor) &&
        Objects.equals(this.status, kycSubmitAddressResponseEntityData.status) &&
        Objects.equals(this.city, kycSubmitAddressResponseEntityData.city) &&
        Objects.equals(this.street, kycSubmitAddressResponseEntityData.street) &&
        Objects.equals(this.lga, kycSubmitAddressResponseEntityData.lga) &&
        Objects.equals(this.state, kycSubmitAddressResponseEntityData.state) &&
        Objects.equals(this.country, kycSubmitAddressResponseEntityData.country)&&
        Objects.equals(this.additionalProperties, kycSubmitAddressResponseEntityData.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicant, lattitude, longitude, photos, neighbor, status, city, street, lga, state, country, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KycSubmitAddressResponseEntityData {\n");
    sb.append("    applicant: ").append(toIndentedString(applicant)).append("\n");
    sb.append("    lattitude: ").append(toIndentedString(lattitude)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    photos: ").append(toIndentedString(photos)).append("\n");
    sb.append("    neighbor: ").append(toIndentedString(neighbor)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    street: ").append(toIndentedString(street)).append("\n");
    sb.append("    lga: ").append(toIndentedString(lga)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("applicant");
    openapiFields.add("lattitude");
    openapiFields.add("longitude");
    openapiFields.add("photos");
    openapiFields.add("neighbor");
    openapiFields.add("status");
    openapiFields.add("city");
    openapiFields.add("street");
    openapiFields.add("lga");
    openapiFields.add("state");
    openapiFields.add("country");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to KycSubmitAddressResponseEntityData
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!KycSubmitAddressResponseEntityData.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in KycSubmitAddressResponseEntityData is not found in the empty JSON string", KycSubmitAddressResponseEntityData.openapiRequiredFields.toString()));
        }
      }
      // validate the optional field `applicant`
      if (jsonObj.get("applicant") != null && !jsonObj.get("applicant").isJsonNull()) {
        KycSubmitAddressResponseEntityDataApplicant.validateJsonObject(jsonObj.getAsJsonObject("applicant"));
      }
      if ((jsonObj.get("lattitude") != null && !jsonObj.get("lattitude").isJsonNull()) && !jsonObj.get("lattitude").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lattitude` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lattitude").toString()));
      }
      if ((jsonObj.get("longitude") != null && !jsonObj.get("longitude").isJsonNull()) && !jsonObj.get("longitude").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `longitude` to be a primitive type in the JSON string but got `%s`", jsonObj.get("longitude").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("photos") != null && !jsonObj.get("photos").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `photos` to be an array in the JSON string but got `%s`", jsonObj.get("photos").toString()));
      }
      // validate the optional field `neighbor`
      if (jsonObj.get("neighbor") != null && !jsonObj.get("neighbor").isJsonNull()) {
        KycSubmitAddressResponseEntityDataNeighbor.validateJsonObject(jsonObj.getAsJsonObject("neighbor"));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("city") != null && !jsonObj.get("city").isJsonNull()) && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      if ((jsonObj.get("street") != null && !jsonObj.get("street").isJsonNull()) && !jsonObj.get("street").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `street` to be a primitive type in the JSON string but got `%s`", jsonObj.get("street").toString()));
      }
      if ((jsonObj.get("lga") != null && !jsonObj.get("lga").isJsonNull()) && !jsonObj.get("lga").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lga` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lga").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      if ((jsonObj.get("country") != null && !jsonObj.get("country").isJsonNull()) && !jsonObj.get("country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!KycSubmitAddressResponseEntityData.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'KycSubmitAddressResponseEntityData' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<KycSubmitAddressResponseEntityData> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(KycSubmitAddressResponseEntityData.class));

       return (TypeAdapter<T>) new TypeAdapter<KycSubmitAddressResponseEntityData>() {
           @Override
           public void write(JsonWriter out, KycSubmitAddressResponseEntityData value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public KycSubmitAddressResponseEntityData read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             KycSubmitAddressResponseEntityData instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of KycSubmitAddressResponseEntityData given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of KycSubmitAddressResponseEntityData
  * @throws IOException if the JSON string is invalid with respect to KycSubmitAddressResponseEntityData
  */
  public static KycSubmitAddressResponseEntityData fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, KycSubmitAddressResponseEntityData.class);
  }

 /**
  * Convert an instance of KycSubmitAddressResponseEntityData to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

