/*
 * DOJAH Publilc APIs
 * Use Dojah to verify, onboard and manage user identity across Africa!
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.dojah.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.dojah.client.JSON;

/**
 * ZwKycVerifyIdResponseEntity
 */
@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class ZwKycVerifyIdResponseEntity {
  public static final String SERIALIZED_NAME_PERSON_NO = "person_no";
  @SerializedName(SERIALIZED_NAME_PERSON_NO)
  private String personNo;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_SURNAME = "surname";
  @SerializedName(SERIALIZED_NAME_SURNAME)
  private String surname;

  public static final String SERIALIZED_NAME_FIRST_NAME = "first_name";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_SEX = "sex";
  @SerializedName(SERIALIZED_NAME_SEX)
  private String sex;

  public static final String SERIALIZED_NAME_DATE_OF_BIRTH = "date_of_birth";
  @SerializedName(SERIALIZED_NAME_DATE_OF_BIRTH)
  private String dateOfBirth;

  public static final String SERIALIZED_NAME_DATE_OF_DEATH = "date_of_death";
  @SerializedName(SERIALIZED_NAME_DATE_OF_DEATH)
  private String dateOfDeath;

  public static final String SERIALIZED_NAME_BIRTH_PLACE = "birth_place";
  @SerializedName(SERIALIZED_NAME_BIRTH_PLACE)
  private String birthPlace;

  public ZwKycVerifyIdResponseEntity() {
  }

  public ZwKycVerifyIdResponseEntity personNo(String personNo) {

    
    
    
    
    this.personNo = personNo;
    return this;
  }

   /**
   * Get personNo
   * @return personNo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "450190221E45", value = "")

  public String getPersonNo() {
    return personNo;
  }


  public void setPersonNo(String personNo) {

    
    
    
    this.personNo = personNo;
  }


  public ZwKycVerifyIdResponseEntity status(String status) {

    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "A", value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {

    
    
    
    this.status = status;
  }


  public ZwKycVerifyIdResponseEntity surname(String surname) {

    
    
    
    
    this.surname = surname;
    return this;
  }

   /**
   * Get surname
   * @return surname
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "CHIMUNDEGE", value = "")

  public String getSurname() {
    return surname;
  }


  public void setSurname(String surname) {

    
    
    
    this.surname = surname;
  }


  public ZwKycVerifyIdResponseEntity firstName(String firstName) {

    
    
    
    
    this.firstName = firstName;
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "EXPETROLLECADOLATOR", value = "")

  public String getFirstName() {
    return firstName;
  }


  public void setFirstName(String firstName) {

    
    
    
    this.firstName = firstName;
  }


  public ZwKycVerifyIdResponseEntity sex(String sex) {

    
    
    
    
    this.sex = sex;
    return this;
  }

   /**
   * Get sex
   * @return sex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "F", value = "")

  public String getSex() {
    return sex;
  }


  public void setSex(String sex) {

    
    
    
    this.sex = sex;
  }


  public ZwKycVerifyIdResponseEntity dateOfBirth(String dateOfBirth) {

    
    
    
    
    this.dateOfBirth = dateOfBirth;
    return this;
  }

   /**
   * Get dateOfBirth
   * @return dateOfBirth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1994-04-03", value = "")

  public String getDateOfBirth() {
    return dateOfBirth;
  }


  public void setDateOfBirth(String dateOfBirth) {

    
    
    
    this.dateOfBirth = dateOfBirth;
  }


  public ZwKycVerifyIdResponseEntity dateOfDeath(String dateOfDeath) {

    
    
    
    
    this.dateOfDeath = dateOfDeath;
    return this;
  }

   /**
   * Get dateOfDeath
   * @return dateOfDeath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDateOfDeath() {
    return dateOfDeath;
  }


  public void setDateOfDeath(String dateOfDeath) {

    
    
    
    this.dateOfDeath = dateOfDeath;
  }


  public ZwKycVerifyIdResponseEntity birthPlace(String birthPlace) {

    
    
    
    
    this.birthPlace = birthPlace;
    return this;
  }

   /**
   * Get birthPlace
   * @return birthPlace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBirthPlace() {
    return birthPlace;
  }


  public void setBirthPlace(String birthPlace) {

    
    
    
    this.birthPlace = birthPlace;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the ZwKycVerifyIdResponseEntity instance itself
   */
  public ZwKycVerifyIdResponseEntity putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ZwKycVerifyIdResponseEntity zwKycVerifyIdResponseEntity = (ZwKycVerifyIdResponseEntity) o;
    return Objects.equals(this.personNo, zwKycVerifyIdResponseEntity.personNo) &&
        Objects.equals(this.status, zwKycVerifyIdResponseEntity.status) &&
        Objects.equals(this.surname, zwKycVerifyIdResponseEntity.surname) &&
        Objects.equals(this.firstName, zwKycVerifyIdResponseEntity.firstName) &&
        Objects.equals(this.sex, zwKycVerifyIdResponseEntity.sex) &&
        Objects.equals(this.dateOfBirth, zwKycVerifyIdResponseEntity.dateOfBirth) &&
        Objects.equals(this.dateOfDeath, zwKycVerifyIdResponseEntity.dateOfDeath) &&
        Objects.equals(this.birthPlace, zwKycVerifyIdResponseEntity.birthPlace)&&
        Objects.equals(this.additionalProperties, zwKycVerifyIdResponseEntity.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(personNo, status, surname, firstName, sex, dateOfBirth, dateOfDeath, birthPlace, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ZwKycVerifyIdResponseEntity {\n");
    sb.append("    personNo: ").append(toIndentedString(personNo)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    surname: ").append(toIndentedString(surname)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    sex: ").append(toIndentedString(sex)).append("\n");
    sb.append("    dateOfBirth: ").append(toIndentedString(dateOfBirth)).append("\n");
    sb.append("    dateOfDeath: ").append(toIndentedString(dateOfDeath)).append("\n");
    sb.append("    birthPlace: ").append(toIndentedString(birthPlace)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("person_no");
    openapiFields.add("status");
    openapiFields.add("surname");
    openapiFields.add("first_name");
    openapiFields.add("sex");
    openapiFields.add("date_of_birth");
    openapiFields.add("date_of_death");
    openapiFields.add("birth_place");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ZwKycVerifyIdResponseEntity
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ZwKycVerifyIdResponseEntity.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ZwKycVerifyIdResponseEntity is not found in the empty JSON string", ZwKycVerifyIdResponseEntity.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("person_no") != null && !jsonObj.get("person_no").isJsonNull()) && !jsonObj.get("person_no").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `person_no` to be a primitive type in the JSON string but got `%s`", jsonObj.get("person_no").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("surname") != null && !jsonObj.get("surname").isJsonNull()) && !jsonObj.get("surname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `surname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("surname").toString()));
      }
      if ((jsonObj.get("first_name") != null && !jsonObj.get("first_name").isJsonNull()) && !jsonObj.get("first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("first_name").toString()));
      }
      if ((jsonObj.get("sex") != null && !jsonObj.get("sex").isJsonNull()) && !jsonObj.get("sex").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sex` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sex").toString()));
      }
      if ((jsonObj.get("date_of_birth") != null && !jsonObj.get("date_of_birth").isJsonNull()) && !jsonObj.get("date_of_birth").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `date_of_birth` to be a primitive type in the JSON string but got `%s`", jsonObj.get("date_of_birth").toString()));
      }
      if (!jsonObj.get("date_of_death").isJsonNull() && (jsonObj.get("date_of_death") != null && !jsonObj.get("date_of_death").isJsonNull()) && !jsonObj.get("date_of_death").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `date_of_death` to be a primitive type in the JSON string but got `%s`", jsonObj.get("date_of_death").toString()));
      }
      if (!jsonObj.get("birth_place").isJsonNull() && (jsonObj.get("birth_place") != null && !jsonObj.get("birth_place").isJsonNull()) && !jsonObj.get("birth_place").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `birth_place` to be a primitive type in the JSON string but got `%s`", jsonObj.get("birth_place").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ZwKycVerifyIdResponseEntity.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ZwKycVerifyIdResponseEntity' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ZwKycVerifyIdResponseEntity> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ZwKycVerifyIdResponseEntity.class));

       return (TypeAdapter<T>) new TypeAdapter<ZwKycVerifyIdResponseEntity>() {
           @Override
           public void write(JsonWriter out, ZwKycVerifyIdResponseEntity value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public ZwKycVerifyIdResponseEntity read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             ZwKycVerifyIdResponseEntity instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ZwKycVerifyIdResponseEntity given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ZwKycVerifyIdResponseEntity
  * @throws IOException if the JSON string is invalid with respect to ZwKycVerifyIdResponseEntity
  */
  public static ZwKycVerifyIdResponseEntity fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ZwKycVerifyIdResponseEntity.class);
  }

 /**
  * Convert an instance of ZwKycVerifyIdResponseEntity to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

