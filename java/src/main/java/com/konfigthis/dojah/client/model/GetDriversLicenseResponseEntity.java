/*
 * DOJAH APIs
 * Use Dojah to verify, onboard and manage user identity across Africa!
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.dojah.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.dojah.client.JSON;

/**
 * GetDriversLicenseResponseEntity
 */
@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class GetDriversLicenseResponseEntity {
  public static final String SERIALIZED_NAME_CERTIFICATE_DATE = "certificate_date";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_DATE)
  private String certificateDate;

  public static final String SERIALIZED_NAME_DATE_OF_BIRTH = "date_of_birth";
  @SerializedName(SERIALIZED_NAME_DATE_OF_BIRTH)
  private String dateOfBirth;

  public static final String SERIALIZED_NAME_EXPIRY_DATE = "expiry_date";
  @SerializedName(SERIALIZED_NAME_EXPIRY_DATE)
  private String expiryDate;

  public static final String SERIALIZED_NAME_FULL_NAME = "full_name";
  @SerializedName(SERIALIZED_NAME_FULL_NAME)
  private String fullName;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IS_DATE_OF_BIRTH_MATCH = "is_date_of_birth_match";
  @SerializedName(SERIALIZED_NAME_IS_DATE_OF_BIRTH_MATCH)
  private Boolean isDateOfBirthMatch;

  public static final String SERIALIZED_NAME_IS_FULL_NAME_MATCH = "is_full_name_match";
  @SerializedName(SERIALIZED_NAME_IS_FULL_NAME_MATCH)
  private Boolean isFullNameMatch;

  public static final String SERIALIZED_NAME_ISSUE_DATE = "issue_date";
  @SerializedName(SERIALIZED_NAME_ISSUE_DATE)
  private String issueDate;

  public static final String SERIALIZED_NAME_PICTURE = "picture";
  @SerializedName(SERIALIZED_NAME_PICTURE)
  private String picture;

  public static final String SERIALIZED_NAME_PIN = "pin";
  @SerializedName(SERIALIZED_NAME_PIN)
  private String pin;

  public static final String SERIALIZED_NAME_PROCESSING_CENTER = "processing_center";
  @SerializedName(SERIALIZED_NAME_PROCESSING_CENTER)
  private String processingCenter;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private BigDecimal status;

  public GetDriversLicenseResponseEntity() {
  }

  public GetDriversLicenseResponseEntity certificateDate(String certificateDate) {
    
    this.certificateDate = certificateDate;
    return this;
  }

   /**
   * Get certificateDate
   * @return certificateDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2010-07-19", value = "")

  public String getCertificateDate() {
    return certificateDate;
  }


  public void setCertificateDate(String certificateDate) {
    this.certificateDate = certificateDate;
  }


  public GetDriversLicenseResponseEntity dateOfBirth(String dateOfBirth) {
    
    this.dateOfBirth = dateOfBirth;
    return this;
  }

   /**
   * Get dateOfBirth
   * @return dateOfBirth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1988-09-01", value = "")

  public String getDateOfBirth() {
    return dateOfBirth;
  }


  public void setDateOfBirth(String dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
  }


  public GetDriversLicenseResponseEntity expiryDate(String expiryDate) {
    
    this.expiryDate = expiryDate;
    return this;
  }

   /**
   * Get expiryDate
   * @return expiryDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2016-08-25", value = "")

  public String getExpiryDate() {
    return expiryDate;
  }


  public void setExpiryDate(String expiryDate) {
    this.expiryDate = expiryDate;
  }


  public GetDriversLicenseResponseEntity fullName(String fullName) {
    
    this.fullName = fullName;
    return this;
  }

   /**
   * Get fullName
   * @return fullName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "John Doe", value = "")

  public String getFullName() {
    return fullName;
  }


  public void setFullName(String fullName) {
    this.fullName = fullName;
  }


  public GetDriversLicenseResponseEntity id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "V0000000", value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public GetDriversLicenseResponseEntity isDateOfBirthMatch(Boolean isDateOfBirthMatch) {
    
    this.isDateOfBirthMatch = isDateOfBirthMatch;
    return this;
  }

   /**
   * Get isDateOfBirthMatch
   * @return isDateOfBirthMatch
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "")

  public Boolean getIsDateOfBirthMatch() {
    return isDateOfBirthMatch;
  }


  public void setIsDateOfBirthMatch(Boolean isDateOfBirthMatch) {
    this.isDateOfBirthMatch = isDateOfBirthMatch;
  }


  public GetDriversLicenseResponseEntity isFullNameMatch(Boolean isFullNameMatch) {
    
    this.isFullNameMatch = isFullNameMatch;
    return this;
  }

   /**
   * Get isFullNameMatch
   * @return isFullNameMatch
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "")

  public Boolean getIsFullNameMatch() {
    return isFullNameMatch;
  }


  public void setIsFullNameMatch(Boolean isFullNameMatch) {
    this.isFullNameMatch = isFullNameMatch;
  }


  public GetDriversLicenseResponseEntity issueDate(String issueDate) {
    
    this.issueDate = issueDate;
    return this;
  }

   /**
   * Get issueDate
   * @return issueDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2010-08-25", value = "")

  public String getIssueDate() {
    return issueDate;
  }


  public void setIssueDate(String issueDate) {
    this.issueDate = issueDate;
  }


  public GetDriversLicenseResponseEntity picture(String picture) {
    
    this.picture = picture;
    return this;
  }

   /**
   * Get picture
   * @return picture
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "<base64 encoded image>", value = "")

  public String getPicture() {
    return picture;
  }


  public void setPicture(String picture) {
    this.picture = picture;
  }


  public GetDriversLicenseResponseEntity pin(String pin) {
    
    this.pin = pin;
    return this;
  }

   /**
   * Get pin
   * @return pin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "DOE-310203-03-01", value = "")

  public String getPin() {
    return pin;
  }


  public void setPin(String pin) {
    this.pin = pin;
  }


  public GetDriversLicenseResponseEntity processingCenter(String processingCenter) {
    
    this.processingCenter = processingCenter;
    return this;
  }

   /**
   * Get processingCenter
   * @return processingCenter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "VR3", value = "")

  public String getProcessingCenter() {
    return processingCenter;
  }


  public void setProcessingCenter(String processingCenter) {
    this.processingCenter = processingCenter;
  }


  public GetDriversLicenseResponseEntity status(BigDecimal status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "200", value = "")

  public BigDecimal getStatus() {
    return status;
  }


  public void setStatus(BigDecimal status) {
    this.status = status;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the GetDriversLicenseResponseEntity instance itself
   */
  public GetDriversLicenseResponseEntity putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetDriversLicenseResponseEntity getDriversLicenseResponseEntity = (GetDriversLicenseResponseEntity) o;
    return Objects.equals(this.certificateDate, getDriversLicenseResponseEntity.certificateDate) &&
        Objects.equals(this.dateOfBirth, getDriversLicenseResponseEntity.dateOfBirth) &&
        Objects.equals(this.expiryDate, getDriversLicenseResponseEntity.expiryDate) &&
        Objects.equals(this.fullName, getDriversLicenseResponseEntity.fullName) &&
        Objects.equals(this.id, getDriversLicenseResponseEntity.id) &&
        Objects.equals(this.isDateOfBirthMatch, getDriversLicenseResponseEntity.isDateOfBirthMatch) &&
        Objects.equals(this.isFullNameMatch, getDriversLicenseResponseEntity.isFullNameMatch) &&
        Objects.equals(this.issueDate, getDriversLicenseResponseEntity.issueDate) &&
        Objects.equals(this.picture, getDriversLicenseResponseEntity.picture) &&
        Objects.equals(this.pin, getDriversLicenseResponseEntity.pin) &&
        Objects.equals(this.processingCenter, getDriversLicenseResponseEntity.processingCenter) &&
        Objects.equals(this.status, getDriversLicenseResponseEntity.status)&&
        Objects.equals(this.additionalProperties, getDriversLicenseResponseEntity.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(certificateDate, dateOfBirth, expiryDate, fullName, id, isDateOfBirthMatch, isFullNameMatch, issueDate, picture, pin, processingCenter, status, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetDriversLicenseResponseEntity {\n");
    sb.append("    certificateDate: ").append(toIndentedString(certificateDate)).append("\n");
    sb.append("    dateOfBirth: ").append(toIndentedString(dateOfBirth)).append("\n");
    sb.append("    expiryDate: ").append(toIndentedString(expiryDate)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isDateOfBirthMatch: ").append(toIndentedString(isDateOfBirthMatch)).append("\n");
    sb.append("    isFullNameMatch: ").append(toIndentedString(isFullNameMatch)).append("\n");
    sb.append("    issueDate: ").append(toIndentedString(issueDate)).append("\n");
    sb.append("    picture: ").append(toIndentedString(picture)).append("\n");
    sb.append("    pin: ").append(toIndentedString(pin)).append("\n");
    sb.append("    processingCenter: ").append(toIndentedString(processingCenter)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("certificate_date");
    openapiFields.add("date_of_birth");
    openapiFields.add("expiry_date");
    openapiFields.add("full_name");
    openapiFields.add("id");
    openapiFields.add("is_date_of_birth_match");
    openapiFields.add("is_full_name_match");
    openapiFields.add("issue_date");
    openapiFields.add("picture");
    openapiFields.add("pin");
    openapiFields.add("processing_center");
    openapiFields.add("status");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to GetDriversLicenseResponseEntity
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!GetDriversLicenseResponseEntity.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetDriversLicenseResponseEntity is not found in the empty JSON string", GetDriversLicenseResponseEntity.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("certificate_date") != null && !jsonObj.get("certificate_date").isJsonNull()) && !jsonObj.get("certificate_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `certificate_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("certificate_date").toString()));
      }
      if ((jsonObj.get("date_of_birth") != null && !jsonObj.get("date_of_birth").isJsonNull()) && !jsonObj.get("date_of_birth").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `date_of_birth` to be a primitive type in the JSON string but got `%s`", jsonObj.get("date_of_birth").toString()));
      }
      if ((jsonObj.get("expiry_date") != null && !jsonObj.get("expiry_date").isJsonNull()) && !jsonObj.get("expiry_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expiry_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expiry_date").toString()));
      }
      if ((jsonObj.get("full_name") != null && !jsonObj.get("full_name").isJsonNull()) && !jsonObj.get("full_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `full_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("full_name").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("issue_date") != null && !jsonObj.get("issue_date").isJsonNull()) && !jsonObj.get("issue_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `issue_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("issue_date").toString()));
      }
      if ((jsonObj.get("picture") != null && !jsonObj.get("picture").isJsonNull()) && !jsonObj.get("picture").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `picture` to be a primitive type in the JSON string but got `%s`", jsonObj.get("picture").toString()));
      }
      if ((jsonObj.get("pin") != null && !jsonObj.get("pin").isJsonNull()) && !jsonObj.get("pin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pin").toString()));
      }
      if ((jsonObj.get("processing_center") != null && !jsonObj.get("processing_center").isJsonNull()) && !jsonObj.get("processing_center").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `processing_center` to be a primitive type in the JSON string but got `%s`", jsonObj.get("processing_center").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetDriversLicenseResponseEntity.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetDriversLicenseResponseEntity' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetDriversLicenseResponseEntity> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetDriversLicenseResponseEntity.class));

       return (TypeAdapter<T>) new TypeAdapter<GetDriversLicenseResponseEntity>() {
           @Override
           public void write(JsonWriter out, GetDriversLicenseResponseEntity value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public GetDriversLicenseResponseEntity read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             GetDriversLicenseResponseEntity instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of GetDriversLicenseResponseEntity given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of GetDriversLicenseResponseEntity
  * @throws IOException if the JSON string is invalid with respect to GetDriversLicenseResponseEntity
  */
  public static GetDriversLicenseResponseEntity fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetDriversLicenseResponseEntity.class);
  }

 /**
  * Convert an instance of GetDriversLicenseResponseEntity to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

