/*
 * DOJAH APIs
 * Use Dojah to verify, onboard and manage user identity across Africa!
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.dojah.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.dojah.client.JSON;

/**
 * GetAccountAnalysisResponseEntityTransactionRoutineBreakdown
 */
@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class GetAccountAnalysisResponseEntityTransactionRoutineBreakdown {
  public static final String SERIALIZED_NAME_MAXIMUM_EXPENSE = "MaximumExpense";
  @SerializedName(SERIALIZED_NAME_MAXIMUM_EXPENSE)
  private BigDecimal maximumExpense;

  public static final String SERIALIZED_NAME_LAST_CREDIT_RECEIVED = "lastCreditReceived";
  @SerializedName(SERIALIZED_NAME_LAST_CREDIT_RECEIVED)
  private String lastCreditReceived;

  public static final String SERIALIZED_NAME_LAST_DEBIT_MADE = "lastDebitMade";
  @SerializedName(SERIALIZED_NAME_LAST_DEBIT_MADE)
  private String lastDebitMade;

  public static final String SERIALIZED_NAME_MOST_FREQUENT_BALANCE_RANGE = "mostFrequentBalanceRange";
  @SerializedName(SERIALIZED_NAME_MOST_FREQUENT_BALANCE_RANGE)
  private String mostFrequentBalanceRange;

  public static final String SERIALIZED_NAME_MOST_FREQUENT_TRANSACTION_RANGE = "mostFrequentTransactionRange";
  @SerializedName(SERIALIZED_NAME_MOST_FREQUENT_TRANSACTION_RANGE)
  private String mostFrequentTransactionRange;

  public static final String SERIALIZED_NAME_NUMBER_OF_CARD_REQUESTS = "numberOfCardRequests";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_CARD_REQUESTS)
  private BigDecimal numberOfCardRequests;

  public static final String SERIALIZED_NAME_PERCENT_NUMBER_OF_DAYS_BALANCE_WAS_LESS_THAN10_THOUSAND_NAIRA = "percentNumberOfDaysBalanceWasLessThan10ThousandNaira";
  @SerializedName(SERIALIZED_NAME_PERCENT_NUMBER_OF_DAYS_BALANCE_WAS_LESS_THAN10_THOUSAND_NAIRA)
  private BigDecimal percentNumberOfDaysBalanceWasLessThan10ThousandNaira;

  public static final String SERIALIZED_NAME_PERCENT_NUMBER_OF_DAYS_TRANSACTIONS_WAS_LESS_THAN10_THOUSAND_NAIRA = "percentNumberOfDaysTransactionsWasLessThan10ThousandNaira";
  @SerializedName(SERIALIZED_NAME_PERCENT_NUMBER_OF_DAYS_TRANSACTIONS_WAS_LESS_THAN10_THOUSAND_NAIRA)
  private BigDecimal percentNumberOfDaysTransactionsWasLessThan10ThousandNaira;

  public static final String SERIALIZED_NAME_PERCENT_OF_BALANCES_BETWEEN100_THOUSAND_TO500_THOUSAND_NAIRA = "percentOfBalancesBetween100ThousandTo500ThousandNaira";
  @SerializedName(SERIALIZED_NAME_PERCENT_OF_BALANCES_BETWEEN100_THOUSAND_TO500_THOUSAND_NAIRA)
  private BigDecimal percentOfBalancesBetween100ThousandTo500ThousandNaira;

  public static final String SERIALIZED_NAME_PERCENT_OF_BALANCES_BETWEEN10_THOUSAND_TO100_THOUSAND_NAIRA = "percentOfBalancesBetween10ThousandTo100ThousandNaira";
  @SerializedName(SERIALIZED_NAME_PERCENT_OF_BALANCES_BETWEEN10_THOUSAND_TO100_THOUSAND_NAIRA)
  private BigDecimal percentOfBalancesBetween10ThousandTo100ThousandNaira;

  public static final String SERIALIZED_NAME_PERCENT_OF_BALANCES_BETWEEN500_THOUSAND_TO_ONE_MILLION_NAIRA = "percentOfBalancesBetween500ThousandToOneMillionNaira";
  @SerializedName(SERIALIZED_NAME_PERCENT_OF_BALANCES_BETWEEN500_THOUSAND_TO_ONE_MILLION_NAIRA)
  private BigDecimal percentOfBalancesBetween500ThousandToOneMillionNaira;

  public static final String SERIALIZED_NAME_PERCENT_OF_BALANCES_GREATER_THAN_ONE_MILLION_NAIRA = "percentOfBalancesGreaterThanOneMillionNaira";
  @SerializedName(SERIALIZED_NAME_PERCENT_OF_BALANCES_GREATER_THAN_ONE_MILLION_NAIRA)
  private BigDecimal percentOfBalancesGreaterThanOneMillionNaira;

  public static final String SERIALIZED_NAME_PERCENT_OF_BALANCES_LESS_THAN10_THOUSAND_NAIRA = "percentOfBalancesLessThan10ThousandNaira";
  @SerializedName(SERIALIZED_NAME_PERCENT_OF_BALANCES_LESS_THAN10_THOUSAND_NAIRA)
  private BigDecimal percentOfBalancesLessThan10ThousandNaira;

  public static final String SERIALIZED_NAME_PERCENT_OF_TRANSACTIONS_BETWEEN100_THOUSAND_TO500_THOUSAND_NAIRA = "percentOfTransactionsBetween100ThousandTo500ThousandNaira";
  @SerializedName(SERIALIZED_NAME_PERCENT_OF_TRANSACTIONS_BETWEEN100_THOUSAND_TO500_THOUSAND_NAIRA)
  private BigDecimal percentOfTransactionsBetween100ThousandTo500ThousandNaira;

  public static final String SERIALIZED_NAME_PERCENT_OF_TRANSACTIONS_BETWEEN10_THOUSAND_TO100_THOUSAND_NAIRA = "percentOfTransactionsBetween10ThousandTo100ThousandNaira";
  @SerializedName(SERIALIZED_NAME_PERCENT_OF_TRANSACTIONS_BETWEEN10_THOUSAND_TO100_THOUSAND_NAIRA)
  private BigDecimal percentOfTransactionsBetween10ThousandTo100ThousandNaira;

  public static final String SERIALIZED_NAME_PERCENT_OF_TRANSACTIONS_BETWEEN500_THOUSAND_TO_ONE_MILLION_NAIRA = "percentOfTransactionsBetween500ThousandToOneMillionNaira";
  @SerializedName(SERIALIZED_NAME_PERCENT_OF_TRANSACTIONS_BETWEEN500_THOUSAND_TO_ONE_MILLION_NAIRA)
  private BigDecimal percentOfTransactionsBetween500ThousandToOneMillionNaira;

  public static final String SERIALIZED_NAME_PERCENT_OF_TRANSACTIONS_GREATER_THAN_ONE_MILLION_NAIRA = "percentOfTransactionsGreaterThanOneMillionNaira";
  @SerializedName(SERIALIZED_NAME_PERCENT_OF_TRANSACTIONS_GREATER_THAN_ONE_MILLION_NAIRA)
  private BigDecimal percentOfTransactionsGreaterThanOneMillionNaira;

  public static final String SERIALIZED_NAME_PERCENT_OF_TRANSACTIONS_LESS_THAN10_THOUSAND_NAIRA = "percentOfTransactionsLessThan10ThousandNaira";
  @SerializedName(SERIALIZED_NAME_PERCENT_OF_TRANSACTIONS_LESS_THAN10_THOUSAND_NAIRA)
  private BigDecimal percentOfTransactionsLessThan10ThousandNaira;

  public static final String SERIALIZED_NAME_PERCENTOF_CREDIT_TRANSACTIONS = "percentofCreditTransactions";
  @SerializedName(SERIALIZED_NAME_PERCENTOF_CREDIT_TRANSACTIONS)
  private BigDecimal percentofCreditTransactions;

  public static final String SERIALIZED_NAME_PERCENTOF_DEBIT_TRANSACTIONS = "percentofDebitTransactions";
  @SerializedName(SERIALIZED_NAME_PERCENTOF_DEBIT_TRANSACTIONS)
  private BigDecimal percentofDebitTransactions;

  public static final String SERIALIZED_NAME_TOTAL_AMOUNT_OF_TRANSACTIONS = "totalAmountOfTransactions";
  @SerializedName(SERIALIZED_NAME_TOTAL_AMOUNT_OF_TRANSACTIONS)
  private BigDecimal totalAmountOfTransactions;

  public GetAccountAnalysisResponseEntityTransactionRoutineBreakdown() {
  }

  public GetAccountAnalysisResponseEntityTransactionRoutineBreakdown maximumExpense(BigDecimal maximumExpense) {
    
    this.maximumExpense = maximumExpense;
    return this;
  }

   /**
   * Get maximumExpense
   * @return maximumExpense
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public BigDecimal getMaximumExpense() {
    return maximumExpense;
  }


  public void setMaximumExpense(BigDecimal maximumExpense) {
    this.maximumExpense = maximumExpense;
  }


  public GetAccountAnalysisResponseEntityTransactionRoutineBreakdown lastCreditReceived(String lastCreditReceived) {
    
    this.lastCreditReceived = lastCreditReceived;
    return this;
  }

   /**
   * Get lastCreditReceived
   * @return lastCreditReceived
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-03-04", value = "")

  public String getLastCreditReceived() {
    return lastCreditReceived;
  }


  public void setLastCreditReceived(String lastCreditReceived) {
    this.lastCreditReceived = lastCreditReceived;
  }


  public GetAccountAnalysisResponseEntityTransactionRoutineBreakdown lastDebitMade(String lastDebitMade) {
    
    this.lastDebitMade = lastDebitMade;
    return this;
  }

   /**
   * Get lastDebitMade
   * @return lastDebitMade
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-07-03", value = "")

  public String getLastDebitMade() {
    return lastDebitMade;
  }


  public void setLastDebitMade(String lastDebitMade) {
    this.lastDebitMade = lastDebitMade;
  }


  public GetAccountAnalysisResponseEntityTransactionRoutineBreakdown mostFrequentBalanceRange(String mostFrequentBalanceRange) {
    
    this.mostFrequentBalanceRange = mostFrequentBalanceRange;
    return this;
  }

   /**
   * Get mostFrequentBalanceRange
   * @return mostFrequentBalanceRange
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "<10000", value = "")

  public String getMostFrequentBalanceRange() {
    return mostFrequentBalanceRange;
  }


  public void setMostFrequentBalanceRange(String mostFrequentBalanceRange) {
    this.mostFrequentBalanceRange = mostFrequentBalanceRange;
  }


  public GetAccountAnalysisResponseEntityTransactionRoutineBreakdown mostFrequentTransactionRange(String mostFrequentTransactionRange) {
    
    this.mostFrequentTransactionRange = mostFrequentTransactionRange;
    return this;
  }

   /**
   * Get mostFrequentTransactionRange
   * @return mostFrequentTransactionRange
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "<10000", value = "")

  public String getMostFrequentTransactionRange() {
    return mostFrequentTransactionRange;
  }


  public void setMostFrequentTransactionRange(String mostFrequentTransactionRange) {
    this.mostFrequentTransactionRange = mostFrequentTransactionRange;
  }


  public GetAccountAnalysisResponseEntityTransactionRoutineBreakdown numberOfCardRequests(BigDecimal numberOfCardRequests) {
    
    this.numberOfCardRequests = numberOfCardRequests;
    return this;
  }

   /**
   * Get numberOfCardRequests
   * @return numberOfCardRequests
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public BigDecimal getNumberOfCardRequests() {
    return numberOfCardRequests;
  }


  public void setNumberOfCardRequests(BigDecimal numberOfCardRequests) {
    this.numberOfCardRequests = numberOfCardRequests;
  }


  public GetAccountAnalysisResponseEntityTransactionRoutineBreakdown percentNumberOfDaysBalanceWasLessThan10ThousandNaira(BigDecimal percentNumberOfDaysBalanceWasLessThan10ThousandNaira) {
    
    this.percentNumberOfDaysBalanceWasLessThan10ThousandNaira = percentNumberOfDaysBalanceWasLessThan10ThousandNaira;
    return this;
  }

   /**
   * Get percentNumberOfDaysBalanceWasLessThan10ThousandNaira
   * @return percentNumberOfDaysBalanceWasLessThan10ThousandNaira
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")

  public BigDecimal getPercentNumberOfDaysBalanceWasLessThan10ThousandNaira() {
    return percentNumberOfDaysBalanceWasLessThan10ThousandNaira;
  }


  public void setPercentNumberOfDaysBalanceWasLessThan10ThousandNaira(BigDecimal percentNumberOfDaysBalanceWasLessThan10ThousandNaira) {
    this.percentNumberOfDaysBalanceWasLessThan10ThousandNaira = percentNumberOfDaysBalanceWasLessThan10ThousandNaira;
  }


  public GetAccountAnalysisResponseEntityTransactionRoutineBreakdown percentNumberOfDaysTransactionsWasLessThan10ThousandNaira(BigDecimal percentNumberOfDaysTransactionsWasLessThan10ThousandNaira) {
    
    this.percentNumberOfDaysTransactionsWasLessThan10ThousandNaira = percentNumberOfDaysTransactionsWasLessThan10ThousandNaira;
    return this;
  }

   /**
   * Get percentNumberOfDaysTransactionsWasLessThan10ThousandNaira
   * @return percentNumberOfDaysTransactionsWasLessThan10ThousandNaira
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0.96", value = "")

  public BigDecimal getPercentNumberOfDaysTransactionsWasLessThan10ThousandNaira() {
    return percentNumberOfDaysTransactionsWasLessThan10ThousandNaira;
  }


  public void setPercentNumberOfDaysTransactionsWasLessThan10ThousandNaira(BigDecimal percentNumberOfDaysTransactionsWasLessThan10ThousandNaira) {
    this.percentNumberOfDaysTransactionsWasLessThan10ThousandNaira = percentNumberOfDaysTransactionsWasLessThan10ThousandNaira;
  }


  public GetAccountAnalysisResponseEntityTransactionRoutineBreakdown percentOfBalancesBetween100ThousandTo500ThousandNaira(BigDecimal percentOfBalancesBetween100ThousandTo500ThousandNaira) {
    
    this.percentOfBalancesBetween100ThousandTo500ThousandNaira = percentOfBalancesBetween100ThousandTo500ThousandNaira;
    return this;
  }

   /**
   * Get percentOfBalancesBetween100ThousandTo500ThousandNaira
   * @return percentOfBalancesBetween100ThousandTo500ThousandNaira
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public BigDecimal getPercentOfBalancesBetween100ThousandTo500ThousandNaira() {
    return percentOfBalancesBetween100ThousandTo500ThousandNaira;
  }


  public void setPercentOfBalancesBetween100ThousandTo500ThousandNaira(BigDecimal percentOfBalancesBetween100ThousandTo500ThousandNaira) {
    this.percentOfBalancesBetween100ThousandTo500ThousandNaira = percentOfBalancesBetween100ThousandTo500ThousandNaira;
  }


  public GetAccountAnalysisResponseEntityTransactionRoutineBreakdown percentOfBalancesBetween10ThousandTo100ThousandNaira(BigDecimal percentOfBalancesBetween10ThousandTo100ThousandNaira) {
    
    this.percentOfBalancesBetween10ThousandTo100ThousandNaira = percentOfBalancesBetween10ThousandTo100ThousandNaira;
    return this;
  }

   /**
   * Get percentOfBalancesBetween10ThousandTo100ThousandNaira
   * @return percentOfBalancesBetween10ThousandTo100ThousandNaira
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public BigDecimal getPercentOfBalancesBetween10ThousandTo100ThousandNaira() {
    return percentOfBalancesBetween10ThousandTo100ThousandNaira;
  }


  public void setPercentOfBalancesBetween10ThousandTo100ThousandNaira(BigDecimal percentOfBalancesBetween10ThousandTo100ThousandNaira) {
    this.percentOfBalancesBetween10ThousandTo100ThousandNaira = percentOfBalancesBetween10ThousandTo100ThousandNaira;
  }


  public GetAccountAnalysisResponseEntityTransactionRoutineBreakdown percentOfBalancesBetween500ThousandToOneMillionNaira(BigDecimal percentOfBalancesBetween500ThousandToOneMillionNaira) {
    
    this.percentOfBalancesBetween500ThousandToOneMillionNaira = percentOfBalancesBetween500ThousandToOneMillionNaira;
    return this;
  }

   /**
   * Get percentOfBalancesBetween500ThousandToOneMillionNaira
   * @return percentOfBalancesBetween500ThousandToOneMillionNaira
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public BigDecimal getPercentOfBalancesBetween500ThousandToOneMillionNaira() {
    return percentOfBalancesBetween500ThousandToOneMillionNaira;
  }


  public void setPercentOfBalancesBetween500ThousandToOneMillionNaira(BigDecimal percentOfBalancesBetween500ThousandToOneMillionNaira) {
    this.percentOfBalancesBetween500ThousandToOneMillionNaira = percentOfBalancesBetween500ThousandToOneMillionNaira;
  }


  public GetAccountAnalysisResponseEntityTransactionRoutineBreakdown percentOfBalancesGreaterThanOneMillionNaira(BigDecimal percentOfBalancesGreaterThanOneMillionNaira) {
    
    this.percentOfBalancesGreaterThanOneMillionNaira = percentOfBalancesGreaterThanOneMillionNaira;
    return this;
  }

   /**
   * Get percentOfBalancesGreaterThanOneMillionNaira
   * @return percentOfBalancesGreaterThanOneMillionNaira
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public BigDecimal getPercentOfBalancesGreaterThanOneMillionNaira() {
    return percentOfBalancesGreaterThanOneMillionNaira;
  }


  public void setPercentOfBalancesGreaterThanOneMillionNaira(BigDecimal percentOfBalancesGreaterThanOneMillionNaira) {
    this.percentOfBalancesGreaterThanOneMillionNaira = percentOfBalancesGreaterThanOneMillionNaira;
  }


  public GetAccountAnalysisResponseEntityTransactionRoutineBreakdown percentOfBalancesLessThan10ThousandNaira(BigDecimal percentOfBalancesLessThan10ThousandNaira) {
    
    this.percentOfBalancesLessThan10ThousandNaira = percentOfBalancesLessThan10ThousandNaira;
    return this;
  }

   /**
   * Get percentOfBalancesLessThan10ThousandNaira
   * @return percentOfBalancesLessThan10ThousandNaira
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")

  public BigDecimal getPercentOfBalancesLessThan10ThousandNaira() {
    return percentOfBalancesLessThan10ThousandNaira;
  }


  public void setPercentOfBalancesLessThan10ThousandNaira(BigDecimal percentOfBalancesLessThan10ThousandNaira) {
    this.percentOfBalancesLessThan10ThousandNaira = percentOfBalancesLessThan10ThousandNaira;
  }


  public GetAccountAnalysisResponseEntityTransactionRoutineBreakdown percentOfTransactionsBetween100ThousandTo500ThousandNaira(BigDecimal percentOfTransactionsBetween100ThousandTo500ThousandNaira) {
    
    this.percentOfTransactionsBetween100ThousandTo500ThousandNaira = percentOfTransactionsBetween100ThousandTo500ThousandNaira;
    return this;
  }

   /**
   * Get percentOfTransactionsBetween100ThousandTo500ThousandNaira
   * @return percentOfTransactionsBetween100ThousandTo500ThousandNaira
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public BigDecimal getPercentOfTransactionsBetween100ThousandTo500ThousandNaira() {
    return percentOfTransactionsBetween100ThousandTo500ThousandNaira;
  }


  public void setPercentOfTransactionsBetween100ThousandTo500ThousandNaira(BigDecimal percentOfTransactionsBetween100ThousandTo500ThousandNaira) {
    this.percentOfTransactionsBetween100ThousandTo500ThousandNaira = percentOfTransactionsBetween100ThousandTo500ThousandNaira;
  }


  public GetAccountAnalysisResponseEntityTransactionRoutineBreakdown percentOfTransactionsBetween10ThousandTo100ThousandNaira(BigDecimal percentOfTransactionsBetween10ThousandTo100ThousandNaira) {
    
    this.percentOfTransactionsBetween10ThousandTo100ThousandNaira = percentOfTransactionsBetween10ThousandTo100ThousandNaira;
    return this;
  }

   /**
   * Get percentOfTransactionsBetween10ThousandTo100ThousandNaira
   * @return percentOfTransactionsBetween10ThousandTo100ThousandNaira
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0.12", value = "")

  public BigDecimal getPercentOfTransactionsBetween10ThousandTo100ThousandNaira() {
    return percentOfTransactionsBetween10ThousandTo100ThousandNaira;
  }


  public void setPercentOfTransactionsBetween10ThousandTo100ThousandNaira(BigDecimal percentOfTransactionsBetween10ThousandTo100ThousandNaira) {
    this.percentOfTransactionsBetween10ThousandTo100ThousandNaira = percentOfTransactionsBetween10ThousandTo100ThousandNaira;
  }


  public GetAccountAnalysisResponseEntityTransactionRoutineBreakdown percentOfTransactionsBetween500ThousandToOneMillionNaira(BigDecimal percentOfTransactionsBetween500ThousandToOneMillionNaira) {
    
    this.percentOfTransactionsBetween500ThousandToOneMillionNaira = percentOfTransactionsBetween500ThousandToOneMillionNaira;
    return this;
  }

   /**
   * Get percentOfTransactionsBetween500ThousandToOneMillionNaira
   * @return percentOfTransactionsBetween500ThousandToOneMillionNaira
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public BigDecimal getPercentOfTransactionsBetween500ThousandToOneMillionNaira() {
    return percentOfTransactionsBetween500ThousandToOneMillionNaira;
  }


  public void setPercentOfTransactionsBetween500ThousandToOneMillionNaira(BigDecimal percentOfTransactionsBetween500ThousandToOneMillionNaira) {
    this.percentOfTransactionsBetween500ThousandToOneMillionNaira = percentOfTransactionsBetween500ThousandToOneMillionNaira;
  }


  public GetAccountAnalysisResponseEntityTransactionRoutineBreakdown percentOfTransactionsGreaterThanOneMillionNaira(BigDecimal percentOfTransactionsGreaterThanOneMillionNaira) {
    
    this.percentOfTransactionsGreaterThanOneMillionNaira = percentOfTransactionsGreaterThanOneMillionNaira;
    return this;
  }

   /**
   * Get percentOfTransactionsGreaterThanOneMillionNaira
   * @return percentOfTransactionsGreaterThanOneMillionNaira
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public BigDecimal getPercentOfTransactionsGreaterThanOneMillionNaira() {
    return percentOfTransactionsGreaterThanOneMillionNaira;
  }


  public void setPercentOfTransactionsGreaterThanOneMillionNaira(BigDecimal percentOfTransactionsGreaterThanOneMillionNaira) {
    this.percentOfTransactionsGreaterThanOneMillionNaira = percentOfTransactionsGreaterThanOneMillionNaira;
  }


  public GetAccountAnalysisResponseEntityTransactionRoutineBreakdown percentOfTransactionsLessThan10ThousandNaira(BigDecimal percentOfTransactionsLessThan10ThousandNaira) {
    
    this.percentOfTransactionsLessThan10ThousandNaira = percentOfTransactionsLessThan10ThousandNaira;
    return this;
  }

   /**
   * Get percentOfTransactionsLessThan10ThousandNaira
   * @return percentOfTransactionsLessThan10ThousandNaira
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0.88", value = "")

  public BigDecimal getPercentOfTransactionsLessThan10ThousandNaira() {
    return percentOfTransactionsLessThan10ThousandNaira;
  }


  public void setPercentOfTransactionsLessThan10ThousandNaira(BigDecimal percentOfTransactionsLessThan10ThousandNaira) {
    this.percentOfTransactionsLessThan10ThousandNaira = percentOfTransactionsLessThan10ThousandNaira;
  }


  public GetAccountAnalysisResponseEntityTransactionRoutineBreakdown percentofCreditTransactions(BigDecimal percentofCreditTransactions) {
    
    this.percentofCreditTransactions = percentofCreditTransactions;
    return this;
  }

   /**
   * Get percentofCreditTransactions
   * @return percentofCreditTransactions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0.19", value = "")

  public BigDecimal getPercentofCreditTransactions() {
    return percentofCreditTransactions;
  }


  public void setPercentofCreditTransactions(BigDecimal percentofCreditTransactions) {
    this.percentofCreditTransactions = percentofCreditTransactions;
  }


  public GetAccountAnalysisResponseEntityTransactionRoutineBreakdown percentofDebitTransactions(BigDecimal percentofDebitTransactions) {
    
    this.percentofDebitTransactions = percentofDebitTransactions;
    return this;
  }

   /**
   * Get percentofDebitTransactions
   * @return percentofDebitTransactions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0.81", value = "")

  public BigDecimal getPercentofDebitTransactions() {
    return percentofDebitTransactions;
  }


  public void setPercentofDebitTransactions(BigDecimal percentofDebitTransactions) {
    this.percentofDebitTransactions = percentofDebitTransactions;
  }


  public GetAccountAnalysisResponseEntityTransactionRoutineBreakdown totalAmountOfTransactions(BigDecimal totalAmountOfTransactions) {
    
    this.totalAmountOfTransactions = totalAmountOfTransactions;
    return this;
  }

   /**
   * Get totalAmountOfTransactions
   * @return totalAmountOfTransactions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "129", value = "")

  public BigDecimal getTotalAmountOfTransactions() {
    return totalAmountOfTransactions;
  }


  public void setTotalAmountOfTransactions(BigDecimal totalAmountOfTransactions) {
    this.totalAmountOfTransactions = totalAmountOfTransactions;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the GetAccountAnalysisResponseEntityTransactionRoutineBreakdown instance itself
   */
  public GetAccountAnalysisResponseEntityTransactionRoutineBreakdown putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetAccountAnalysisResponseEntityTransactionRoutineBreakdown getAccountAnalysisResponseEntityTransactionRoutineBreakdown = (GetAccountAnalysisResponseEntityTransactionRoutineBreakdown) o;
    return Objects.equals(this.maximumExpense, getAccountAnalysisResponseEntityTransactionRoutineBreakdown.maximumExpense) &&
        Objects.equals(this.lastCreditReceived, getAccountAnalysisResponseEntityTransactionRoutineBreakdown.lastCreditReceived) &&
        Objects.equals(this.lastDebitMade, getAccountAnalysisResponseEntityTransactionRoutineBreakdown.lastDebitMade) &&
        Objects.equals(this.mostFrequentBalanceRange, getAccountAnalysisResponseEntityTransactionRoutineBreakdown.mostFrequentBalanceRange) &&
        Objects.equals(this.mostFrequentTransactionRange, getAccountAnalysisResponseEntityTransactionRoutineBreakdown.mostFrequentTransactionRange) &&
        Objects.equals(this.numberOfCardRequests, getAccountAnalysisResponseEntityTransactionRoutineBreakdown.numberOfCardRequests) &&
        Objects.equals(this.percentNumberOfDaysBalanceWasLessThan10ThousandNaira, getAccountAnalysisResponseEntityTransactionRoutineBreakdown.percentNumberOfDaysBalanceWasLessThan10ThousandNaira) &&
        Objects.equals(this.percentNumberOfDaysTransactionsWasLessThan10ThousandNaira, getAccountAnalysisResponseEntityTransactionRoutineBreakdown.percentNumberOfDaysTransactionsWasLessThan10ThousandNaira) &&
        Objects.equals(this.percentOfBalancesBetween100ThousandTo500ThousandNaira, getAccountAnalysisResponseEntityTransactionRoutineBreakdown.percentOfBalancesBetween100ThousandTo500ThousandNaira) &&
        Objects.equals(this.percentOfBalancesBetween10ThousandTo100ThousandNaira, getAccountAnalysisResponseEntityTransactionRoutineBreakdown.percentOfBalancesBetween10ThousandTo100ThousandNaira) &&
        Objects.equals(this.percentOfBalancesBetween500ThousandToOneMillionNaira, getAccountAnalysisResponseEntityTransactionRoutineBreakdown.percentOfBalancesBetween500ThousandToOneMillionNaira) &&
        Objects.equals(this.percentOfBalancesGreaterThanOneMillionNaira, getAccountAnalysisResponseEntityTransactionRoutineBreakdown.percentOfBalancesGreaterThanOneMillionNaira) &&
        Objects.equals(this.percentOfBalancesLessThan10ThousandNaira, getAccountAnalysisResponseEntityTransactionRoutineBreakdown.percentOfBalancesLessThan10ThousandNaira) &&
        Objects.equals(this.percentOfTransactionsBetween100ThousandTo500ThousandNaira, getAccountAnalysisResponseEntityTransactionRoutineBreakdown.percentOfTransactionsBetween100ThousandTo500ThousandNaira) &&
        Objects.equals(this.percentOfTransactionsBetween10ThousandTo100ThousandNaira, getAccountAnalysisResponseEntityTransactionRoutineBreakdown.percentOfTransactionsBetween10ThousandTo100ThousandNaira) &&
        Objects.equals(this.percentOfTransactionsBetween500ThousandToOneMillionNaira, getAccountAnalysisResponseEntityTransactionRoutineBreakdown.percentOfTransactionsBetween500ThousandToOneMillionNaira) &&
        Objects.equals(this.percentOfTransactionsGreaterThanOneMillionNaira, getAccountAnalysisResponseEntityTransactionRoutineBreakdown.percentOfTransactionsGreaterThanOneMillionNaira) &&
        Objects.equals(this.percentOfTransactionsLessThan10ThousandNaira, getAccountAnalysisResponseEntityTransactionRoutineBreakdown.percentOfTransactionsLessThan10ThousandNaira) &&
        Objects.equals(this.percentofCreditTransactions, getAccountAnalysisResponseEntityTransactionRoutineBreakdown.percentofCreditTransactions) &&
        Objects.equals(this.percentofDebitTransactions, getAccountAnalysisResponseEntityTransactionRoutineBreakdown.percentofDebitTransactions) &&
        Objects.equals(this.totalAmountOfTransactions, getAccountAnalysisResponseEntityTransactionRoutineBreakdown.totalAmountOfTransactions)&&
        Objects.equals(this.additionalProperties, getAccountAnalysisResponseEntityTransactionRoutineBreakdown.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(maximumExpense, lastCreditReceived, lastDebitMade, mostFrequentBalanceRange, mostFrequentTransactionRange, numberOfCardRequests, percentNumberOfDaysBalanceWasLessThan10ThousandNaira, percentNumberOfDaysTransactionsWasLessThan10ThousandNaira, percentOfBalancesBetween100ThousandTo500ThousandNaira, percentOfBalancesBetween10ThousandTo100ThousandNaira, percentOfBalancesBetween500ThousandToOneMillionNaira, percentOfBalancesGreaterThanOneMillionNaira, percentOfBalancesLessThan10ThousandNaira, percentOfTransactionsBetween100ThousandTo500ThousandNaira, percentOfTransactionsBetween10ThousandTo100ThousandNaira, percentOfTransactionsBetween500ThousandToOneMillionNaira, percentOfTransactionsGreaterThanOneMillionNaira, percentOfTransactionsLessThan10ThousandNaira, percentofCreditTransactions, percentofDebitTransactions, totalAmountOfTransactions, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetAccountAnalysisResponseEntityTransactionRoutineBreakdown {\n");
    sb.append("    maximumExpense: ").append(toIndentedString(maximumExpense)).append("\n");
    sb.append("    lastCreditReceived: ").append(toIndentedString(lastCreditReceived)).append("\n");
    sb.append("    lastDebitMade: ").append(toIndentedString(lastDebitMade)).append("\n");
    sb.append("    mostFrequentBalanceRange: ").append(toIndentedString(mostFrequentBalanceRange)).append("\n");
    sb.append("    mostFrequentTransactionRange: ").append(toIndentedString(mostFrequentTransactionRange)).append("\n");
    sb.append("    numberOfCardRequests: ").append(toIndentedString(numberOfCardRequests)).append("\n");
    sb.append("    percentNumberOfDaysBalanceWasLessThan10ThousandNaira: ").append(toIndentedString(percentNumberOfDaysBalanceWasLessThan10ThousandNaira)).append("\n");
    sb.append("    percentNumberOfDaysTransactionsWasLessThan10ThousandNaira: ").append(toIndentedString(percentNumberOfDaysTransactionsWasLessThan10ThousandNaira)).append("\n");
    sb.append("    percentOfBalancesBetween100ThousandTo500ThousandNaira: ").append(toIndentedString(percentOfBalancesBetween100ThousandTo500ThousandNaira)).append("\n");
    sb.append("    percentOfBalancesBetween10ThousandTo100ThousandNaira: ").append(toIndentedString(percentOfBalancesBetween10ThousandTo100ThousandNaira)).append("\n");
    sb.append("    percentOfBalancesBetween500ThousandToOneMillionNaira: ").append(toIndentedString(percentOfBalancesBetween500ThousandToOneMillionNaira)).append("\n");
    sb.append("    percentOfBalancesGreaterThanOneMillionNaira: ").append(toIndentedString(percentOfBalancesGreaterThanOneMillionNaira)).append("\n");
    sb.append("    percentOfBalancesLessThan10ThousandNaira: ").append(toIndentedString(percentOfBalancesLessThan10ThousandNaira)).append("\n");
    sb.append("    percentOfTransactionsBetween100ThousandTo500ThousandNaira: ").append(toIndentedString(percentOfTransactionsBetween100ThousandTo500ThousandNaira)).append("\n");
    sb.append("    percentOfTransactionsBetween10ThousandTo100ThousandNaira: ").append(toIndentedString(percentOfTransactionsBetween10ThousandTo100ThousandNaira)).append("\n");
    sb.append("    percentOfTransactionsBetween500ThousandToOneMillionNaira: ").append(toIndentedString(percentOfTransactionsBetween500ThousandToOneMillionNaira)).append("\n");
    sb.append("    percentOfTransactionsGreaterThanOneMillionNaira: ").append(toIndentedString(percentOfTransactionsGreaterThanOneMillionNaira)).append("\n");
    sb.append("    percentOfTransactionsLessThan10ThousandNaira: ").append(toIndentedString(percentOfTransactionsLessThan10ThousandNaira)).append("\n");
    sb.append("    percentofCreditTransactions: ").append(toIndentedString(percentofCreditTransactions)).append("\n");
    sb.append("    percentofDebitTransactions: ").append(toIndentedString(percentofDebitTransactions)).append("\n");
    sb.append("    totalAmountOfTransactions: ").append(toIndentedString(totalAmountOfTransactions)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("MaximumExpense");
    openapiFields.add("lastCreditReceived");
    openapiFields.add("lastDebitMade");
    openapiFields.add("mostFrequentBalanceRange");
    openapiFields.add("mostFrequentTransactionRange");
    openapiFields.add("numberOfCardRequests");
    openapiFields.add("percentNumberOfDaysBalanceWasLessThan10ThousandNaira");
    openapiFields.add("percentNumberOfDaysTransactionsWasLessThan10ThousandNaira");
    openapiFields.add("percentOfBalancesBetween100ThousandTo500ThousandNaira");
    openapiFields.add("percentOfBalancesBetween10ThousandTo100ThousandNaira");
    openapiFields.add("percentOfBalancesBetween500ThousandToOneMillionNaira");
    openapiFields.add("percentOfBalancesGreaterThanOneMillionNaira");
    openapiFields.add("percentOfBalancesLessThan10ThousandNaira");
    openapiFields.add("percentOfTransactionsBetween100ThousandTo500ThousandNaira");
    openapiFields.add("percentOfTransactionsBetween10ThousandTo100ThousandNaira");
    openapiFields.add("percentOfTransactionsBetween500ThousandToOneMillionNaira");
    openapiFields.add("percentOfTransactionsGreaterThanOneMillionNaira");
    openapiFields.add("percentOfTransactionsLessThan10ThousandNaira");
    openapiFields.add("percentofCreditTransactions");
    openapiFields.add("percentofDebitTransactions");
    openapiFields.add("totalAmountOfTransactions");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to GetAccountAnalysisResponseEntityTransactionRoutineBreakdown
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!GetAccountAnalysisResponseEntityTransactionRoutineBreakdown.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetAccountAnalysisResponseEntityTransactionRoutineBreakdown is not found in the empty JSON string", GetAccountAnalysisResponseEntityTransactionRoutineBreakdown.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("lastCreditReceived") != null && !jsonObj.get("lastCreditReceived").isJsonNull()) && !jsonObj.get("lastCreditReceived").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastCreditReceived` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastCreditReceived").toString()));
      }
      if ((jsonObj.get("lastDebitMade") != null && !jsonObj.get("lastDebitMade").isJsonNull()) && !jsonObj.get("lastDebitMade").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastDebitMade` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastDebitMade").toString()));
      }
      if ((jsonObj.get("mostFrequentBalanceRange") != null && !jsonObj.get("mostFrequentBalanceRange").isJsonNull()) && !jsonObj.get("mostFrequentBalanceRange").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mostFrequentBalanceRange` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mostFrequentBalanceRange").toString()));
      }
      if ((jsonObj.get("mostFrequentTransactionRange") != null && !jsonObj.get("mostFrequentTransactionRange").isJsonNull()) && !jsonObj.get("mostFrequentTransactionRange").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mostFrequentTransactionRange` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mostFrequentTransactionRange").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetAccountAnalysisResponseEntityTransactionRoutineBreakdown.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetAccountAnalysisResponseEntityTransactionRoutineBreakdown' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetAccountAnalysisResponseEntityTransactionRoutineBreakdown> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetAccountAnalysisResponseEntityTransactionRoutineBreakdown.class));

       return (TypeAdapter<T>) new TypeAdapter<GetAccountAnalysisResponseEntityTransactionRoutineBreakdown>() {
           @Override
           public void write(JsonWriter out, GetAccountAnalysisResponseEntityTransactionRoutineBreakdown value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public GetAccountAnalysisResponseEntityTransactionRoutineBreakdown read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             GetAccountAnalysisResponseEntityTransactionRoutineBreakdown instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of GetAccountAnalysisResponseEntityTransactionRoutineBreakdown given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of GetAccountAnalysisResponseEntityTransactionRoutineBreakdown
  * @throws IOException if the JSON string is invalid with respect to GetAccountAnalysisResponseEntityTransactionRoutineBreakdown
  */
  public static GetAccountAnalysisResponseEntityTransactionRoutineBreakdown fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetAccountAnalysisResponseEntityTransactionRoutineBreakdown.class);
  }

 /**
  * Convert an instance of GetAccountAnalysisResponseEntityTransactionRoutineBreakdown to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

