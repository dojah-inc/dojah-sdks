/*
 * DOJAH Publilc APIs
 * Use Dojah to verify, onboard and manage user identity across Africa!
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.dojah.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.dojah.client.JSON;

/**
 * FraudScreenUserResponseEntityEmailCheckResultDomainDetails
 */
@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class FraudScreenUserResponseEntityEmailCheckResultDomainDetails {
  public static final String SERIALIZED_NAME_DOMAIN = "domain";
  @SerializedName(SERIALIZED_NAME_DOMAIN)
  private String domain;

  public static final String SERIALIZED_NAME_TLD = "tld";
  @SerializedName(SERIALIZED_NAME_TLD)
  private String tld;

  public static final String SERIALIZED_NAME_REGISTERED = "registered";
  @SerializedName(SERIALIZED_NAME_REGISTERED)
  private Boolean registered;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private String created;

  public static final String SERIALIZED_NAME_UPDATED = "updated";
  @SerializedName(SERIALIZED_NAME_UPDATED)
  private String updated;

  public static final String SERIALIZED_NAME_EXPIRES = "expires";
  @SerializedName(SERIALIZED_NAME_EXPIRES)
  private String expires;

  public static final String SERIALIZED_NAME_REGISTRAR_NAME = "registrar_name";
  @SerializedName(SERIALIZED_NAME_REGISTRAR_NAME)
  private String registrarName;

  public static final String SERIALIZED_NAME_REGISTERED_TO = "registered_to";
  @SerializedName(SERIALIZED_NAME_REGISTERED_TO)
  private String registeredTo;

  public static final String SERIALIZED_NAME_DISPOSABLE = "disposable";
  @SerializedName(SERIALIZED_NAME_DISPOSABLE)
  private Boolean disposable;

  public static final String SERIALIZED_NAME_FREE = "free";
  @SerializedName(SERIALIZED_NAME_FREE)
  private Boolean free;

  public static final String SERIALIZED_NAME_CUSTOM = "custom";
  @SerializedName(SERIALIZED_NAME_CUSTOM)
  private Boolean custom;

  public static final String SERIALIZED_NAME_DMARC_ENFORCED = "dmarc_enforced";
  @SerializedName(SERIALIZED_NAME_DMARC_ENFORCED)
  private Boolean dmarcEnforced;

  public static final String SERIALIZED_NAME_SPF_STRICT = "spf_strict";
  @SerializedName(SERIALIZED_NAME_SPF_STRICT)
  private Boolean spfStrict;

  public static final String SERIALIZED_NAME_VALID_MX = "valid_mx";
  @SerializedName(SERIALIZED_NAME_VALID_MX)
  private Boolean validMx;

  public static final String SERIALIZED_NAME_ACCEPT_ALL = "accept_all";
  @SerializedName(SERIALIZED_NAME_ACCEPT_ALL)
  private Boolean acceptAll;

  public static final String SERIALIZED_NAME_SUSPICIOUS_TLD = "suspicious_tld";
  @SerializedName(SERIALIZED_NAME_SUSPICIOUS_TLD)
  private Boolean suspiciousTld;

  public static final String SERIALIZED_NAME_WEBSITE_EXISTS = "website_exists";
  @SerializedName(SERIALIZED_NAME_WEBSITE_EXISTS)
  private Boolean websiteExists;

  public FraudScreenUserResponseEntityEmailCheckResultDomainDetails() {
  }

  public FraudScreenUserResponseEntityEmailCheckResultDomainDetails domain(String domain) {

    
    
    
    
    this.domain = domain;
    return this;
  }

   /**
   * Get domain
   * @return domain
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "gmail.com", value = "")

  public String getDomain() {
    return domain;
  }


  public void setDomain(String domain) {

    
    
    
    this.domain = domain;
  }


  public FraudScreenUserResponseEntityEmailCheckResultDomainDetails tld(String tld) {

    
    
    
    
    this.tld = tld;
    return this;
  }

   /**
   * Get tld
   * @return tld
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = ".com", value = "")

  public String getTld() {
    return tld;
  }


  public void setTld(String tld) {

    
    
    
    this.tld = tld;
  }


  public FraudScreenUserResponseEntityEmailCheckResultDomainDetails registered(Boolean registered) {

    
    
    
    
    this.registered = registered;
    return this;
  }

   /**
   * Get registered
   * @return registered
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "")

  public Boolean getRegistered() {
    return registered;
  }


  public void setRegistered(Boolean registered) {

    
    
    
    this.registered = registered;
  }


  public FraudScreenUserResponseEntityEmailCheckResultDomainDetails created(String created) {

    
    
    
    
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1995-08-13 04:00:00", value = "")

  public String getCreated() {
    return created;
  }


  public void setCreated(String created) {

    
    
    
    this.created = created;
  }


  public FraudScreenUserResponseEntityEmailCheckResultDomainDetails updated(String updated) {

    
    
    
    
    this.updated = updated;
    return this;
  }

   /**
   * Get updated
   * @return updated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-07-11 09:25:59", value = "")

  public String getUpdated() {
    return updated;
  }


  public void setUpdated(String updated) {

    
    
    
    this.updated = updated;
  }


  public FraudScreenUserResponseEntityEmailCheckResultDomainDetails expires(String expires) {

    
    
    
    
    this.expires = expires;
    return this;
  }

   /**
   * Get expires
   * @return expires
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2023-08-12 04:00:00", value = "")

  public String getExpires() {
    return expires;
  }


  public void setExpires(String expires) {

    
    
    
    this.expires = expires;
  }


  public FraudScreenUserResponseEntityEmailCheckResultDomainDetails registrarName(String registrarName) {

    
    
    
    
    this.registrarName = registrarName;
    return this;
  }

   /**
   * Get registrarName
   * @return registrarName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "MarkMonitor Inc.", value = "")

  public String getRegistrarName() {
    return registrarName;
  }


  public void setRegistrarName(String registrarName) {

    
    
    
    this.registrarName = registrarName;
  }


  public FraudScreenUserResponseEntityEmailCheckResultDomainDetails registeredTo(String registeredTo) {

    
    
    
    
    this.registeredTo = registeredTo;
    return this;
  }

   /**
   * Get registeredTo
   * @return registeredTo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Google LLC", value = "")

  public String getRegisteredTo() {
    return registeredTo;
  }


  public void setRegisteredTo(String registeredTo) {

    
    
    
    this.registeredTo = registeredTo;
  }


  public FraudScreenUserResponseEntityEmailCheckResultDomainDetails disposable(Boolean disposable) {

    
    
    
    
    this.disposable = disposable;
    return this;
  }

   /**
   * Get disposable
   * @return disposable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getDisposable() {
    return disposable;
  }


  public void setDisposable(Boolean disposable) {

    
    
    
    this.disposable = disposable;
  }


  public FraudScreenUserResponseEntityEmailCheckResultDomainDetails free(Boolean free) {

    
    
    
    
    this.free = free;
    return this;
  }

   /**
   * Get free
   * @return free
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "")

  public Boolean getFree() {
    return free;
  }


  public void setFree(Boolean free) {

    
    
    
    this.free = free;
  }


  public FraudScreenUserResponseEntityEmailCheckResultDomainDetails custom(Boolean custom) {

    
    
    
    
    this.custom = custom;
    return this;
  }

   /**
   * Get custom
   * @return custom
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getCustom() {
    return custom;
  }


  public void setCustom(Boolean custom) {

    
    
    
    this.custom = custom;
  }


  public FraudScreenUserResponseEntityEmailCheckResultDomainDetails dmarcEnforced(Boolean dmarcEnforced) {

    
    
    
    
    this.dmarcEnforced = dmarcEnforced;
    return this;
  }

   /**
   * Get dmarcEnforced
   * @return dmarcEnforced
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "")

  public Boolean getDmarcEnforced() {
    return dmarcEnforced;
  }


  public void setDmarcEnforced(Boolean dmarcEnforced) {

    
    
    
    this.dmarcEnforced = dmarcEnforced;
  }


  public FraudScreenUserResponseEntityEmailCheckResultDomainDetails spfStrict(Boolean spfStrict) {

    
    
    
    
    this.spfStrict = spfStrict;
    return this;
  }

   /**
   * Get spfStrict
   * @return spfStrict
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "")

  public Boolean getSpfStrict() {
    return spfStrict;
  }


  public void setSpfStrict(Boolean spfStrict) {

    
    
    
    this.spfStrict = spfStrict;
  }


  public FraudScreenUserResponseEntityEmailCheckResultDomainDetails validMx(Boolean validMx) {

    
    
    
    
    this.validMx = validMx;
    return this;
  }

   /**
   * Get validMx
   * @return validMx
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "")

  public Boolean getValidMx() {
    return validMx;
  }


  public void setValidMx(Boolean validMx) {

    
    
    
    this.validMx = validMx;
  }


  public FraudScreenUserResponseEntityEmailCheckResultDomainDetails acceptAll(Boolean acceptAll) {

    
    
    
    
    this.acceptAll = acceptAll;
    return this;
  }

   /**
   * Get acceptAll
   * @return acceptAll
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getAcceptAll() {
    return acceptAll;
  }


  public void setAcceptAll(Boolean acceptAll) {

    
    
    
    this.acceptAll = acceptAll;
  }


  public FraudScreenUserResponseEntityEmailCheckResultDomainDetails suspiciousTld(Boolean suspiciousTld) {

    
    
    
    
    this.suspiciousTld = suspiciousTld;
    return this;
  }

   /**
   * Get suspiciousTld
   * @return suspiciousTld
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getSuspiciousTld() {
    return suspiciousTld;
  }


  public void setSuspiciousTld(Boolean suspiciousTld) {

    
    
    
    this.suspiciousTld = suspiciousTld;
  }


  public FraudScreenUserResponseEntityEmailCheckResultDomainDetails websiteExists(Boolean websiteExists) {

    
    
    
    
    this.websiteExists = websiteExists;
    return this;
  }

   /**
   * Get websiteExists
   * @return websiteExists
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "")

  public Boolean getWebsiteExists() {
    return websiteExists;
  }


  public void setWebsiteExists(Boolean websiteExists) {

    
    
    
    this.websiteExists = websiteExists;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the FraudScreenUserResponseEntityEmailCheckResultDomainDetails instance itself
   */
  public FraudScreenUserResponseEntityEmailCheckResultDomainDetails putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FraudScreenUserResponseEntityEmailCheckResultDomainDetails fraudScreenUserResponseEntityEmailCheckResultDomainDetails = (FraudScreenUserResponseEntityEmailCheckResultDomainDetails) o;
    return Objects.equals(this.domain, fraudScreenUserResponseEntityEmailCheckResultDomainDetails.domain) &&
        Objects.equals(this.tld, fraudScreenUserResponseEntityEmailCheckResultDomainDetails.tld) &&
        Objects.equals(this.registered, fraudScreenUserResponseEntityEmailCheckResultDomainDetails.registered) &&
        Objects.equals(this.created, fraudScreenUserResponseEntityEmailCheckResultDomainDetails.created) &&
        Objects.equals(this.updated, fraudScreenUserResponseEntityEmailCheckResultDomainDetails.updated) &&
        Objects.equals(this.expires, fraudScreenUserResponseEntityEmailCheckResultDomainDetails.expires) &&
        Objects.equals(this.registrarName, fraudScreenUserResponseEntityEmailCheckResultDomainDetails.registrarName) &&
        Objects.equals(this.registeredTo, fraudScreenUserResponseEntityEmailCheckResultDomainDetails.registeredTo) &&
        Objects.equals(this.disposable, fraudScreenUserResponseEntityEmailCheckResultDomainDetails.disposable) &&
        Objects.equals(this.free, fraudScreenUserResponseEntityEmailCheckResultDomainDetails.free) &&
        Objects.equals(this.custom, fraudScreenUserResponseEntityEmailCheckResultDomainDetails.custom) &&
        Objects.equals(this.dmarcEnforced, fraudScreenUserResponseEntityEmailCheckResultDomainDetails.dmarcEnforced) &&
        Objects.equals(this.spfStrict, fraudScreenUserResponseEntityEmailCheckResultDomainDetails.spfStrict) &&
        Objects.equals(this.validMx, fraudScreenUserResponseEntityEmailCheckResultDomainDetails.validMx) &&
        Objects.equals(this.acceptAll, fraudScreenUserResponseEntityEmailCheckResultDomainDetails.acceptAll) &&
        Objects.equals(this.suspiciousTld, fraudScreenUserResponseEntityEmailCheckResultDomainDetails.suspiciousTld) &&
        Objects.equals(this.websiteExists, fraudScreenUserResponseEntityEmailCheckResultDomainDetails.websiteExists)&&
        Objects.equals(this.additionalProperties, fraudScreenUserResponseEntityEmailCheckResultDomainDetails.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(domain, tld, registered, created, updated, expires, registrarName, registeredTo, disposable, free, custom, dmarcEnforced, spfStrict, validMx, acceptAll, suspiciousTld, websiteExists, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FraudScreenUserResponseEntityEmailCheckResultDomainDetails {\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    tld: ").append(toIndentedString(tld)).append("\n");
    sb.append("    registered: ").append(toIndentedString(registered)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    expires: ").append(toIndentedString(expires)).append("\n");
    sb.append("    registrarName: ").append(toIndentedString(registrarName)).append("\n");
    sb.append("    registeredTo: ").append(toIndentedString(registeredTo)).append("\n");
    sb.append("    disposable: ").append(toIndentedString(disposable)).append("\n");
    sb.append("    free: ").append(toIndentedString(free)).append("\n");
    sb.append("    custom: ").append(toIndentedString(custom)).append("\n");
    sb.append("    dmarcEnforced: ").append(toIndentedString(dmarcEnforced)).append("\n");
    sb.append("    spfStrict: ").append(toIndentedString(spfStrict)).append("\n");
    sb.append("    validMx: ").append(toIndentedString(validMx)).append("\n");
    sb.append("    acceptAll: ").append(toIndentedString(acceptAll)).append("\n");
    sb.append("    suspiciousTld: ").append(toIndentedString(suspiciousTld)).append("\n");
    sb.append("    websiteExists: ").append(toIndentedString(websiteExists)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("domain");
    openapiFields.add("tld");
    openapiFields.add("registered");
    openapiFields.add("created");
    openapiFields.add("updated");
    openapiFields.add("expires");
    openapiFields.add("registrar_name");
    openapiFields.add("registered_to");
    openapiFields.add("disposable");
    openapiFields.add("free");
    openapiFields.add("custom");
    openapiFields.add("dmarc_enforced");
    openapiFields.add("spf_strict");
    openapiFields.add("valid_mx");
    openapiFields.add("accept_all");
    openapiFields.add("suspicious_tld");
    openapiFields.add("website_exists");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to FraudScreenUserResponseEntityEmailCheckResultDomainDetails
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!FraudScreenUserResponseEntityEmailCheckResultDomainDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FraudScreenUserResponseEntityEmailCheckResultDomainDetails is not found in the empty JSON string", FraudScreenUserResponseEntityEmailCheckResultDomainDetails.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("domain") != null && !jsonObj.get("domain").isJsonNull()) && !jsonObj.get("domain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `domain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("domain").toString()));
      }
      if ((jsonObj.get("tld") != null && !jsonObj.get("tld").isJsonNull()) && !jsonObj.get("tld").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tld` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tld").toString()));
      }
      if ((jsonObj.get("created") != null && !jsonObj.get("created").isJsonNull()) && !jsonObj.get("created").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created").toString()));
      }
      if ((jsonObj.get("updated") != null && !jsonObj.get("updated").isJsonNull()) && !jsonObj.get("updated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updated").toString()));
      }
      if ((jsonObj.get("expires") != null && !jsonObj.get("expires").isJsonNull()) && !jsonObj.get("expires").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expires` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expires").toString()));
      }
      if ((jsonObj.get("registrar_name") != null && !jsonObj.get("registrar_name").isJsonNull()) && !jsonObj.get("registrar_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `registrar_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("registrar_name").toString()));
      }
      if ((jsonObj.get("registered_to") != null && !jsonObj.get("registered_to").isJsonNull()) && !jsonObj.get("registered_to").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `registered_to` to be a primitive type in the JSON string but got `%s`", jsonObj.get("registered_to").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FraudScreenUserResponseEntityEmailCheckResultDomainDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FraudScreenUserResponseEntityEmailCheckResultDomainDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FraudScreenUserResponseEntityEmailCheckResultDomainDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FraudScreenUserResponseEntityEmailCheckResultDomainDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<FraudScreenUserResponseEntityEmailCheckResultDomainDetails>() {
           @Override
           public void write(JsonWriter out, FraudScreenUserResponseEntityEmailCheckResultDomainDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public FraudScreenUserResponseEntityEmailCheckResultDomainDetails read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             FraudScreenUserResponseEntityEmailCheckResultDomainDetails instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of FraudScreenUserResponseEntityEmailCheckResultDomainDetails given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of FraudScreenUserResponseEntityEmailCheckResultDomainDetails
  * @throws IOException if the JSON string is invalid with respect to FraudScreenUserResponseEntityEmailCheckResultDomainDetails
  */
  public static FraudScreenUserResponseEntityEmailCheckResultDomainDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FraudScreenUserResponseEntityEmailCheckResultDomainDetails.class);
  }

 /**
  * Convert an instance of FraudScreenUserResponseEntityEmailCheckResultDomainDetails to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

