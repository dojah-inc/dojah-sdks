/*
 * DOJAH Publilc APIs
 * Use Dojah to verify, onboard and manage user identity across Africa!
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.dojah.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.dojah.client.model.FraudScreenUserResponseEntityEmailCheckResult;
import com.konfigthis.dojah.client.model.FraudScreenUserResponseEntityIpCheckResult;
import com.konfigthis.dojah.client.model.FraudScreenUserResponseEntityPhoneCheckResult;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.dojah.client.JSON;

/**
 * FraudScreenUserResponseEntity
 */
@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class FraudScreenUserResponseEntity {
  public static final String SERIALIZED_NAME_AML_SCREENING_RESULT = "aml_screening_result";
  @SerializedName(SERIALIZED_NAME_AML_SCREENING_RESULT)
  private String amlScreeningResult;

  public static final String SERIALIZED_NAME_IP_CHECK_RESULT = "ip_check_result";
  @SerializedName(SERIALIZED_NAME_IP_CHECK_RESULT)
  private FraudScreenUserResponseEntityIpCheckResult ipCheckResult;

  public static final String SERIALIZED_NAME_EMAIL_CHECK_RESULT = "email_check_result";
  @SerializedName(SERIALIZED_NAME_EMAIL_CHECK_RESULT)
  private FraudScreenUserResponseEntityEmailCheckResult emailCheckResult;

  public static final String SERIALIZED_NAME_PHONE_CHECK_RESULT = "phone_check_result";
  @SerializedName(SERIALIZED_NAME_PHONE_CHECK_RESULT)
  private FraudScreenUserResponseEntityPhoneCheckResult phoneCheckResult;

  public static final String SERIALIZED_NAME_OVERALL_RISK_SCORE = "overall_risk_score";
  @SerializedName(SERIALIZED_NAME_OVERALL_RISK_SCORE)
  private Double overallRiskScore;

  public FraudScreenUserResponseEntity() {
  }

  public FraudScreenUserResponseEntity amlScreeningResult(String amlScreeningResult) {

    
    
    
    
    this.amlScreeningResult = amlScreeningResult;
    return this;
  }

   /**
   * Get amlScreeningResult
   * @return amlScreeningResult
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAmlScreeningResult() {
    return amlScreeningResult;
  }


  public void setAmlScreeningResult(String amlScreeningResult) {

    
    
    
    this.amlScreeningResult = amlScreeningResult;
  }


  public FraudScreenUserResponseEntity ipCheckResult(FraudScreenUserResponseEntityIpCheckResult ipCheckResult) {

    
    
    
    
    this.ipCheckResult = ipCheckResult;
    return this;
  }

   /**
   * Get ipCheckResult
   * @return ipCheckResult
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FraudScreenUserResponseEntityIpCheckResult getIpCheckResult() {
    return ipCheckResult;
  }


  public void setIpCheckResult(FraudScreenUserResponseEntityIpCheckResult ipCheckResult) {

    
    
    
    this.ipCheckResult = ipCheckResult;
  }


  public FraudScreenUserResponseEntity emailCheckResult(FraudScreenUserResponseEntityEmailCheckResult emailCheckResult) {

    
    
    
    
    this.emailCheckResult = emailCheckResult;
    return this;
  }

   /**
   * Get emailCheckResult
   * @return emailCheckResult
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FraudScreenUserResponseEntityEmailCheckResult getEmailCheckResult() {
    return emailCheckResult;
  }


  public void setEmailCheckResult(FraudScreenUserResponseEntityEmailCheckResult emailCheckResult) {

    
    
    
    this.emailCheckResult = emailCheckResult;
  }


  public FraudScreenUserResponseEntity phoneCheckResult(FraudScreenUserResponseEntityPhoneCheckResult phoneCheckResult) {

    
    
    
    
    this.phoneCheckResult = phoneCheckResult;
    return this;
  }

   /**
   * Get phoneCheckResult
   * @return phoneCheckResult
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FraudScreenUserResponseEntityPhoneCheckResult getPhoneCheckResult() {
    return phoneCheckResult;
  }


  public void setPhoneCheckResult(FraudScreenUserResponseEntityPhoneCheckResult phoneCheckResult) {

    
    
    
    this.phoneCheckResult = phoneCheckResult;
  }


  public FraudScreenUserResponseEntity overallRiskScore(Double overallRiskScore) {

    
    
    
    
    this.overallRiskScore = overallRiskScore;
    return this;
  }

  public FraudScreenUserResponseEntity overallRiskScore(Integer overallRiskScore) {

    
    
    
    
    this.overallRiskScore = overallRiskScore.doubleValue();
    return this;
  }

   /**
   * Get overallRiskScore
   * @return overallRiskScore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public Double getOverallRiskScore() {
    return overallRiskScore;
  }


  public void setOverallRiskScore(Double overallRiskScore) {

    
    
    
    this.overallRiskScore = overallRiskScore;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the FraudScreenUserResponseEntity instance itself
   */
  public FraudScreenUserResponseEntity putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FraudScreenUserResponseEntity fraudScreenUserResponseEntity = (FraudScreenUserResponseEntity) o;
    return Objects.equals(this.amlScreeningResult, fraudScreenUserResponseEntity.amlScreeningResult) &&
        Objects.equals(this.ipCheckResult, fraudScreenUserResponseEntity.ipCheckResult) &&
        Objects.equals(this.emailCheckResult, fraudScreenUserResponseEntity.emailCheckResult) &&
        Objects.equals(this.phoneCheckResult, fraudScreenUserResponseEntity.phoneCheckResult) &&
        Objects.equals(this.overallRiskScore, fraudScreenUserResponseEntity.overallRiskScore)&&
        Objects.equals(this.additionalProperties, fraudScreenUserResponseEntity.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(amlScreeningResult, ipCheckResult, emailCheckResult, phoneCheckResult, overallRiskScore, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FraudScreenUserResponseEntity {\n");
    sb.append("    amlScreeningResult: ").append(toIndentedString(amlScreeningResult)).append("\n");
    sb.append("    ipCheckResult: ").append(toIndentedString(ipCheckResult)).append("\n");
    sb.append("    emailCheckResult: ").append(toIndentedString(emailCheckResult)).append("\n");
    sb.append("    phoneCheckResult: ").append(toIndentedString(phoneCheckResult)).append("\n");
    sb.append("    overallRiskScore: ").append(toIndentedString(overallRiskScore)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("aml_screening_result");
    openapiFields.add("ip_check_result");
    openapiFields.add("email_check_result");
    openapiFields.add("phone_check_result");
    openapiFields.add("overall_risk_score");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to FraudScreenUserResponseEntity
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!FraudScreenUserResponseEntity.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FraudScreenUserResponseEntity is not found in the empty JSON string", FraudScreenUserResponseEntity.openapiRequiredFields.toString()));
        }
      }
      if (!jsonObj.get("aml_screening_result").isJsonNull() && (jsonObj.get("aml_screening_result") != null && !jsonObj.get("aml_screening_result").isJsonNull()) && !jsonObj.get("aml_screening_result").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aml_screening_result` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aml_screening_result").toString()));
      }
      // validate the optional field `ip_check_result`
      if (jsonObj.get("ip_check_result") != null && !jsonObj.get("ip_check_result").isJsonNull()) {
        FraudScreenUserResponseEntityIpCheckResult.validateJsonObject(jsonObj.getAsJsonObject("ip_check_result"));
      }
      // validate the optional field `email_check_result`
      if (jsonObj.get("email_check_result") != null && !jsonObj.get("email_check_result").isJsonNull()) {
        FraudScreenUserResponseEntityEmailCheckResult.validateJsonObject(jsonObj.getAsJsonObject("email_check_result"));
      }
      // validate the optional field `phone_check_result`
      if (jsonObj.get("phone_check_result") != null && !jsonObj.get("phone_check_result").isJsonNull()) {
        FraudScreenUserResponseEntityPhoneCheckResult.validateJsonObject(jsonObj.getAsJsonObject("phone_check_result"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FraudScreenUserResponseEntity.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FraudScreenUserResponseEntity' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FraudScreenUserResponseEntity> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FraudScreenUserResponseEntity.class));

       return (TypeAdapter<T>) new TypeAdapter<FraudScreenUserResponseEntity>() {
           @Override
           public void write(JsonWriter out, FraudScreenUserResponseEntity value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public FraudScreenUserResponseEntity read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             FraudScreenUserResponseEntity instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of FraudScreenUserResponseEntity given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of FraudScreenUserResponseEntity
  * @throws IOException if the JSON string is invalid with respect to FraudScreenUserResponseEntity
  */
  public static FraudScreenUserResponseEntity fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FraudScreenUserResponseEntity.class);
  }

 /**
  * Convert an instance of FraudScreenUserResponseEntity to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

