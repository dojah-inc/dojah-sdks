/*
 * DOJAH APIs
 * Use Dojah to verify, onboard and manage user identity across Africa!
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.dojah.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.dojah.client.JSON;

/**
 * VerifyPhotoIdWithSelfieResponseEntitySelfie
 */
@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class VerifyPhotoIdWithSelfieResponseEntitySelfie {
  public static final String SERIALIZED_NAME_CONFIDENCE_VALUE = "confidence_value";
  @SerializedName(SERIALIZED_NAME_CONFIDENCE_VALUE)
  private BigDecimal confidenceValue;

  public static final String SERIALIZED_NAME_MATCH = "match";
  @SerializedName(SERIALIZED_NAME_MATCH)
  private Boolean match;

  public static final String SERIALIZED_NAME_PHOTO_ID_IMAGE_BLURRY = "photoId_image_blurry";
  @SerializedName(SERIALIZED_NAME_PHOTO_ID_IMAGE_BLURRY)
  private Boolean photoIdImageBlurry;

  public static final String SERIALIZED_NAME_SELFIE_IMAGE_BLURRY = "selfie_image_blurry";
  @SerializedName(SERIALIZED_NAME_SELFIE_IMAGE_BLURRY)
  private Boolean selfieImageBlurry;

  public static final String SERIALIZED_NAME_SELFIE_GLARE = "selfie_glare";
  @SerializedName(SERIALIZED_NAME_SELFIE_GLARE)
  private Boolean selfieGlare;

  public static final String SERIALIZED_NAME_PHOTO_ID_GLARE = "photoId_glare";
  @SerializedName(SERIALIZED_NAME_PHOTO_ID_GLARE)
  private Boolean photoIdGlare;

  public static final String SERIALIZED_NAME_AGE_RANGE = "age_range";
  @SerializedName(SERIALIZED_NAME_AGE_RANGE)
  private String ageRange;

  public static final String SERIALIZED_NAME_SUNGLASSES = "sunglasses";
  @SerializedName(SERIALIZED_NAME_SUNGLASSES)
  private Boolean sunglasses;

  public VerifyPhotoIdWithSelfieResponseEntitySelfie() {
  }

  public VerifyPhotoIdWithSelfieResponseEntitySelfie confidenceValue(BigDecimal confidenceValue) {
    
    this.confidenceValue = confidenceValue;
    return this;
  }

   /**
   * Get confidenceValue
   * @return confidenceValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "90", value = "")

  public BigDecimal getConfidenceValue() {
    return confidenceValue;
  }


  public void setConfidenceValue(BigDecimal confidenceValue) {
    this.confidenceValue = confidenceValue;
  }


  public VerifyPhotoIdWithSelfieResponseEntitySelfie match(Boolean match) {
    
    this.match = match;
    return this;
  }

   /**
   * Get match
   * @return match
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "")

  public Boolean getMatch() {
    return match;
  }


  public void setMatch(Boolean match) {
    this.match = match;
  }


  public VerifyPhotoIdWithSelfieResponseEntitySelfie photoIdImageBlurry(Boolean photoIdImageBlurry) {
    
    this.photoIdImageBlurry = photoIdImageBlurry;
    return this;
  }

   /**
   * Get photoIdImageBlurry
   * @return photoIdImageBlurry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getPhotoIdImageBlurry() {
    return photoIdImageBlurry;
  }


  public void setPhotoIdImageBlurry(Boolean photoIdImageBlurry) {
    this.photoIdImageBlurry = photoIdImageBlurry;
  }


  public VerifyPhotoIdWithSelfieResponseEntitySelfie selfieImageBlurry(Boolean selfieImageBlurry) {
    
    this.selfieImageBlurry = selfieImageBlurry;
    return this;
  }

   /**
   * Get selfieImageBlurry
   * @return selfieImageBlurry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getSelfieImageBlurry() {
    return selfieImageBlurry;
  }


  public void setSelfieImageBlurry(Boolean selfieImageBlurry) {
    this.selfieImageBlurry = selfieImageBlurry;
  }


  public VerifyPhotoIdWithSelfieResponseEntitySelfie selfieGlare(Boolean selfieGlare) {
    
    this.selfieGlare = selfieGlare;
    return this;
  }

   /**
   * Get selfieGlare
   * @return selfieGlare
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "")

  public Boolean getSelfieGlare() {
    return selfieGlare;
  }


  public void setSelfieGlare(Boolean selfieGlare) {
    this.selfieGlare = selfieGlare;
  }


  public VerifyPhotoIdWithSelfieResponseEntitySelfie photoIdGlare(Boolean photoIdGlare) {
    
    this.photoIdGlare = photoIdGlare;
    return this;
  }

   /**
   * Get photoIdGlare
   * @return photoIdGlare
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "")

  public Boolean getPhotoIdGlare() {
    return photoIdGlare;
  }


  public void setPhotoIdGlare(Boolean photoIdGlare) {
    this.photoIdGlare = photoIdGlare;
  }


  public VerifyPhotoIdWithSelfieResponseEntitySelfie ageRange(String ageRange) {
    
    this.ageRange = ageRange;
    return this;
  }

   /**
   * Get ageRange
   * @return ageRange
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "25-35 years", value = "")

  public String getAgeRange() {
    return ageRange;
  }


  public void setAgeRange(String ageRange) {
    this.ageRange = ageRange;
  }


  public VerifyPhotoIdWithSelfieResponseEntitySelfie sunglasses(Boolean sunglasses) {
    
    this.sunglasses = sunglasses;
    return this;
  }

   /**
   * Get sunglasses
   * @return sunglasses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getSunglasses() {
    return sunglasses;
  }


  public void setSunglasses(Boolean sunglasses) {
    this.sunglasses = sunglasses;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the VerifyPhotoIdWithSelfieResponseEntitySelfie instance itself
   */
  public VerifyPhotoIdWithSelfieResponseEntitySelfie putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VerifyPhotoIdWithSelfieResponseEntitySelfie verifyPhotoIdWithSelfieResponseEntitySelfie = (VerifyPhotoIdWithSelfieResponseEntitySelfie) o;
    return Objects.equals(this.confidenceValue, verifyPhotoIdWithSelfieResponseEntitySelfie.confidenceValue) &&
        Objects.equals(this.match, verifyPhotoIdWithSelfieResponseEntitySelfie.match) &&
        Objects.equals(this.photoIdImageBlurry, verifyPhotoIdWithSelfieResponseEntitySelfie.photoIdImageBlurry) &&
        Objects.equals(this.selfieImageBlurry, verifyPhotoIdWithSelfieResponseEntitySelfie.selfieImageBlurry) &&
        Objects.equals(this.selfieGlare, verifyPhotoIdWithSelfieResponseEntitySelfie.selfieGlare) &&
        Objects.equals(this.photoIdGlare, verifyPhotoIdWithSelfieResponseEntitySelfie.photoIdGlare) &&
        Objects.equals(this.ageRange, verifyPhotoIdWithSelfieResponseEntitySelfie.ageRange) &&
        Objects.equals(this.sunglasses, verifyPhotoIdWithSelfieResponseEntitySelfie.sunglasses)&&
        Objects.equals(this.additionalProperties, verifyPhotoIdWithSelfieResponseEntitySelfie.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(confidenceValue, match, photoIdImageBlurry, selfieImageBlurry, selfieGlare, photoIdGlare, ageRange, sunglasses, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VerifyPhotoIdWithSelfieResponseEntitySelfie {\n");
    sb.append("    confidenceValue: ").append(toIndentedString(confidenceValue)).append("\n");
    sb.append("    match: ").append(toIndentedString(match)).append("\n");
    sb.append("    photoIdImageBlurry: ").append(toIndentedString(photoIdImageBlurry)).append("\n");
    sb.append("    selfieImageBlurry: ").append(toIndentedString(selfieImageBlurry)).append("\n");
    sb.append("    selfieGlare: ").append(toIndentedString(selfieGlare)).append("\n");
    sb.append("    photoIdGlare: ").append(toIndentedString(photoIdGlare)).append("\n");
    sb.append("    ageRange: ").append(toIndentedString(ageRange)).append("\n");
    sb.append("    sunglasses: ").append(toIndentedString(sunglasses)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("confidence_value");
    openapiFields.add("match");
    openapiFields.add("photoId_image_blurry");
    openapiFields.add("selfie_image_blurry");
    openapiFields.add("selfie_glare");
    openapiFields.add("photoId_glare");
    openapiFields.add("age_range");
    openapiFields.add("sunglasses");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to VerifyPhotoIdWithSelfieResponseEntitySelfie
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!VerifyPhotoIdWithSelfieResponseEntitySelfie.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VerifyPhotoIdWithSelfieResponseEntitySelfie is not found in the empty JSON string", VerifyPhotoIdWithSelfieResponseEntitySelfie.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("age_range") != null && !jsonObj.get("age_range").isJsonNull()) && !jsonObj.get("age_range").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `age_range` to be a primitive type in the JSON string but got `%s`", jsonObj.get("age_range").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VerifyPhotoIdWithSelfieResponseEntitySelfie.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VerifyPhotoIdWithSelfieResponseEntitySelfie' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VerifyPhotoIdWithSelfieResponseEntitySelfie> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VerifyPhotoIdWithSelfieResponseEntitySelfie.class));

       return (TypeAdapter<T>) new TypeAdapter<VerifyPhotoIdWithSelfieResponseEntitySelfie>() {
           @Override
           public void write(JsonWriter out, VerifyPhotoIdWithSelfieResponseEntitySelfie value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public VerifyPhotoIdWithSelfieResponseEntitySelfie read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             VerifyPhotoIdWithSelfieResponseEntitySelfie instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of VerifyPhotoIdWithSelfieResponseEntitySelfie given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of VerifyPhotoIdWithSelfieResponseEntitySelfie
  * @throws IOException if the JSON string is invalid with respect to VerifyPhotoIdWithSelfieResponseEntitySelfie
  */
  public static VerifyPhotoIdWithSelfieResponseEntitySelfie fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VerifyPhotoIdWithSelfieResponseEntitySelfie.class);
  }

 /**
  * Convert an instance of VerifyPhotoIdWithSelfieResponseEntitySelfie to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

