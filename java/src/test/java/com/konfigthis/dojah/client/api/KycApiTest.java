/*
 * DOJAH Publilc APIs
 * Use Dojah to verify, onboard and manage user identity across Africa!
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.dojah.client.api;

import com.konfigthis.dojah.client.ApiException;
import com.konfigthis.dojah.client.ApiClient;
import com.konfigthis.dojah.client.ApiException;
import com.konfigthis.dojah.client.Configuration;
import com.konfigthis.dojah.client.model.GetVinResponse;
import com.konfigthis.dojah.client.model.KycCheckLivenessRequest;
import com.konfigthis.dojah.client.model.KycSubmitAddressRequest;
import com.konfigthis.dojah.client.model.KycSubmitAddressResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for KycApi
 */
@Disabled
public class KycApiTest {

    private static KycApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new KycApi(apiClient);
    }

    /**
     * Liveness Check
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void checkLivenessTest() throws ApiException {
        String image = null;
        String appId = null;
        Object response = api.checkLiveness()
                .image(image)
                .appId(appId)
                .execute();
        // TODO: test validations
    }

    /**
     * KYC - Fetch Accounts 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAccountsTest() throws ApiException {
        String appId = null;
        String bvn = null;
        Object response = api.getAccounts()
                .appId(appId)
                .bvn(bvn)
                .execute();
        // TODO: test validations
    }

    /**
     * Fetch Address Verification Data
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAddressVerificationTest() throws ApiException {
        String appId = null;
        String referenceId = null;
        Object response = api.getAddressVerification()
                .appId(appId)
                .referenceId(referenceId)
                .execute();
        // TODO: test validations
    }

    /**
     * Lookup BVN from NUBAN
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBvnFromNubanTest() throws ApiException {
        String appId = null;
        Integer bankCode = null;
        Integer accountNumber = null;
        Object response = api.getBvnFromNuban()
                .appId(appId)
                .bankCode(bankCode)
                .accountNumber(accountNumber)
                .execute();
        // TODO: test validations
    }

    /**
     * KYC - Get VIN
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getVinTest() throws ApiException {
        String appId = null;
        String vin = null;
        GetVinResponse response = api.getVin()
                .appId(appId)
                .vin(vin)
                .execute();
        // TODO: test validations
    }

    /**
     * Submit Address
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void submitAddressTest() throws ApiException {
        String street = null;
        String lga = null;
        String state = null;
        String landmark = null;
        String firstName = null;
        String lastName = null;
        String middleName = null;
        String dob = null;
        String gender = null;
        String mobile = null;
        String appId = null;
        KycSubmitAddressResponse response = api.submitAddress()
                .street(street)
                .lga(lga)
                .state(state)
                .landmark(landmark)
                .firstName(firstName)
                .lastName(lastName)
                .middleName(middleName)
                .dob(dob)
                .gender(gender)
                .mobile(mobile)
                .appId(appId)
                .execute();
        // TODO: test validations
    }

}
